{"version":3,"sources":["components/Composer/composer.module.scss","pages/Boards/components/Card/card.module.scss","pages/Boards/components/List/list.module.scss","pages/Home/components/Modal/modal.module.scss","pages/Boards/board.module.scss","components/Editor/editor.module.scss","pages/Home/home.module.scss","pages/Home/components/Modal/Content/content.module.scss","pages/Home/components/Board/board.module.scss","common/constants/api.ts","api/request.ts","store/types/board.ts","store/types/boards.ts","store/modules/boards/reducer.ts","store/modules/user/reducer.ts","store/types/modal.ts","store/modules/modal/reducer.ts","store/rootReducer.ts","store/modules/board/reducer.ts","store/store.ts","common/history/history.ts","store/modules/board/actions.ts","common/validator/validator.ts","components/Editor/Editor.tsx","pages/Boards/components/Card/Card.tsx","components/Composer/Composer.tsx","pages/Boards/components/List/List.tsx","pages/Boards/Board.tsx","pages/Home/components/Board/Board.tsx","pages/Home/components/Modal/Modal.tsx","store/modules/modal/action.ts","store/modules/boards/actions.ts","pages/Home/components/Modal/Content/Content.tsx","pages/Home/Home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","baseURL","process","boards","list","card","user","instance","axios","create","api","headers","Authorization","interceptors","response","use","res","data","BoardActionTypes","initialBoardState","board","title","users","lists","isLoading","error","inputs","BoardsActionTypes","initialState","ModalActionTypes","active","rootReducer","combineReducers","state","action","type","UPDATE_BOARD","UPDATE_BOARD_SUCCESS","payload","UPDATE_BOARD_ERROR","DELETE_BOARD","DELETE_BOARD_SUCCESS","DELETE_BOARD_ERROR","INPUT_CHANGE","UPDATE_BOARD_TITLE","UPDATE_BOARD_TITLE_SUCCESS","UPDATE_BOARD_TITLE_ERROR","ADD_LIST","ADD_LIST_SUCCESS","ADD_LIST_ERROR","DELETE_BOARD_LIST","DELETE_BOARD_LIST_SUCCESS","DELETE_BOARD_LIST_ERROR","UPDATE_BOARDS","UPDATE_BOARDS_SUCCESS","UPDATE_BOARDS_ERROR","ADD_BOARDS","ADD_BOARDS_SUCCESS","ADD_BOARDS_ERROR","modal","SHOW_MODAL","HIDE_MODAL","store","createStore","composeWithDevTools","applyMiddleware","thunk","asyncDispatch","dispatch","createBrowserHistory","getBoard","boardId","a","get","config","editBoardTitle","addList","boardID","dataWithDefaultPos","position","post","editList","listID","EDIT_BOARD_LIST","put","EDIT_BOARD_LIST_SUCCESS","EDIT_BOARD_LIST_ERROR","addCard","ADD_CARD","ADD_CARD_SUCCESS","ADD_CARD_ERROR","editCard","cardID","EDIT_BOARD_CARD","EDIT_BOARD_CARD_SUCCESS","EDIT_BOARD_CARD_ERROR","pattern","text","test","Editor","className","entityID","useState","isHide","setHide","setText","useDispatch","useParams","id","handleToggleHide","style","modifierEditArea","join","autoFocus","onFocus","event","target","select","onBlur","value","trim","onKeyPress","key","currentTarget","blur","onChange","validator","modifierTitle","hide","onClick","Card","props","focused","setFocus","hoverCard","setHoverCard","toggleButt","toggleButtonHide","container","onMouseEnter","onMouseLeave","buttonRemove","DELETE_BOARD_CARD","delete","DELETE_BOARD_CARD_SUCCESS","DELETE_BOARD_CARD_ERROR","deleteCard","icon","Composer","buttonTitle","placeholder","input","setInput","toggleHide","handlerAdd","list_id","wrapper","composer","textArea","ref","field","focus","control","buttonAdd","buttonCancel","makeCard","cards","Object","keys","map","toString","List","header","buttonRemoveList","deleteList","buttonAddCard","Board","getBoardID","handlerFocusIn","handlerFocusOut","asyncSetTitle","setBoardTitle","handlerChangeTitle","handlerClickEnter","handlerDeleteBoard","dispatchDeleteBoard","deleteBoard","asyncGetBoard","this","to","inputStyle","fontSize","boardCanvas","buttonAddList","makeLists","Component","mapDispatchToProps","newTitle","history","back","withRouter","connect","ownProps","match","params","Modal","setActive","children","content","stopPropagation","setModalActive","getBoards","onAddBoard","titleName","injectStyles","inputText","buttonCreate","Home","onClickAddBoard","asyncGetBoards","borders","button","makeBoards","Content","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a40cf7b7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"composer_wrapper__2KfPI\",\"composer\":\"composer_composer__7SBJz\",\"textArea\":\"composer_textArea__3KQqa\",\"hide\":\"composer_hide__2p0Do\",\"buttonAdd\":\"composer_buttonAdd__17Wsw\",\"buttonCancel\":\"composer_buttonCancel__1QZr6\",\"control\":\"composer_control__3qFBh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"card_container__1SVz6\",\"card\":\"card_card__1TKlw\",\"title\":\"card_title__1sXlL\",\"buttonRemove\":\"card_buttonRemove__2DT0r\",\"hide\":\"card_hide__1RovW\",\"icon\":\"card_icon__V2jyV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"list_list__2LicW\",\"header\":\"list_header__2YD2u\",\"title\":\"list_title__1HuWP\",\"cards\":\"list_cards__1AhkS\",\"buttonRemoveList\":\"list_buttonRemoveList__1isw7\",\"icon\":\"list_icon__3h4uk\",\"buttonAddCard\":\"list_buttonAddCard__2lBWg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__V7Kw9\",\"active\":\"modal_active__1cUFi\",\"content\":\"modal_content__2xwHk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"board_header__3YuNo\",\"boardCanvas\":\"board_boardCanvas__1pAmd\",\"lists\":\"board_lists__31BMR\",\"buttonAddList\":\"board_buttonAddList__2DTa5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hide\":\"editor_hide__33Vr5\",\"modifierTitle\":\"editor_modifierTitle__1K9Il\",\"modifierEditArea\":\"editor_modifierEditArea__2rJEl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"home_title__3CEKH\",\"borders\":\"home_borders__1uvQo\",\"button\":\"home_button__3i_HQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"content_content__2NNUk\",\"text\":\"content_text__yo7sa\",\"buttonCreate\":\"content_buttonCreate__227aj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"board_board__2o7ge\"};","export default {\n  baseURL: process.env.REACT_APP_API_URL || '',\n  boards: '/board',\n  list: '/list',\n  card: '/card',\n  user: '/user',\n};\n\nexport interface IDataList {\n  title: string;\n  position?: number;\n}\n\nexport interface IDataCard {\n  title: string;\n  list_id?: number;\n  position?: number;\n}\n","import axios from 'axios';\nimport { api } from '../common/constants';\n\nconst instance = axios.create({\n  baseURL: api.baseURL,\n  headers: {\n    'Content-Type': 'application/json',\n    Authorization: 'Bearer 123', // к этому мы ещё вернёмся как-нибудь потом\n  },\n});\n\ninstance.interceptors.response.use((res) => res.data);\n\nexport default instance;\n","import { IBoardFull } from '../../common/interfaces/IBoardFull';\n\nexport interface BoardState {\n  board: IBoardFull;\n  isLoading: boolean;\n  error: null | string;\n  inputs: { title: string };\n}\n\nexport const initialBoardState: BoardState = {\n  board: { title: '', users: [], lists: {} },\n  isLoading: false,\n  error: null,\n  inputs: { title: '' },\n};\n\nexport enum BoardActionTypes {\n  // UPDATE BOARD\n  UPDATE_BOARD = 'UPDATE_BOARD',\n  UPDATE_BOARD_SUCCESS = 'UPDATE_BOARD_SUCCESS',\n  UPDATE_BOARD_ERROR = 'UPDATE_BOARD_ERROR',\n  // DELETE\n  DELETE_BOARD = 'DELETE_BOARD',\n  DELETE_BOARD_SUCCESS = 'DELETE_BOARD_SUCCESS',\n  DELETE_BOARD_ERROR = 'DELETE_BOARD_ERROR',\n  // UPDATE BOARD TITLE\n  UPDATE_BOARD_TITLE = 'UPDATE_BOARD_TITLE',\n  UPDATE_BOARD_TITLE_SUCCESS = 'UPDATE_BOARD_TITLE_SUCCESS',\n  UPDATE_BOARD_TITLE_ERROR = 'UPDATE_BOARD_TITLE_ERROR',\n  // INPUT CHANGE\n  INPUT_CHANGE = 'INPUT_CHANGE',\n  // ADD LIST\n  ADD_LIST = 'ADD_LIST',\n  ADD_LIST_SUCCESS = 'ADD_LIST_SUCCESS',\n  ADD_LIST_ERROR = 'ADD_LIST_ERROR',\n  // DELETE LIST\n  DELETE_BOARD_LIST = 'DELETE_BOARD_LIST',\n  DELETE_BOARD_LIST_SUCCESS = 'DELETE_BOARD_LIST_SUCCESS',\n  DELETE_BOARD_LIST_ERROR = 'DELETE_BOARD_LIST_ERROR',\n  // EDIT LIST\n  EDIT_BOARD_LIST = 'EDIT_BOARD_LIST',\n  EDIT_BOARD_LIST_SUCCESS = 'EDIT_BOARD_LIST_SUCCESS',\n  EDIT_BOARD_LIST_ERROR = 'EDIT_BOARD_LIST_ERROR',\n  // ADD CARD\n  ADD_CARD = 'ADD_CARD',\n  ADD_CARD_SUCCESS = 'ADD_CARD_SUCCESS',\n  ADD_CARD_ERROR = 'ADD_CARD_ERROR',\n  // DELETE CARD\n  DELETE_BOARD_CARD = 'DELETE_BOARD_CARD',\n  DELETE_BOARD_CARD_SUCCESS = 'DELETE_BOARD_CARD_SUCCESS',\n  DELETE_BOARD_CARD_ERROR = 'DELETE_BOARD_CARD_ERROR',\n  // EDIT CARD\n  EDIT_BOARD_CARD = 'EDIT_BOARD_CARD',\n  EDIT_BOARD_CARD_SUCCESS = 'EDIT_BOARD_CARD_SUCCESS',\n  EDIT_BOARD_CARD_ERROR = 'EDIT_BOARD_CARD_ERROR',\n}\n\ninterface ActionUpdateBoard {\n  type: BoardActionTypes.UPDATE_BOARD;\n}\n\ninterface ActionUpdateBoardSuccess {\n  type: BoardActionTypes.UPDATE_BOARD_SUCCESS;\n  payload: IBoardFull;\n}\n\ninterface ActionUpdateBoardError {\n  type: BoardActionTypes.UPDATE_BOARD_ERROR;\n  payload: string;\n}\n\ninterface ActionDeleteBoard {\n  type: BoardActionTypes.DELETE_BOARD;\n}\n\ninterface ActionDeleteBoardSuccess {\n  type: BoardActionTypes.DELETE_BOARD_SUCCESS;\n  payload: boolean;\n}\n\ninterface ActionDeleteBoardError {\n  type: BoardActionTypes.DELETE_BOARD_ERROR;\n  payload: string;\n}\n\ninterface ActionInputChange {\n  type: BoardActionTypes.INPUT_CHANGE;\n  payload: string;\n}\n\ninterface ActionUpdateBoardTitle {\n  type: BoardActionTypes.UPDATE_BOARD_TITLE;\n}\n\ninterface ActionUpdateBoardTitleSuccess {\n  type: BoardActionTypes.UPDATE_BOARD_TITLE_SUCCESS;\n  payload: string;\n}\n\ninterface ActionUpdateBoardTitleError {\n  type: BoardActionTypes.UPDATE_BOARD_TITLE_ERROR;\n  payload: string;\n}\n\ninterface ActionAddList {\n  type: BoardActionTypes.ADD_LIST;\n}\n\ninterface ActionAddListSuccess {\n  type: BoardActionTypes.ADD_LIST_SUCCESS;\n}\n\ninterface ActionAddListError {\n  type: BoardActionTypes.ADD_LIST_ERROR;\n  payload: string;\n}\n\ninterface ActionDeleteList {\n  type: BoardActionTypes.DELETE_BOARD_LIST;\n}\n\ninterface ActionDeleteListSuccess {\n  type: BoardActionTypes.DELETE_BOARD_LIST_SUCCESS;\n}\n\ninterface ActionDeleteListError {\n  type: BoardActionTypes.DELETE_BOARD_LIST_ERROR;\n  payload: string;\n}\n\ninterface ActionAddCard {\n  type: BoardActionTypes.ADD_CARD;\n}\n\ninterface ActionAddCardSuccess {\n  type: BoardActionTypes.ADD_CARD_SUCCESS;\n}\n\ninterface ActionAddCardError {\n  type: BoardActionTypes.ADD_CARD_ERROR;\n  payload: string;\n}\n\ninterface ActionDeleteCard {\n  type: BoardActionTypes.DELETE_BOARD_CARD;\n}\n\ninterface ActionDeleteCardSuccess {\n  type: BoardActionTypes.DELETE_BOARD_CARD_SUCCESS;\n}\n\ninterface ActionDeleteCardError {\n  type: BoardActionTypes.DELETE_BOARD_CARD_ERROR;\n  payload: string;\n}\n\ninterface ActionEditList {\n  type: BoardActionTypes.EDIT_BOARD_LIST;\n}\n\ninterface ActionEditListSuccess {\n  type: BoardActionTypes.EDIT_BOARD_LIST_SUCCESS;\n}\n\ninterface ActionEditListError {\n  type: BoardActionTypes.EDIT_BOARD_LIST_ERROR;\n  payload: string;\n}\n\ninterface ActionEditCard {\n  type: BoardActionTypes.EDIT_BOARD_CARD;\n}\n\ninterface ActionEditCardSuccess {\n  type: BoardActionTypes.EDIT_BOARD_CARD_SUCCESS;\n}\n\ninterface ActionEditCardError {\n  type: BoardActionTypes.EDIT_BOARD_CARD_ERROR;\n  payload: string;\n}\n\nexport type BoardAction =\n  | ActionUpdateBoard\n  | ActionUpdateBoardSuccess\n  | ActionUpdateBoardError\n  | ActionInputChange\n  | ActionDeleteBoard\n  | ActionDeleteBoardSuccess\n  | ActionDeleteBoardError\n  | ActionUpdateBoardTitle\n  | ActionUpdateBoardTitleSuccess\n  | ActionUpdateBoardTitleError\n  | ActionAddList\n  | ActionAddListSuccess\n  | ActionAddListError\n  | ActionDeleteList\n  | ActionDeleteListSuccess\n  | ActionDeleteListError\n  | ActionEditList\n  | ActionEditListSuccess\n  | ActionEditListError\n  | ActionAddCard\n  | ActionAddCardSuccess\n  | ActionAddCardError\n  | ActionDeleteCard\n  | ActionDeleteCardSuccess\n  | ActionDeleteCardError\n  | ActionEditCard\n  | ActionEditCardSuccess\n  | ActionEditCardError;\n","import { IBoard } from '../../common/interfaces/IBoard';\n\nexport interface BoardsState {\n  boards: [] | IBoard[];\n  isLoading: boolean;\n  error: null | string;\n}\n\nexport enum BoardsActionTypes {\n  UPDATE_BOARDS = 'UPDATE_BOARDS',\n  UPDATE_BOARDS_SUCCESS = 'UPDATE_BOARDS_SUCCESS',\n  UPDATE_BOARDS_ERROR = 'UPDATE_BOARDS_ERROR',\n  ADD_BOARDS = 'ADD_BOARDS',\n  ADD_BOARDS_SUCCESS = 'ADD_BOARDS_SUCCESS',\n  ADD_BOARDS_ERROR = 'ADD_BOARDS_ERROR',\n}\n\ninterface ActionUpdateBoards {\n  type: BoardsActionTypes.UPDATE_BOARDS;\n}\n\ninterface ActionUpdateBoardsSuccess {\n  type: BoardsActionTypes.UPDATE_BOARDS_SUCCESS;\n  payload: IBoard[];\n}\n\ninterface ActionUpdateBoardsError {\n  type: BoardsActionTypes.UPDATE_BOARDS_ERROR;\n  payload: string;\n}\n\ninterface ActionAddBoards {\n  type: BoardsActionTypes.ADD_BOARDS;\n}\n\ninterface ActionAddBoardsSuccess {\n  type: BoardsActionTypes.ADD_BOARDS_SUCCESS;\n}\n\ninterface ActionAddBoardsError {\n  type: BoardsActionTypes.ADD_BOARDS_ERROR;\n  payload: string;\n}\n\nexport type BoardsAction =\n  | ActionUpdateBoards\n  | ActionUpdateBoardsSuccess\n  | ActionUpdateBoardsError\n  | ActionAddBoards\n  | ActionAddBoardsSuccess\n  | ActionAddBoardsError;\n","import { BoardsState, BoardsAction, BoardsActionTypes } from '../../types/boards';\n\nconst initialState: BoardsState = {\n  boards: [],\n  isLoading: false,\n  error: null,\n};\n\nexport default function reducer(state = initialState, action: BoardsAction): BoardsState {\n  switch (action.type) {\n    case BoardsActionTypes.UPDATE_BOARDS:\n      return { isLoading: true, error: null, boards: [] };\n    case BoardsActionTypes.UPDATE_BOARDS_SUCCESS:\n      return { isLoading: false, error: null, boards: action.payload };\n    case BoardsActionTypes.UPDATE_BOARDS_ERROR:\n      return { isLoading: false, error: action.payload, boards: [] };\n    case BoardsActionTypes.ADD_BOARDS:\n      return { ...state, isLoading: true };\n    case BoardsActionTypes.ADD_BOARDS_SUCCESS:\n      return { ...state, isLoading: false };\n    case BoardsActionTypes.ADD_BOARDS_ERROR:\n      return { ...state, isLoading: false };\n    default:\n      return state;\n  }\n}\n","export interface UserState {\n  user: [];\n}\n\nconst initialState: UserState = {\n  user: [],\n};\n\nexport default function reducer(state = initialState, action: { type: string }): UserState {\n  switch (action.type) {\n    default: {\n      return { ...state };\n    }\n  }\n}\n","export interface ModalState {\n  active: boolean;\n}\n\nexport enum ModalActionTypes {\n  SHOW_MODAL = 'SHOW_MODAL',\n  HIDE_MODAL = 'HIDE_MODAL',\n}\n\ninterface ActionStart {\n  type: ModalActionTypes.SHOW_MODAL;\n}\n\ninterface ActionStop {\n  type: ModalActionTypes.HIDE_MODAL;\n}\n\nexport type ModalAction = ActionStart | ActionStop;\n","import { ModalAction, ModalActionTypes, ModalState } from '../../types/modal';\n\nconst initialState: ModalState = {\n  active: false,\n};\n\nexport default function reducer(state = initialState, action: ModalAction): ModalState {\n  switch (action.type) {\n    case ModalActionTypes.SHOW_MODAL:\n      return { active: true };\n    case ModalActionTypes.HIDE_MODAL:\n      return { active: false };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport boardReducer from './modules/board/reducer';\nimport boardsReducer from './modules/boards/reducer';\nimport userReducer from './modules/user/reducer';\nimport modalReducer from './modules/modal/reducer';\n\nexport const rootReducer = combineReducers({\n  board: boardReducer,\n  boards: boardsReducer,\n  user: userReducer,\n  modal: modalReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { BoardAction, BoardActionTypes, BoardState, initialBoardState } from '../../types/board';\n\nexport default function reducer(state = initialBoardState, action: BoardAction): BoardState {\n  switch (action.type) {\n    case BoardActionTypes.UPDATE_BOARD:\n      return { ...state, isLoading: true };\n    case BoardActionTypes.UPDATE_BOARD_SUCCESS:\n      return { ...state, isLoading: false, board: action.payload, inputs: { title: action.payload.title } };\n    case BoardActionTypes.UPDATE_BOARD_ERROR:\n      return { ...state, isLoading: false, error: action.payload };\n    case BoardActionTypes.DELETE_BOARD:\n      return { ...state, isLoading: true };\n    case BoardActionTypes.DELETE_BOARD_SUCCESS:\n      return { ...state, isLoading: false };\n    case BoardActionTypes.DELETE_BOARD_ERROR:\n      return { ...state, isLoading: false, error: action.payload };\n    case BoardActionTypes.INPUT_CHANGE:\n      return { ...state, inputs: { title: action.payload } };\n    case BoardActionTypes.UPDATE_BOARD_TITLE:\n      return { ...state, isLoading: true };\n    case BoardActionTypes.UPDATE_BOARD_TITLE_SUCCESS:\n      return { ...state, isLoading: false, board: { ...state.board, title: action.payload } };\n    case BoardActionTypes.UPDATE_BOARD_TITLE_ERROR:\n      return { ...state, isLoading: false, error: action.payload };\n    case BoardActionTypes.ADD_LIST:\n      return { ...state, isLoading: true };\n    case BoardActionTypes.ADD_LIST_SUCCESS:\n      return { ...state, isLoading: false };\n    case BoardActionTypes.ADD_LIST_ERROR:\n      return { ...state, isLoading: false, error: action.payload };\n    case BoardActionTypes.DELETE_BOARD_LIST:\n      return { ...state, isLoading: true };\n    case BoardActionTypes.DELETE_BOARD_LIST_SUCCESS:\n      return { ...state, isLoading: false };\n    case BoardActionTypes.DELETE_BOARD_LIST_ERROR:\n      return { ...state, isLoading: false };\n    default: {\n      return state;\n    }\n  }\n}\n","import { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from './rootReducer';\nimport { UserState } from './modules/user/reducer';\nimport { ModalState } from './types/modal';\nimport { BoardState, initialBoardState } from './types/board';\nimport { BoardsState } from './types/boards';\n\nexport interface AppState {\n  board: BoardState;\n  boards: BoardsState;\n  user: UserState;\n  modal: ModalState;\n}\n\nconst initialState: AppState = {\n  board: initialBoardState,\n  boards: { boards: [], isLoading: false, error: null },\n  user: { user: [] },\n  modal: { active: false },\n};\n\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(thunk)));\n\nexport const asyncDispatch = store.dispatch;\nexport default store;\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();\n","import { Dispatch } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\nimport api from '../../../api/request';\nimport config, { IDataCard, IDataList } from '../../../common/constants/api';\nimport { BoardAction, BoardActionTypes } from '../../types/board';\nimport { AppState, asyncDispatch } from '../../store';\nimport history from '../../../common/history/history';\n\ntype ThunkType = ThunkAction<Promise<void>, AppState, unknown, BoardAction>;\n\nexport const getBoard = (boardId: string) => async (dispatch: Dispatch): Promise<void> => {\n  try {\n    dispatch({ type: BoardActionTypes.UPDATE_BOARD });\n    const board = await api.get(`${config.boards}/${boardId}`);\n    dispatch({ type: BoardActionTypes.UPDATE_BOARD_SUCCESS, payload: board });\n  } catch (e) {\n    dispatch({ type: BoardActionTypes.UPDATE_BOARD_ERROR, payload: 'Призошла ошибка при получении доски' });\n  }\n};\n\nexport const setBoardTitle = (boardID: string, newTitle: string): ThunkType => async (dispatch): Promise<void> => {\n  try {\n    dispatch({ type: BoardActionTypes.UPDATE_BOARD_TITLE });\n    await api.put(`${config.boards}/${boardID}`, { title: newTitle });\n    dispatch({ type: BoardActionTypes.UPDATE_BOARD_TITLE_SUCCESS, payload: newTitle });\n  } catch (e) {\n    dispatch({\n      type: BoardActionTypes.UPDATE_BOARD_TITLE_ERROR,\n      payload: 'Призошла ошибка при изменении заголовка доски',\n    });\n  }\n};\n\nexport const editBoardTitle = (title: string): void => {\n  asyncDispatch({ type: BoardActionTypes.INPUT_CHANGE, payload: title });\n};\n\nexport const deleteBoard = (boardID: string) => async (dispatch: Dispatch<BoardAction>): Promise<void> => {\n  try {\n    dispatch({ type: BoardActionTypes.DELETE_BOARD });\n    await api.delete(`${config.boards}/${boardID}`);\n    dispatch({ type: BoardActionTypes.DELETE_BOARD_SUCCESS, payload: true });\n    history.back();\n  } catch (e) {\n    dispatch({ type: BoardActionTypes.DELETE_BOARD_ERROR, payload: 'Произошла ошибка при удалении доски' });\n  }\n};\n\nexport const addList = (boardID: string, data: IDataList): ThunkType => async (dispatch): Promise<void> => {\n  try {\n    dispatch({ type: BoardActionTypes.ADD_LIST });\n    const dataWithDefaultPos = data.position ? data : { ...data, position: 1 };\n    await api.post(`${config.boards}/${boardID + config.list}`, dataWithDefaultPos);\n    dispatch({ type: BoardActionTypes.ADD_LIST_SUCCESS });\n    await dispatch(getBoard(boardID));\n  } catch (e) {\n    dispatch({ type: BoardActionTypes.ADD_LIST_ERROR, payload: 'Произошла ошибка при добавлении списка' });\n  }\n};\n\nexport const deleteList = (boardID: string, listID: number): ThunkType => async (dispatch): Promise<void> => {\n  try {\n    dispatch({ type: BoardActionTypes.DELETE_BOARD_LIST });\n    await api.delete(`${config.boards}/${boardID + config.list}/${listID}`);\n    dispatch({ type: BoardActionTypes.DELETE_BOARD_LIST_SUCCESS });\n    await dispatch(getBoard(boardID));\n  } catch (e) {\n    dispatch({ type: BoardActionTypes.DELETE_BOARD_LIST_ERROR, payload: 'Произошла ошибка при удалении списка' });\n  }\n};\n\nexport const editList = (boardID: string, listID: number, data: IDataList): ThunkType => async (\n  dispatch\n): Promise<void> => {\n  try {\n    dispatch({ type: BoardActionTypes.EDIT_BOARD_LIST });\n    // const dataFinal = data.position ? data : { ...data, position: 1 };\n    await api.put(`${config.boards}/${boardID + config.list}/${listID}`, data);\n    dispatch({ type: BoardActionTypes.EDIT_BOARD_LIST_SUCCESS });\n    await dispatch(getBoard(boardID));\n  } catch (e) {\n    dispatch({\n      type: BoardActionTypes.EDIT_BOARD_LIST_ERROR,\n      payload: 'Произошла ошибка при изменении заголовка списка',\n    });\n  }\n};\n\nexport const addCard = (boardID: string, data: IDataCard): ThunkType => async (dispatch): Promise<void> => {\n  try {\n    dispatch({ type: BoardActionTypes.ADD_CARD });\n    await api.post(`${config.boards}/${boardID + config.card}`, data);\n    dispatch({ type: BoardActionTypes.ADD_CARD_SUCCESS });\n    await dispatch(getBoard(boardID));\n  } catch (e) {\n    dispatch({ type: BoardActionTypes.ADD_CARD_ERROR, payload: 'Произошла ошибка при добавлении карточки' });\n  }\n};\n\nexport const deleteCard = (boardID: string, cardID: number): ThunkType => async (dispatch): Promise<void> => {\n  try {\n    dispatch({ type: BoardActionTypes.DELETE_BOARD_CARD });\n    await api.delete(`${config.boards}/${boardID + config.card}/${cardID}`);\n    dispatch({ type: BoardActionTypes.DELETE_BOARD_CARD_SUCCESS });\n    await dispatch(getBoard(boardID));\n  } catch (e) {\n    dispatch({ type: BoardActionTypes.DELETE_BOARD_CARD_ERROR, payload: 'Произошла ошибка при добавлении карточки' });\n  }\n};\n\nexport const editCard = (boardID: string, cardID: number, data: IDataCard): ThunkType => async (\n  dispatch\n): Promise<void> => {\n  try {\n    dispatch({ type: BoardActionTypes.EDIT_BOARD_CARD });\n    await api.put(`${config.boards}/${boardID + config.card}/${cardID}`, data);\n    dispatch({ type: BoardActionTypes.EDIT_BOARD_CARD_SUCCESS });\n    await dispatch(getBoard(boardID));\n  } catch (e) {\n    dispatch({\n      type: BoardActionTypes.EDIT_BOARD_CARD_ERROR,\n      payload: 'Произошла ошибка при изменении заголовка карточки',\n    });\n  }\n};\n\nexport type ActionsTypeAdd = typeof addList | typeof addCard;\nexport type ActionsTypeEdit = typeof editList | typeof editCard;\n","export default (pattern: RegExp, text: string): boolean => pattern.test(text);\nexport const pattern = /^((\\w|[А-ЯЁа-яё])+[\\s.-]?)+$|^$/;\n","import React, { ChangeEvent, FC, FocusEvent, KeyboardEvent, useState } from 'react';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport { useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { ActionsTypeEdit, editCard, editList } from '../../store/modules/board/actions';\nimport validator, { pattern } from '../../common/validator/validator';\nimport style from './editor.module.scss';\n\ninterface Props {\n  title: string;\n  placeHolder?: string;\n  entityID: number;\n  action: ActionsTypeEdit;\n}\n\nconst Editor: FC<Props & React.HTMLAttributes<HTMLDivElement>> = ({ className, title, entityID, action }) => {\n  const [isHide, setHide] = useState(false);\n  const [text, setText] = useState(title);\n  const dispatch = useDispatch();\n  const { id: boardID } = useParams<{ id: string }>();\n\n  const handleToggleHide = (): void => {\n    setHide(!isHide);\n  };\n\n  const handleEditText = (event: ChangeEvent<HTMLTextAreaElement>): void => {\n    if (validator(pattern, event.target.value)) {\n      setText(event.target.value);\n    }\n  };\n\n  const handleFocusOut = (event: FocusEvent<HTMLTextAreaElement>): void => {\n    if (event.target.value && event.target.value !== title) {\n      setText(event.target.value.trim());\n      switch (action) {\n        case editList:\n          dispatch(editList(boardID, entityID, { title: event.target.value }));\n          break;\n        case editCard:\n          dispatch(editCard(boardID, entityID, { title: event.target.value }));\n          break;\n        default:\n      }\n    } else {\n      setText(title);\n    }\n    handleToggleHide();\n  };\n  const handleClickEnter = (event: KeyboardEvent<HTMLTextAreaElement>): void => {\n    if (event.key === 'Enter') {\n      event.currentTarget.blur();\n    }\n  };\n  if (!isHide) {\n    return (\n      <p\n        className={\n          isHide ? [className, style.modifierTitle, style.hide].join(' ') : [className, style.modifierTitle].join(' ')\n        }\n        onClick={handleToggleHide}\n      >\n        {text}\n      </p>\n    );\n  }\n\n  return (\n    <TextareaAutosize\n      className={[className, style.modifierEditArea].join(' ')}\n      autoFocus\n      onFocus={(event): void => {\n        event.target.select();\n      }}\n      onBlur={handleFocusOut}\n      onKeyPress={handleClickEnter}\n      onChange={handleEditText}\n      value={text}\n    />\n  );\n};\n\nexport default Editor;\n","import React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { ICard } from '../../../../common/interfaces/ICard';\nimport { deleteCard, editCard } from '../../../../store/modules/board/actions';\nimport Editor from '../../../../components/Editor/Editor';\nimport style from './card.module.scss';\n\nexport default function Card(props: ICard): React.ReactElement {\n  const [focused, setFocus] = useState(false);\n  const [hoverCard, setHoverCard] = useState(false);\n  const { id, title } = props;\n  const { id: boardID } = useParams<{ id: string }>();\n  const dispatch = useDispatch();\n\n  const handleClickDelete = (): void => {\n    dispatch(deleteCard(boardID, id));\n  };\n\n  const toggleButt = (): void => {\n    setHoverCard(!hoverCard);\n  };\n\n  const toggleButtonHide = (): void => {\n    setFocus(!focused);\n  };\n\n  return (\n    <div className={style.container} onMouseEnter={toggleButt} onMouseLeave={toggleButt}>\n      <li className={style.card} onBlur={toggleButtonHide} onFocus={toggleButtonHide}>\n        <Editor className={style.title} title={title} entityID={id} action={editCard} />\n      </li>\n      <button\n        className={!hoverCard || focused ? [style.buttonRemove, style.hide].join(' ') : style.buttonRemove}\n        onClick={handleClickDelete}\n      >\n        <span className={`material-icons ${style.icon}`}>delete_forever</span>\n      </button>\n    </div>\n  );\n}\n","import React, { ChangeEvent, KeyboardEvent, FC, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { ActionsTypeAdd, addCard, addList } from '../../store/modules/board/actions';\nimport validator, { pattern } from '../../common/validator/validator';\nimport style from './composer.module.scss';\n\ninterface Props {\n  buttonTitle: string;\n  placeholder?: string;\n  action: ActionsTypeAdd;\n  listID?: number;\n}\n\nconst Composer: FC<Props & React.HTMLAttributes<HTMLDivElement>> = ({\n  className,\n  buttonTitle,\n  placeholder = '',\n  action,\n  listID = 0,\n}) => {\n  const [hide, setHide] = useState(false);\n  const [input, setInput] = useState('');\n  const dispatch = useDispatch();\n  const { id } = useParams<{ id: string }>();\n\n  const toggleHide = (): void => {\n    setHide(!hide);\n    setInput('');\n  };\n\n  const handlerAdd = (): void => {\n    switch (action) {\n      case addList:\n        dispatch(addList(id, { title: input }));\n        break;\n      case addCard:\n        dispatch(addCard(id, { title: input, list_id: listID }));\n        break;\n      default:\n    }\n    toggleHide();\n  };\n\n  const handleChangeText = (event: ChangeEvent<HTMLTextAreaElement>): void => {\n    if (validator(pattern, event.target.value)) {\n      setInput(event.target.value);\n    }\n  };\n\n  const onKeyPressEnter = (event: KeyboardEvent<HTMLTextAreaElement>): void => {\n    if (event.key === 'Enter' && input) {\n      handlerAdd();\n    }\n  };\n\n  return (\n    <div className={style.wrapper}>\n      <button className={hide ? [className, style.hide].join(' ') : className} onClick={toggleHide}>\n        + {buttonTitle}\n      </button>\n      <div className={hide ? style.composer : [style.composer, style.hide].join(' ')}>\n        <textarea\n          className={style.textArea}\n          ref={(field): null | void => field && field.focus()}\n          placeholder={placeholder}\n          value={input}\n          onKeyPress={onKeyPressEnter}\n          onChange={handleChangeText}\n        />\n        <div className={style.control}>\n          <button className={style.buttonAdd} onClick={handlerAdd}>\n            Добавить\n          </button>\n          <button className={style.buttonCancel} onClick={toggleHide}>\n            Отмена\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Composer;\n","import React, { ReactElement } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport Card from '../Card/Card';\nimport { ICards } from '../../../../common/interfaces/ICards';\nimport { IList } from '../../../../common/interfaces/IList';\nimport { addCard, deleteList, editList } from '../../../../store/modules/board/actions';\nimport Composer from '../../../../components/Composer/Composer';\nimport Editor from '../../../../components/Editor/Editor';\nimport style from './list.module.scss';\n\nfunction makeCard(cards: ICards): ReactElement[] {\n  return Object.keys(cards).map((value) => {\n    const card = cards[value];\n    return <Card key={card.id.toString()} {...card} />;\n  });\n}\n\nexport default function List(props: IList): ReactElement {\n  const { title, cards, id } = props;\n  const dispatch = useDispatch();\n  const { id: boardID } = useParams<{ id: string }>();\n  const handleClickDeleteList = (): void => {\n    dispatch(deleteList(boardID, id));\n  };\n  return (\n    <div className={style.list}>\n      <div className={style.header}>\n        <Editor className={style.title} title={title} entityID={id} action={editList} />\n        <button className={style.buttonRemoveList} onClick={handleClickDeleteList}>\n          <span className={`material-icons ${style.icon}`}>delete_forever</span>\n        </button>\n      </div>\n      <ul className={style.cards}>{makeCard(cards)}</ul>\n      <Composer\n        className={style.buttonAddCard}\n        placeholder=\"Ввести заголовок для этой карточки\"\n        buttonTitle=\"Добавить карточку\"\n        action={addCard}\n        listID={id}\n      />\n    </div>\n  );\n}\n","import React, { ChangeEvent, Component, FocusEvent, KeyboardEvent, ReactElement } from 'react';\nimport AutosizeInput from 'react-input-autosize';\nimport { Link, RouteComponentProps, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { addList, deleteBoard, editBoardTitle, getBoard, setBoardTitle } from '../../store/modules/board/actions';\nimport List from './components/List/List';\nimport Composer from '../../components/Composer/Composer';\nimport validator, { pattern } from '../../common/validator/validator';\nimport { AppState } from '../../store/store';\nimport { IBoardFull } from '../../common/interfaces/IBoardFull';\nimport { IDataList } from '../../common/constants/api';\nimport style from './board.module.scss';\n\ninterface StateProps {\n  board: IBoardFull;\n  id: string;\n  inputs: { title: string };\n}\n\ninterface DispatchProps {\n  getBoard: (id: string) => void;\n  setBoardTitle: (id: string, newTitle: string) => void;\n  editBoardTitle: (newTitle: string) => void;\n  deleteBoard: (id: string) => void;\n  addList: (id: string, data: IDataList) => void;\n}\n\ntype RouteProps = RouteComponentProps<{ id: string }>;\n\ntype PropsType = StateProps & DispatchProps & RouteProps;\n\nclass Board extends Component<PropsType> {\n  componentDidMount(): void {\n    const { getBoard: asyncGetBoard } = this.props;\n    asyncGetBoard(this.getBoardID());\n  }\n\n  getBoardID = (): string => {\n    const { id } = this.props;\n    return id;\n  };\n\n  handlerFocusIn = (event: FocusEvent<HTMLInputElement>): void => {\n    event.target.select();\n  };\n\n  handlerFocusOut = (event: FocusEvent<HTMLInputElement>): void => {\n    const title = event.target.value.trim();\n    const { board } = this.props;\n    if (title && title !== board.title) {\n      const { setBoardTitle: asyncSetTitle } = this.props;\n      asyncSetTitle(this.getBoardID(), title);\n    } else {\n      editBoardTitle(board.title);\n    }\n  };\n\n  handlerChangeTitle = (event: ChangeEvent<HTMLInputElement>): void => {\n    if (validator(pattern, event.target.value)) {\n      editBoardTitle(event.target.value);\n    }\n  };\n\n  handlerClickEnter = (event: KeyboardEvent<HTMLInputElement>): void => {\n    if (event.key === 'Enter') {\n      event.currentTarget.blur();\n    }\n  };\n\n  handlerDeleteBoard = (): void => {\n    const { deleteBoard: dispatchDeleteBoard } = this.props;\n    dispatchDeleteBoard(this.getBoardID());\n  };\n\n  makeLists(): ReactElement[] {\n    const { board } = this.props;\n    const { lists } = board;\n    return Object.keys(lists).map((value) => {\n      const list = lists[value];\n      return <List key={list.id} {...list} />;\n    });\n  }\n\n  render(): ReactElement {\n    const {\n      inputs: { title },\n    } = this.props;\n\n    return (\n      <>\n        <div className={style.header}>\n          <Link to=\"/\">Домой</Link>\n          <AutosizeInput\n            className={style.input}\n            inputStyle={{ fontSize: 18 }}\n            onFocus={this.handlerFocusIn}\n            onBlur={this.handlerFocusOut}\n            onChange={this.handlerChangeTitle}\n            onKeyPress={this.handlerClickEnter}\n            value={title}\n          />\n          <a onClick={this.handlerDeleteBoard}>Удалить доску</a>\n        </div>\n        <div className={style.boardCanvas}>\n          <div className={style.lists}>\n            <Composer\n              className={style.buttonAddList}\n              placeholder=\"Ввести заголовок списка\"\n              buttonTitle=\"Добавить список\"\n              action={addList}\n            />\n            {this.makeLists()}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state: AppState, ownProps: RouteProps): StateProps => ({\n  board: { ...state.board.board },\n  id: ownProps.match.params.id,\n  inputs: { title: state.board.inputs.title },\n});\n\nconst mapDispatchToProps: DispatchProps = { getBoard, setBoardTitle, editBoardTitle, deleteBoard, addList };\n\n// export default connect(mapStateToProps, { getBoard })(withRouter(Board));\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Board));\n","import React from 'react';\nimport style from './board.module.scss';\n\nexport default function Board({ title }: { title: string }): React.ReactElement {\n  return <div className={style.board}>{title}</div>;\n}\n","import React, { ReactElement, ReactNode } from 'react';\nimport style from './modal.module.scss';\n\ninterface PropsType {\n  active: boolean;\n  setActive: (value: boolean) => void;\n  children: ReactNode | null;\n}\n\nconst Modal = ({ active, setActive, children }: PropsType): ReactElement => (\n  <div className={active ? [style.modal, style.active].join(' ') : style.modal} onClick={(): void => setActive(false)}>\n    <div\n      className={active ? [style.content, style.active].join(' ') : style.content}\n      onClick={(event): void => {\n        event.stopPropagation();\n      }}\n    >\n      {children}\n    </div>\n  </div>\n);\n\nexport default Modal;\n","import { asyncDispatch as dispatch } from '../../store';\nimport { ModalActionTypes } from '../../types/modal';\n\nexport const setModalActive = (value: boolean): void => {\n  if (value) {\n    dispatch({ type: ModalActionTypes.SHOW_MODAL });\n  } else {\n    dispatch({ type: ModalActionTypes.HIDE_MODAL });\n  }\n};\n","import { Dispatch } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\nimport api from '../../../api/request';\nimport config from '../../../common/constants/api';\nimport { BoardsAction, BoardsActionTypes } from '../../types/boards';\nimport { setModalActive } from '../modal/action';\nimport { AppState } from '../../store';\n\ntype ThunkActionType = ThunkAction<Promise<void>, AppState, unknown, BoardsAction>;\n\nexport const getBoards = () => async (dispatch: Dispatch): Promise<void> => {\n  try {\n    dispatch({ type: BoardsActionTypes.UPDATE_BOARDS });\n    const boards = await api.get(config.boards);\n    dispatch({ type: BoardsActionTypes.UPDATE_BOARDS_SUCCESS, payload: boards });\n  } catch (e) {\n    dispatch({ type: BoardsActionTypes.UPDATE_BOARDS_ERROR, payload: 'Призошла ошибка при получении списка досок' });\n  }\n};\n\nexport const createBoard = (titleName: string): ThunkActionType => async (dispatch): Promise<void> => {\n  try {\n    dispatch({ type: BoardsActionTypes.ADD_BOARDS });\n    await api.post(config.boards, { title: titleName });\n    dispatch({ type: BoardsActionTypes.ADD_BOARDS_SUCCESS });\n    setModalActive(false);\n    await dispatch(getBoards());\n  } catch (e) {\n    dispatch({ type: BoardsActionTypes.ADD_BOARDS_ERROR, payload: 'Призошла ошибка при добавлении новой доски' });\n  }\n};\n","import React, { ChangeEvent, ReactElement, KeyboardEvent, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport AutosizeInput from 'react-input-autosize';\nimport { createBoard } from '../../../../../store/modules/boards/actions';\nimport validator, { pattern } from '../../../../../common/validator/validator';\nimport style from './content.module.scss';\n\nexport default (): ReactElement => {\n  const [text, setText] = useState('');\n  const dispatch = useDispatch();\n\n  const onChangeInput = (event: ChangeEvent<HTMLInputElement>): void => {\n    const inputText = event.target.value;\n    if (validator(pattern, inputText)) {\n      setText(inputText);\n    }\n  };\n\n  const onAddBoard = (): void => {\n    if (text) {\n      dispatch(createBoard(text.trim()));\n    }\n  };\n\n  const handlePressEnter = (event: KeyboardEvent<HTMLInputElement>): void => {\n    if (event.key === 'Enter') {\n      onAddBoard();\n    }\n  };\n\n  return (\n    <div className={style.content}>\n      <h3>Создание новой доски</h3>\n      <AutosizeInput\n        injectStyles\n        className={style.text}\n        autoFocus\n        placeholder=\"Добавить заголовок доски\"\n        type=\"text\"\n        value={text}\n        onKeyPress={handlePressEnter}\n        onChange={onChangeInput}\n      />\n      <button className={style.buttonCreate} onClick={onAddBoard}>\n        Создать доску\n      </button>\n    </div>\n  );\n};\n","import React, { Component, ReactElement } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux'; //\nimport { AppState } from '../../store/store';\nimport { IBoard } from '../../common/interfaces/IBoard';\nimport Board from './components/Board/Board';\nimport Modal from './components/Modal/Modal';\nimport Content from './components/Modal/Content/Content';\nimport { getBoards } from '../../store/modules/boards/actions';\nimport { setModalActive } from '../../store/modules/modal/action';\nimport style from './home.module.scss';\n\ntype PropsType = {\n  boards: IBoard[];\n  modal: { active: boolean };\n  getBoards: () => Promise<void>;\n  setModalActive: (value: boolean) => void;\n};\n\ninterface MapState {\n  boards: IBoard[];\n  modal: { active: boolean };\n}\n\nclass Home extends Component<PropsType> {\n  async componentDidMount(): Promise<void> {\n    const { getBoards: asyncGetBoards } = this.props;\n    await asyncGetBoards();\n  }\n\n  onClickAddBoard = (): void => {\n    setModalActive(true);\n  };\n\n  makeBoards(): ReactElement[] {\n    const { boards } = this.props;\n    return boards?.map((board) => (\n      <Link to={`/board/${board.id}`} key={board.id}>\n        <Board title={board.title} />\n      </Link>\n    ));\n  }\n\n  render(): ReactElement {\n    const { modal } = this.props;\n    return (\n      <div className={style.wrapper}>\n        <h2 className={style.title}>Мои Доски</h2>\n        <div className={style.borders}>\n          <button className={style.button} onClick={this.onClickAddBoard}>\n            + Cоздать доску\n          </button>\n          {this.makeBoards()}\n          <Modal active={modal.active} setActive={setModalActive}>\n            {modal.active ? <Content /> : null}\n          </Modal>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: AppState): MapState => {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  const { boards } = { ...state.boards.boards };\n  return {\n    boards,\n    modal: state.modal,\n  };\n};\n\nexport default connect(mapStateToProps, { getBoards, setModalActive })(Home);\n","import React, { ReactElement } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Board from './pages/Boards/Board';\nimport Home from './pages/Home/Home';\n\nexport default function App(): ReactElement {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route path=\"/board/:id\" component={Board} />\n          <Route path=\"/\" component={Home} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <div className=\"container\">\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}