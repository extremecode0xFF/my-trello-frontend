{"version":3,"sources":["pages/Boards/components/Card/Card.tsx","pages/Boards/components/List/List.tsx","pages/Boards/Board.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Card","title","className","makeCard","cards","map","card","id","toString","List","Board","props","state","lists","this","list","makeLists","Component","App","to","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4UAOe,SAASA,EAAT,GAAiD,IAAjCC,EAAgC,EAAhCA,MAC7B,OAAO,oBAAIC,UAAU,OAAd,SAAsBD,I,MCF/B,SAASE,EAASC,GAChB,OAAOA,EAAMC,KAAI,SAACC,GAAD,OAAU,cAACN,EAAD,CAA+BC,MAAOK,EAAKL,OAAhCK,EAAKC,GAAGC,eAGjC,SAASC,EAAT,GAAsD,IAAtCR,EAAqC,EAArCA,MAAOG,EAA8B,EAA9BA,MACpC,OACE,sBAAKF,UAAU,OAAf,UACE,oBAAIA,UAAU,aAAd,SAA4BD,IAC5B,oBAAIC,UAAU,aAAd,SAA4BC,EAASC,KACrC,wBAAQF,UAAU,kBAAlB,kH,UCLeQ,E,kDACnB,WAAYC,GAA+B,IAAD,8BACxC,cAAMA,IACDC,MAAQ,CACXX,MAAO,qGACPY,MAAO,CACL,CACEN,GAAI,EACJN,MAAO,iCACPG,MAAO,CACL,CAAEG,GAAI,EAAGN,MAAO,iEAChB,CAAEM,GAAI,EAAGN,MAAO,yFAChB,CAAEM,GAAI,EAAGN,MAAO,kGAGpB,CACEM,GAAI,EACJN,MAAO,0DACPG,MAAO,CAAC,CAAEG,GAAI,EAAGN,MAAO,uGAE1B,CACEM,GAAI,EACJN,MAAO,6CACPG,MAAO,CACL,CAAEG,GAAI,EAAGN,MAAO,yFAChB,CAAEM,GAAI,EAAGN,MAAO,0GAxBgB,E,6CA+B1C,WAEE,OADkBa,KAAKF,MAAfC,MACKR,KAAI,SAACU,GAAD,OAAU,cAACN,EAAD,eAAwBM,GAAbA,EAAKR,S,oBAG7C,WAAwB,IACdN,EAAUa,KAAKF,MAAfX,MACR,OACE,qCACE,sBAAKC,UAAU,eAAf,UACE,mBAAGA,UAAU,oBAAb,4CACA,mBAAGA,UAAU,cAAb,SAA4BD,OAE9B,sBAAKC,UAAU,QAAf,UACGY,KAAKE,YACN,wBAAQd,UAAU,eAAlB,6G,GA/CyBe,aCNpB,SAASC,IACtB,OACE,cAAC,IAAD,UACE,gCACE,8BACE,+BACE,6BACE,cAAC,IAAD,CAAMC,GAAG,SAAT,qBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,IAAT,yBAIN,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAK,SAASC,UAAWX,WChB1C,IAYeY,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCJdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,qBAAK/B,UAAU,YAAf,SACE,cAACgB,EAAD,QAGJgB,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.071c73ba.chunk.js","sourcesContent":["import React from 'react';\nimport './card.scss';\n\ninterface C {\n  title: string;\n}\n\nexport default function Card({ title }: C): React.ReactElement {\n  return <li className=\"card\">{title}</li>;\n}\n","import React, { ReactElement } from 'react';\nimport Card from '../Card/Card';\nimport { IList } from '../../../../common/interfaces/IList';\nimport { ICard } from '../../../../common/interfaces/ICard';\nimport './list.scss';\n\nfunction makeCard(cards: ICard[]): ReactElement[] {\n  return cards.map((card) => <Card key={card.id.toString()} title={card.title} />);\n}\n\nexport default function List({ title, cards }: IList): ReactElement {\n  return (\n    <div className=\"list\">\n      <h2 className=\"list-title\">{title}</h2>\n      <ul className=\"list-cards\">{makeCard(cards)}</ul>\n      <button className=\"list-button-add\">Добавить карточку</button>\n    </div>\n  );\n}\n","import React, { Component, ReactElement } from 'react';\nimport { IList } from '../../common/interfaces/IList';\nimport List from './components/List/List';\nimport './board.scss';\n\ninterface BoardState {\n  title: string;\n  lists: IList[];\n}\n\nexport default class Board extends Component<Record<string, never>, BoardState> {\n  constructor(props: Record<string, never>) {\n    super(props);\n    this.state = {\n      title: 'Моя тестовая доска',\n      lists: [\n        {\n          id: 1,\n          title: 'Планы',\n          cards: [\n            { id: 1, title: 'помыть кота' },\n            { id: 2, title: 'приготовить суп' },\n            { id: 3, title: 'сходить в магазин' },\n          ],\n        },\n        {\n          id: 2,\n          title: 'В процессе',\n          cards: [{ id: 4, title: 'посмотреть сериал' }],\n        },\n        {\n          id: 3,\n          title: 'Сделано',\n          cards: [\n            { id: 5, title: 'сделать домашку' },\n            { id: 6, title: 'погулять с собакой' },\n          ],\n        },\n      ],\n    };\n  }\n\n  makeLists(): ReactElement[] {\n    const { lists } = this.state;\n    return lists.map((list) => <List key={list.id} {...list} />);\n  }\n\n  render(): ReactElement {\n    const { title } = this.state;\n    return (\n      <>\n        <div className=\"board-header\">\n          <a className=\"board-button_home\">Домой</a>\n          <p className=\"board-title\">{title}</p>\n        </div>\n        <div className=\"lists\">\n          {this.makeLists()}\n          <button className=\"lists-button\">Добавить Список</button>\n        </div>\n      </>\n    );\n  }\n}\n","import React, { ReactElement } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport Board from './pages/Boards/Board';\n\nexport default function App(): ReactElement {\n  return (\n    <Router>\n      <div>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/board\">Board</Link>\n            </li>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n          </ul>\n        </nav>\n        <Switch>\n          <Route path=\"/board\" component={Board} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <div className=\"container\">\n      <App />\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}