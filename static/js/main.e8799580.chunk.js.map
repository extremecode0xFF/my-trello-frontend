{"version":3,"sources":["pages/Registration/registration.module.scss","common/constants/api.ts","common/history/history.ts","api/request.ts","store/types/board.ts","store/types/boards.ts","store/modules/boards/reducer.ts","store/types/user.ts","store/types/modal.ts","store/modules/modal/reducer.ts","store/types/drag.ts","store/rootReducer.ts","store/modules/board/reducer.ts","store/modules/user/reducer.ts","store/modules/dragndrop/reducer.ts","store/store.ts","common/notifications/notifications.ts","store/modules/board/actions.ts","hooks/useTypedSelector.ts","store/modules/dragndrop/actions.ts","pages/Board/components/Card/Card.tsx","common/validator/validator.ts","components/Composer/Composer.tsx","components/Editor/Editor.tsx","pages/Board/components/List/List.tsx","pages/Board/Board.tsx","pages/Home/components/Board/Board.tsx","components/Modal/Modal.tsx","pages/Registration/Registration.tsx","store/modules/modal/actions.ts","store/modules/boards/actions.ts","components/Modal/CreateBoard/CreateBoard.tsx","pages/Home/Home.tsx","components/Modal/EditCard/EditField/EditField.tsx","components/FormRelocate/FormRelocate.tsx","components/Modal/EditCard/EditCard.tsx","store/modules/user/actions.ts","pages/Authorization/Authorization.tsx","components/ProtectedRoute/ProtectedRoute.tsx","App.tsx","index.tsx","pages/Authorization/authorization.module.scss","pages/Board/components/Card/card.module.scss","components/Modal/EditCard/editCard.module.scss","components/FormRelocate/formRelocate.module.scss","pages/Board/components/List/list.module.scss","components/Composer/composer.module.scss","components/Modal/modal.module.scss","pages/Board/board.module.scss","pages/Home/home.module.scss","components/Editor/editor.module.scss","components/Modal/CreateBoard/content.module.scss","pages/Home/components/Board/board.module.scss"],"names":["module","exports","baseURL","process","boards","list","card","user","login","createBrowserHistory","getToken","localStorage","getItem","deleteToken","removeItem","instance","axios","create","api","admission","headers","interceptors","request","use","requestConfig","modifyRequestConfig","Authorization","history","push","response","res","data","error","message","BoardActionTypes","initialBoardState","board","title","users","lists","isLoading","boardTitle","BoardsActionTypes","initialState","UserActionTypes","ModalActionTypes","initialUserState","isAuthorized","active","DragNDropActionTypes","slot","originLists","rootReducer","combineReducers","state","action","type","UPDATE_BOARD","UPDATE_BOARD_SUCCESS","payload","UPDATE_BOARD_ERROR","INPUT_CHANGE","EDIT_BOARD","UPDATE_BOARDS","UPDATE_BOARDS_SUCCESS","UPDATE_BOARDS_ERROR","ADD_BOARDS","ADD_BOARDS_SUCCESS","ADD_BOARDS_ERROR","LOGIN","LOGIN_SUCCESS","LOGIN_ERROR","SIGNUP","SIGNUP_SUCCESS","SIGNUP_ERROR","LOGOUT","modal","SHOW_MODAL","HIDE_MODAL","drag","DRAG_UPDATE_SLOT","DRAG_SET_ORIGIN_LISTS","DRAG_END","initialDragNDropState","store","createStore","composeWithDevTools","applyMiddleware","thunk","asyncDispatch","dispatch","notification","insert","container","animationIn","animationOut","dismiss","duration","onScreen","showErrorNotification","addNotification","getBoard","boardId","a","get","config","editBoardTitle","storeDispatch","addCard","boardID","reloadBoard","post","ADD_CARD","undefined","deleteCard","cardID","delete","DELETE_BOARD_CARD","editCard","put","EDIT_BOARD_CARD","editGroupCards","EDIT_BOARD_CARD_GROUP","useTypedSelector","useSelector","setSlot","setSlotLocation","copyBoard","JSON","parse","stringify","getState","target","id","source","cards","position","sourceList","targetList","newCard","targetCards","initialPosition","Object","keys","forEach","sourceCards","Card","props","parentList","useState","hover","setHover","useDispatch","useParams","useLocation","pathname","routeState","listID","toggleHover","prevHover","className","style","onMouseEnter","onMouseLeave","draggable","onDragStart","e","setOriginLists","currentTarget","classList","add","dragStart","onDragEnd","remove","onDragOver","preventDefault","rect","getBoundingClientRect","offset","clientY","top","height","dragOver","onDragLeave","onDrop","entity","oldLists","currentList","cardSet","listKey","cardKey","oldList","newList","list_id","length","dropCard","join","to","RegExp","test","buttonRemove","hide","onClick","icon","pattern","text","email","Composer","buttonTitle","placeholder","setHide","input","setInput","toggleHide","prevState","handlerAdd","composer","textArea","ref","field","focus","value","onKeyPress","event","key","onChange","validator","control","buttonAdd","buttonCancel","buttonActive","Editor","isHide","setText","handleToggleHide","modifierEditArea","autoFocus","onFocus","select","onBlur","trim","blur","modifierTitle","List","header","EDIT_BOARD_LIST","editList","buttonRemoveList","DELETE_BOARD_LIST","deleteList","sort","b","map","toString","buttonAddCard","titleText","totalCards","Board","getBoardID","handlerFocusIn","handlerFocusOut","asyncSetTitle","setBoardTitle","handlerChangeTitle","handlerClickEnter","handlerDeleteBoard","dispatchDeleteBoard","deleteBoard","handlerAddList","totalLists","asyncAddList","addList","asyncGetBoard","this","loaderWrap","color","width","inputStyle","fontSize","makeLists","flex","buttonAddList","Component","mapDispatchToProps","newTitle","UPDATE_BOARD_TITLE","DELETE_BOARD","ADD_LIST","withRouter","connect","ownProps","match","params","Modal","setActive","children","onClose","content","stopPropagation","defaultProps","ErrorFormMessage","setModalActive","getBoards","refInput","useRef","useEffect","current","onAddBoard","titleName","inputText","buttonCreate","Home","onClickAddBoard","asyncGetBoards","wrapper","borders","button","makeBoards","CreateBoard","EditField","placeHolder","setValue","onKeyDown","optionBoards","optionCards","isSameList","values","index","concat","indexPos","Date","now","lastOne","getFirstListAndCardValues","currentListID","cardPos","FormRelocate","formTitle","closeRelocate","editTitle","useForm","mode","register","handleSubmit","getValues","setError","formState","errors","isValid","setBoards","currentBoard","setCurrentBoard","setCurrentListID","loadBoards","dataBoards","loadBoard","dataBoard","checkIfClickedOutside","contains","document","addEventListener","removeEventListener","onSubmit","replace","group","fromList","toList","find","c","createGroup","handleChangeBoard","required","minRows","defaultValue","htmlFor","contentWrapper","disabled","submit","useHistory","stateLocation","setModal","relocate","setRelocate","copy","setCopy","originList","foundList","getListByCardID","boardState","originCard","historyBack","closeModal","headerIcon","titleCard","titleList","main","mainIcon","description","side","sideTitle","prevCopy","prevRelocate","callbackError","token","setItem","signup","Registration","stateUser","delayError","clearErrors","watch","currentPassword","newUser","password","EMAIL_ALREADY_EXIST","form","contentBlock","REQUIRE","INCORRECT_EMAIL","scoreWordStyle","display","minLength","confirmPassword","validate","PASSWORD_MISMATCH","submitButton","loginWrapper","linkTitle","link","loaderWrapper","visible","INVALID_DATA","wrapperLogOut","marginTop","justifyContent","ProtectedRoute","redirectPath","isAuthenticated","component","render","Route","connector","getAuthorizedProps","getUnauthorizedProps","App","path","exact","EditCard","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e8799580.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryButton\":\"registration_primaryButton__1szUN\",\"wrapper\":\"registration_wrapper__28NvH\",\"form\":\"registration_form__3O0e_\",\"error\":\"registration_error__11MMK\",\"input\":\"registration_input__3fdh1\",\"title\":\"registration_title__378an\",\"contentBlock\":\"registration_contentBlock__2mnuQ\",\"submitButton\":\"registration_submitButton__139Kb\",\"loginWrapper\":\"registration_loginWrapper__3f9i0\",\"linkTitle\":\"registration_linkTitle__1XKaP\",\"link\":\"registration_link__2ibGQ\",\"loaderWrapper\":\"registration_loaderWrapper__1S_D8\"};","export default {\n  baseURL: process.env.REACT_APP_API_URL || '',\n  boards: '/board',\n  list: '/list',\n  card: '/card',\n  user: '/user',\n  login: '/login',\n};\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();\n","import axios from 'axios';\nimport { api } from '../common/constants';\nimport history from '../common/history/history';\n\nexport const getToken = (): string | null => localStorage.getItem('token');\nexport const setToken = (token: string): void => localStorage.setItem('token', token);\nexport const deleteToken = (): void => localStorage.removeItem('token');\n\nconst instance = axios.create({\n  baseURL: api.baseURL,\n});\n\nexport const admission = axios.create({\n  baseURL: api.baseURL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\ninstance.interceptors.request.use((requestConfig) => {\n  const modifyRequestConfig = { ...requestConfig };\n  if (getToken()) {\n    modifyRequestConfig.headers.Authorization = `Bearer ${getToken()}`;\n  } else {\n    history.push('/login');\n  }\n  return modifyRequestConfig;\n});\n\ninstance.interceptors.response.use(\n  (res) => {\n    return res.data;\n  },\n  (error) => {\n    if (error.response.data.error.message === 'invalid token') {\n      deleteToken();\n      history.push('/login');\n    }\n  }\n);\nadmission.interceptors.response.use((res) => res.data);\n\nexport default instance;\n","import { IBoardFull } from '../../common/interfaces/IBoardFull';\n\nexport interface BoardState {\n  board: IBoardFull;\n  isLoading: boolean;\n  boardTitle: string;\n}\n\nexport const initialBoardState: BoardState = {\n  board: { title: '', users: [], lists: {} },\n  isLoading: false,\n  boardTitle: '',\n};\n\nexport enum BoardActionTypes {\n  UPDATE_BOARD = 'UPDATE_BOARD',\n  UPDATE_BOARD_SUCCESS = 'UPDATE_BOARD_SUCCESS',\n  UPDATE_BOARD_ERROR = 'UPDATE_BOARD_ERROR',\n\n  EDIT_BOARD = 'EDIT_BOARD',\n  DELETE_BOARD = 'DELETE_BOARD',\n  UPDATE_BOARD_TITLE = 'UPDATE_BOARD_TITLE',\n  INPUT_CHANGE = 'INPUT_CHANGE',\n  ADD_LIST = 'ADD_LIST',\n  DELETE_BOARD_LIST = 'DELETE_BOARD_LIST',\n  EDIT_BOARD_LIST = 'EDIT_BOARD_LIST',\n  ADD_CARD = 'ADD_CARD',\n  DELETE_BOARD_CARD = 'DELETE_BOARD_CARD',\n  EDIT_BOARD_CARD = 'EDIT_BOARD_CARD',\n  EDIT_BOARD_CARD_GROUP = 'EDIT_BOARD_CARD_GROUP',\n}\n\ninterface ActionUpdateBoard {\n  type: BoardActionTypes.UPDATE_BOARD;\n}\n\ninterface ActionUpdateBoardSuccess {\n  type: BoardActionTypes.UPDATE_BOARD_SUCCESS;\n  payload: IBoardFull;\n}\n\ninterface ActionUpdateBoardError {\n  type: BoardActionTypes.UPDATE_BOARD_ERROR;\n}\n\ninterface ActionEditBoard {\n  type: BoardActionTypes.EDIT_BOARD;\n  payload: IBoardFull;\n}\n\ninterface ActionDeleteBoard {\n  type: BoardActionTypes.DELETE_BOARD;\n}\n\ninterface ActionInputChange {\n  type: BoardActionTypes.INPUT_CHANGE;\n  payload: string;\n}\n\ninterface ActionUpdateBoardTitle {\n  type: BoardActionTypes.UPDATE_BOARD_TITLE;\n}\n\ninterface ActionAddList {\n  type: BoardActionTypes.ADD_LIST;\n}\n\ninterface ActionDeleteList {\n  type: BoardActionTypes.DELETE_BOARD_LIST;\n}\n\ninterface ActionAddCard {\n  type: BoardActionTypes.ADD_CARD;\n}\n\ninterface ActionDeleteCard {\n  type: BoardActionTypes.DELETE_BOARD_CARD;\n}\n\ninterface ActionEditList {\n  type: BoardActionTypes.EDIT_BOARD_LIST;\n}\n\ninterface ActionEditCard {\n  type: BoardActionTypes.EDIT_BOARD_CARD;\n}\n\ninterface ActionEditCardGroup {\n  type: BoardActionTypes.EDIT_BOARD_CARD_GROUP;\n}\n\nexport type BoardAction =\n  | ActionUpdateBoard\n  | ActionUpdateBoardSuccess\n  | ActionUpdateBoardError\n  | ActionEditBoard\n  | ActionInputChange\n  | ActionDeleteBoard\n  | ActionUpdateBoardTitle\n  | ActionAddList\n  | ActionDeleteList\n  | ActionEditList\n  | ActionAddCard\n  | ActionDeleteCard\n  | ActionEditCard\n  | ActionEditCardGroup;\n","import { IBoard } from '../../common/interfaces/IBoard';\n\nexport interface BoardsState {\n  boards: [] | IBoard[];\n  isLoading: boolean;\n  error: null | string;\n}\n\nexport const initialBoardsState: BoardsState = {\n  boards: [],\n  isLoading: false,\n  error: null,\n};\n\nexport enum BoardsActionTypes {\n  UPDATE_BOARDS = 'UPDATE_BOARDS',\n  UPDATE_BOARDS_SUCCESS = 'UPDATE_BOARDS_SUCCESS',\n  UPDATE_BOARDS_ERROR = 'UPDATE_BOARDS_ERROR',\n  ADD_BOARDS = 'ADD_BOARDS',\n  ADD_BOARDS_SUCCESS = 'ADD_BOARDS_SUCCESS',\n  ADD_BOARDS_ERROR = 'ADD_BOARDS_ERROR',\n}\n\ninterface ActionUpdateBoards {\n  type: BoardsActionTypes.UPDATE_BOARDS;\n}\n\ninterface ActionUpdateBoardsSuccess {\n  type: BoardsActionTypes.UPDATE_BOARDS_SUCCESS;\n  payload: IBoard[];\n}\n\ninterface ActionUpdateBoardsError {\n  type: BoardsActionTypes.UPDATE_BOARDS_ERROR;\n  payload: string;\n}\n\ninterface ActionAddBoards {\n  type: BoardsActionTypes.ADD_BOARDS;\n}\n\ninterface ActionAddBoardsSuccess {\n  type: BoardsActionTypes.ADD_BOARDS_SUCCESS;\n}\n\ninterface ActionAddBoardsError {\n  type: BoardsActionTypes.ADD_BOARDS_ERROR;\n  payload: string;\n}\n\nexport type BoardsAction =\n  | ActionUpdateBoards\n  | ActionUpdateBoardsSuccess\n  | ActionUpdateBoardsError\n  | ActionAddBoards\n  | ActionAddBoardsSuccess\n  | ActionAddBoardsError;\n","import { BoardsState, BoardsAction, BoardsActionTypes } from '../../types/boards';\n\nconst initialState: BoardsState = {\n  boards: [],\n  isLoading: false,\n  error: null,\n};\n\nexport default function reducer(state = initialState, action: BoardsAction): BoardsState {\n  switch (action.type) {\n    case BoardsActionTypes.UPDATE_BOARDS:\n      return { isLoading: true, error: null, boards: [] };\n    case BoardsActionTypes.UPDATE_BOARDS_SUCCESS:\n      return { isLoading: false, error: null, boards: action.payload };\n    case BoardsActionTypes.UPDATE_BOARDS_ERROR:\n      return { isLoading: false, error: action.payload, boards: [] };\n    case BoardsActionTypes.ADD_BOARDS:\n      return { ...state, isLoading: true };\n    case BoardsActionTypes.ADD_BOARDS_SUCCESS:\n      return { ...state, isLoading: false };\n    case BoardsActionTypes.ADD_BOARDS_ERROR:\n      return { ...state, isLoading: false };\n    default:\n      return state;\n  }\n}\n","export interface UserState {\n  isAuthorized: boolean;\n  isLoading: boolean;\n}\n\nexport const initialUserState: UserState = {\n  isAuthorized: false,\n  isLoading: false,\n};\n\nexport enum UserActionTypes {\n  LOGIN = 'LOGIN',\n  LOGIN_SUCCESS = 'LOGIN_SUCCESS',\n  LOGIN_ERROR = 'LOGIN_ERROR',\n\n  SIGNUP = 'SIGNUP',\n  SIGNUP_SUCCESS = 'SIGNUP_SUCCESS',\n  SIGNUP_ERROR = 'SIGNUP_ERROR',\n\n  LOGOUT = 'LOGOUT',\n}\n\ninterface ActionLogin {\n  type: UserActionTypes.LOGIN;\n}\n\ninterface ActionLoginSuccess {\n  type: UserActionTypes.LOGIN_SUCCESS;\n  payload: boolean;\n}\n\ninterface ActionLoginError {\n  type: UserActionTypes.LOGIN_ERROR;\n}\n\ninterface ActionSignUp {\n  type: UserActionTypes.SIGNUP;\n}\n\ninterface ActionSignUpSuccess {\n  type: UserActionTypes.SIGNUP_SUCCESS;\n}\n\ninterface ActionSignUpError {\n  type: UserActionTypes.SIGNUP_ERROR;\n}\n\ninterface ActionLogOut {\n  type: UserActionTypes.LOGOUT;\n}\n\nexport type UserAction =\n  | ActionLogin\n  | ActionLoginSuccess\n  | ActionLoginError\n  | ActionSignUp\n  | ActionSignUpSuccess\n  | ActionSignUpError\n  | ActionLogOut;\n","export interface ModalState {\n  active: boolean;\n}\n\nexport enum ModalActionTypes {\n  SHOW_MODAL = 'SHOW_MODAL',\n  HIDE_MODAL = 'HIDE_MODAL',\n}\n\ninterface ActionStart {\n  type: ModalActionTypes.SHOW_MODAL;\n}\n\ninterface ActionStop {\n  type: ModalActionTypes.HIDE_MODAL;\n}\n\nexport type ModalAction = ActionStart | ActionStop;\n","import { ModalAction, ModalActionTypes, ModalState } from '../../types/modal';\n\nconst initialState: ModalState = {\n  active: false,\n};\n\nexport default function reducer(state = initialState, action: ModalAction): ModalState {\n  switch (action.type) {\n    case ModalActionTypes.SHOW_MODAL:\n      return { active: true };\n    case ModalActionTypes.HIDE_MODAL:\n      return { active: false };\n    default:\n      return state;\n  }\n}\n","import { ICard } from '../../common/interfaces/ICard';\nimport { IList } from '../../common/interfaces/IList';\nimport { ILists } from '../../common/interfaces/ILists';\n\nexport interface DragNDropState {\n  slot: Entity | null;\n  originLists: ILists | null;\n}\n\nexport interface EntityDefault {\n  list: IList;\n  card: ICard | null;\n}\n\nexport interface Entity extends EntityDefault {\n  card: NonNullable<EntityDefault['card']>;\n}\n\nexport interface Entities {\n  source: Entity;\n  target: EntityDefault;\n}\n\nexport const initialState: DragNDropState = { slot: null, originLists: null };\n\nexport enum DragNDropActionTypes {\n  DRAG_UPDATE_SLOT = 'DRAG_UPDATE_SLOT',\n  DRAG_SET_ORIGIN_LISTS = 'DRAG_SET_ORIGIN_LISTS',\n  DRAG_END = 'DRAG_END',\n}\n\ninterface ActionDragUpdateSlot {\n  type: DragNDropActionTypes.DRAG_UPDATE_SLOT;\n  payload: Entity | null;\n}\n\ninterface ActionDragSetOriginLists {\n  type: DragNDropActionTypes.DRAG_SET_ORIGIN_LISTS;\n  payload: ILists;\n}\n\ninterface ActionDragEnd {\n  type: DragNDropActionTypes.DRAG_END;\n}\n\nexport type DragNDropAction = ActionDragUpdateSlot | ActionDragSetOriginLists | ActionDragEnd;\n","import { combineReducers } from 'redux';\nimport boardReducer from './modules/board/reducer';\nimport boardsReducer from './modules/boards/reducer';\nimport userReducer from './modules/user/reducer';\nimport modalReducer from './modules/modal/reducer';\nimport dragNdropReducer from './modules/dragndrop/reducer';\n\nexport const rootReducer = combineReducers({\n  board: boardReducer,\n  boards: boardsReducer,\n  user: userReducer,\n  modal: modalReducer,\n  drag: dragNdropReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { BoardAction, BoardActionTypes, BoardState, initialBoardState } from '../../types/board';\n\nexport default function reducer(state = initialBoardState, action: BoardAction): BoardState {\n  switch (action.type) {\n    case BoardActionTypes.UPDATE_BOARD:\n      return { ...state, isLoading: true };\n    case BoardActionTypes.UPDATE_BOARD_SUCCESS:\n      return { ...state, isLoading: false, board: action.payload, boardTitle: action.payload.title };\n    case BoardActionTypes.UPDATE_BOARD_ERROR:\n      return { ...state, isLoading: false };\n    case BoardActionTypes.INPUT_CHANGE:\n      return { ...state, boardTitle: action.payload };\n    case BoardActionTypes.EDIT_BOARD:\n      return { ...state, board: action.payload };\n    default: {\n      return state;\n    }\n  }\n}\n","import { initialUserState, UserState, UserAction, UserActionTypes } from '../../types/user';\n\nexport default function reducer(state = initialUserState, action: UserAction): UserState {\n  switch (action.type) {\n    case UserActionTypes.LOGIN:\n      return { ...state, isLoading: true };\n    case UserActionTypes.LOGIN_SUCCESS:\n      return { ...state, isLoading: false, isAuthorized: true };\n    case UserActionTypes.LOGIN_ERROR:\n      return { ...state, isLoading: false };\n    case UserActionTypes.SIGNUP:\n      return { ...state, isLoading: true };\n    case UserActionTypes.SIGNUP_SUCCESS:\n      return { ...state, isLoading: false };\n    case UserActionTypes.SIGNUP_ERROR:\n      return { ...state, isLoading: false };\n    case UserActionTypes.LOGOUT:\n      return { ...state, isAuthorized: false };\n    default: {\n      return state;\n    }\n  }\n}\n","import { DragNDropAction, DragNDropActionTypes, DragNDropState, initialState } from '../../types/drag';\n\nexport default function reducer(state = initialState, action: DragNDropAction): DragNDropState {\n  switch (action.type) {\n    case DragNDropActionTypes.DRAG_UPDATE_SLOT:\n      return { ...state, slot: action.payload };\n    case DragNDropActionTypes.DRAG_SET_ORIGIN_LISTS:\n      return { ...state, originLists: action.payload };\n    case DragNDropActionTypes.DRAG_END:\n      return { ...state, slot: null, originLists: null };\n    default:\n      return state;\n  }\n}\n","import { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from './rootReducer';\nimport { UserState, initialUserState } from './types/user';\nimport { ModalState } from './types/modal';\nimport { BoardState, initialBoardState } from './types/board';\nimport { BoardsState, initialBoardsState } from './types/boards';\nimport { DragNDropState, initialState as initialDragNDropState } from './types/drag';\n\nexport interface AppState {\n  board: BoardState;\n  boards: BoardsState;\n  user: UserState;\n  modal: ModalState;\n  drag: DragNDropState;\n}\n\nconst initialState: AppState = {\n  board: initialBoardState,\n  boards: initialBoardsState,\n  user: initialUserState,\n  modal: { active: false },\n  drag: initialDragNDropState,\n};\n\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(thunk)));\n\nexport const asyncDispatch = store.dispatch;\nexport default store;\n","import { store, ReactNotificationOptions } from 'react-notifications-component';\n\nconst notification: ReactNotificationOptions = {\n  title: 'Error',\n  message: 'message',\n  type: 'danger',\n  insert: 'top',\n  container: 'bottom-left',\n  animationIn: ['animate__animated', 'animate__fadeIn'],\n  animationOut: ['animate__animated', 'animate__fadeOut'],\n  dismiss: {\n    duration: 5000,\n    onScreen: true,\n  },\n};\n\nexport const showErrorNotification = (message: string): void => {\n  store.addNotification({ ...notification, message });\n};\n","import { Dispatch } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\nimport api from '../../../api/request';\nimport config from '../../../common/constants/api';\nimport { BoardAction, BoardActionTypes } from '../../types/board';\nimport { AppState, asyncDispatch as storeDispatch } from '../../store';\nimport history from '../../../common/history/history';\nimport { showErrorNotification } from '../../../common/notifications/notifications';\nimport { IDataList } from '../../../common/interfaces/IDataList';\nimport { IDataCard } from '../../../common/interfaces/IDataCard';\nimport { IDataCardGroup } from '../../../common/interfaces/IDataCardGroup';\nimport { IBoardFull } from '../../../common/interfaces/IBoardFull';\n\ntype ThunkType = ThunkAction<Promise<void>, AppState, unknown, BoardAction>;\n\nexport const getBoard = (boardId: string) => async (dispatch: Dispatch): Promise<void> => {\n  try {\n    dispatch({ type: BoardActionTypes.UPDATE_BOARD });\n    const board = await api.get<IBoardFull>(`${config.boards}/${boardId}`);\n    dispatch({ type: BoardActionTypes.UPDATE_BOARD_SUCCESS, payload: board });\n  } catch (e) {\n    showErrorNotification('Failed to get board data');\n  }\n};\n\nexport const setBoardTitle = (boardID: string, newTitle: string): ThunkType => async (dispatch): Promise<void> => {\n  try {\n    await api.put(`${config.boards}/${boardID}`, { title: newTitle });\n    dispatch({ type: BoardActionTypes.UPDATE_BOARD_TITLE });\n  } catch (e) {\n    showErrorNotification('Failed to change the board title');\n  }\n};\n\nexport const editBoardTitle = (title: string): void => {\n  storeDispatch({ type: BoardActionTypes.INPUT_CHANGE, payload: title });\n};\n\nexport const deleteBoard = (boardID: string) => async (dispatch: Dispatch<BoardAction>): Promise<void> => {\n  try {\n    await api.delete(`${config.boards}/${boardID}`);\n    dispatch({ type: BoardActionTypes.DELETE_BOARD });\n    history.push('/');\n  } catch (e) {\n    showErrorNotification('Failed to delete current board');\n  }\n};\n\nexport const addList = (boardID: string, data: IDataList): ThunkType => async (dispatch): Promise<void> => {\n  try {\n    await api.post(`${config.boards}/${boardID + config.list}`, data);\n    dispatch({ type: BoardActionTypes.ADD_LIST });\n    await dispatch(getBoard(boardID));\n  } catch (e) {\n    showErrorNotification('Failed to add list on current board');\n  }\n};\n\nexport const deleteList = (boardID: string, listID: number): ThunkType => async (dispatch): Promise<void> => {\n  try {\n    await api.delete(`${config.boards}/${boardID + config.list}/${listID}`);\n    dispatch({ type: BoardActionTypes.DELETE_BOARD_LIST });\n    await dispatch(getBoard(boardID));\n  } catch (e) {\n    showErrorNotification('Failed to remove the specified list from the board');\n  }\n};\n\nexport const editList = (boardID: string, listID: number, data: IDataList): ThunkType => async (\n  dispatch\n): Promise<void> => {\n  try {\n    await api.put(`${config.boards}/${boardID + config.list}/${listID}`, data);\n    dispatch({ type: BoardActionTypes.EDIT_BOARD_LIST });\n    await dispatch(getBoard(boardID));\n  } catch (e) {\n    showErrorNotification('Failed to change the title of current list');\n  }\n};\n\nexport const addCard = (boardID: string, data: IDataCard, reloadBoard?: boolean): ThunkType => async (\n  dispatch\n): Promise<void> => {\n  try {\n    await api.post(`${config.boards}/${boardID + config.card}`, data);\n    dispatch({ type: BoardActionTypes.ADD_CARD });\n    if (reloadBoard || reloadBoard === undefined) await dispatch(getBoard(boardID));\n  } catch (e) {\n    showErrorNotification('Failed to add card on current list');\n  }\n};\n\nexport const deleteCard = (boardID: string, cardID: number): ThunkType => async (dispatch): Promise<void> => {\n  try {\n    await api.delete(`${config.boards}/${boardID + config.card}/${cardID}`);\n    dispatch({ type: BoardActionTypes.DELETE_BOARD_CARD });\n    await dispatch(getBoard(boardID));\n  } catch (e) {\n    showErrorNotification('Failed to delete card on current list');\n  }\n};\n\nexport const editCard = (boardID: string, cardID: number, data: IDataCard, reloadBoard?: boolean): ThunkType => async (\n  dispatch\n): Promise<void> => {\n  try {\n    await api.put(`${config.boards}/${boardID + config.card}/${cardID}`, data);\n    dispatch({ type: BoardActionTypes.EDIT_BOARD_CARD });\n    if (reloadBoard || reloadBoard === undefined) await dispatch(getBoard(boardID));\n  } catch (e) {\n    showErrorNotification('Failed to change field of current card');\n  }\n};\n\nexport const editGroupCards = (boardID: string, data: IDataCardGroup[]): ThunkType => async (\n  dispatch\n): Promise<void> => {\n  try {\n    await api.put(`${config.boards}/${boardID + config.card}`, data);\n    dispatch({ type: BoardActionTypes.EDIT_BOARD_CARD_GROUP });\n    await dispatch(getBoard(boardID));\n  } catch (e) {\n    await dispatch(getBoard(boardID));\n    showErrorNotification('Failed to edit group cards');\n  }\n};\n","import { TypedUseSelectorHook, useSelector } from 'react-redux';\nimport { RootState } from '../store/rootReducer';\n\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { ThunkAction } from 'redux-thunk';\nimport store, { AppState, asyncDispatch as dispatch } from '../../store';\nimport { DragNDropActionTypes, Entities, Entity } from '../../types/drag';\nimport { IBoardFull } from '../../../common/interfaces/IBoardFull';\nimport { BoardAction, BoardActionTypes } from '../../types/board';\nimport { ICard } from '../../../common/interfaces/ICard';\nimport { ILists } from '../../../common/interfaces/ILists';\nimport { IDataCardGroup } from '../../../common/interfaces/IDataCardGroup';\nimport { editGroupCards } from '../board/actions';\n\ntype ThunkType = ThunkAction<Promise<void>, AppState, unknown, BoardAction>;\n\nexport const setSlot = (slot: Entity | null): void => {\n  if (slot) {\n    dispatch({ type: DragNDropActionTypes.DRAG_UPDATE_SLOT, payload: slot });\n  } else {\n    dispatch({ type: DragNDropActionTypes.DRAG_END });\n  }\n};\n\nexport const setOriginLists = (lists: ILists): void => {\n  dispatch({ type: DragNDropActionTypes.DRAG_SET_ORIGIN_LISTS, payload: lists });\n};\n\nexport const dropCard = (boardID: string, entity?: { originLists: ILists; currentList: ILists }): ThunkType => async (\n  asyncDispatch\n): Promise<void> => {\n  let oldLists: ILists;\n  let lists: ILists;\n  oldLists = store.getState().drag.originLists || {};\n  lists = store.getState().board.board.lists;\n  if (entity) {\n    oldLists = entity.originLists;\n    lists = entity.currentList;\n  }\n\n  const cardSet: IDataCardGroup[] = [];\n  Object.keys(lists).forEach((listKey) => {\n    Object.keys(lists[listKey].cards).forEach((cardKey) => {\n      const oldList = oldLists[listKey];\n      const newList = lists[listKey];\n      if (oldList.cards[cardKey] && oldList.cards[cardKey].position !== newList.cards[cardKey].position) {\n        cardSet.push({\n          id: lists[listKey].cards[cardKey].id,\n          list_id: +listKey,\n          position: lists[listKey].cards[cardKey].position,\n        });\n      } else if (!oldList.cards[cardKey]) {\n        cardSet.push({\n          id: lists[listKey].cards[cardKey].id,\n          list_id: +listKey,\n          position: lists[listKey].cards[cardKey].position,\n        });\n      }\n    });\n  });\n  if (cardSet.length) {\n    await asyncDispatch(editGroupCards(boardID, cardSet));\n  }\n};\n\nexport const setSlotLocation = (drag: Entities): void => {\n  const copyBoard: IBoardFull = JSON.parse(JSON.stringify(store.getState().board.board));\n  const { lists } = copyBoard;\n  // list has a cards\n  if (drag.target.card) {\n    if (drag.target.list.id === drag.source.list.id) {\n      const list = lists[drag.source.list.id];\n      list.cards[drag.source.card.id].position = drag.target.card.position;\n      list.cards[drag.target.card.id].position = drag.source.card.position;\n      setSlot({ card: list.cards[drag.source.card.id], list });\n    } else {\n      // new card with new position.\n      const sourceList = lists[drag.source.list.id];\n      const targetList = lists[drag.target.list.id];\n      const newCard: ICard = {\n        ...drag.source.card,\n        users: [...drag.source.card.users],\n        position: drag.target.card.position,\n      };\n      // insert card to new list.\n      const { cards: targetCards } = targetList;\n      let initialPosition = newCard.position;\n      Object.keys(targetCards).forEach((id) => {\n        const card = targetCards[id];\n        if (card.position >= newCard.position) {\n          card.position = ++initialPosition;\n        }\n      });\n      targetCards[drag.source.card.id] = newCard;\n      // remove card from old list\n      const { cards: sourceCards } = sourceList;\n      Object.keys(sourceCards).forEach((id) => {\n        const card = sourceCards[id];\n        if (card.position > sourceCards[drag.source.card.id].position) {\n          --card.position;\n        }\n      });\n      delete sourceCards[drag.source.card.id];\n      setSlot({ card: targetList.cards[newCard.id], list: targetList });\n    }\n    // list has not a cards\n  } else {\n    const newCard: ICard = {\n      ...drag.source.card,\n      users: [...drag.source.card.users],\n      position: 0,\n    };\n    const { cards } = lists[drag.target.list.id];\n    cards[drag.source.card.id] = newCard; // add card in list cards.\n    delete lists[drag.source.list.id].cards[drag.source.card.id];\n    setSlot({ card: newCard, list: lists[drag.target.list.id] });\n  }\n  dispatch({ type: BoardActionTypes.EDIT_BOARD, payload: copyBoard });\n};\n","import React, { DragEvent, FC, useState } from 'react';\nimport { Link, Redirect, useLocation, useParams } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { useTypedSelector } from '../../../../hooks/useTypedSelector';\nimport { ICard } from '../../../../common/interfaces/ICard';\nimport { deleteCard } from '../../../../store/modules/board/actions';\nimport { IList } from '../../../../common/interfaces/IList';\nimport { dropCard, setOriginLists, setSlot, setSlotLocation } from '../../../../store/modules/dragndrop/actions';\nimport style from './card.module.scss';\n\ntype PropsParent = {\n  parentList: IList;\n};\n\nconst Card: FC<ICard & PropsParent> = (props) => {\n  const { id, position, parentList, title } = props;\n  const [hover, setHover] = useState(false);\n  const dispatch = useDispatch();\n  const { slot } = useTypedSelector((state) => state.drag);\n  const { lists } = useTypedSelector((state) => state.board.board);\n  const { id: boardID } = useParams<{ id: string }>();\n  const { pathname, state } = useLocation<{ modal: boolean }>();\n  const hasCard = (): boolean => {\n    return new RegExp(`/card/${id}`).test(pathname) && !state;\n  };\n\n  const routeState = {\n    cardID: id,\n    listID: parentList.id,\n  };\n\n  const handleClickDelete = (): void => {\n    dispatch(deleteCard(boardID, id));\n  };\n\n  const toggleHover = (): void => {\n    setHover((prevHover) => !prevHover);\n  };\n\n  const dragStartHandler = (e: DragEvent<HTMLDivElement>): void => {\n    setSlot({ card: props, list: parentList });\n    setOriginLists(lists);\n    e.currentTarget.classList.add(style.dragStart);\n  };\n\n  const dragEndHandler = (e: DragEvent<HTMLDivElement>): void => {\n    setSlot(null);\n    e.currentTarget.classList.remove(style.dragStart);\n  };\n\n  const dragOverHandler = (e: DragEvent<HTMLDivElement>): void => {\n    e.preventDefault();\n    const rect = e.currentTarget.getBoundingClientRect();\n    const offset = e.clientY - rect.top - rect.height / 2;\n    if (slot?.card && id !== slot.card.id) {\n      if (slot.list.id === parentList.id) {\n        if ((slot.card.position > position && offset < 0) || (slot.card.position < position && offset > 0)) {\n          setSlotLocation({ source: slot, target: { list: parentList, card: props } });\n        }\n      } else {\n        setSlotLocation({ source: slot, target: { list: parentList, card: props } });\n      }\n      e.currentTarget.classList.add(style.dragOver);\n    }\n  };\n\n  const dragLeaveHandler = (e: DragEvent<HTMLDivElement>): void => {\n    e.currentTarget.classList.remove(style.dragOver);\n  };\n\n  const dropHandler = (e: DragEvent<HTMLDivElement>): void => {\n    e.preventDefault();\n    e.currentTarget.classList.remove(style.dragOver);\n    dispatch(dropCard(boardID));\n    setSlot(null);\n  };\n\n  return (\n    <div\n      className={style.container}\n      onMouseEnter={toggleHover}\n      onMouseLeave={toggleHover}\n      draggable\n      onDragStart={dragStartHandler}\n      onDragEnd={dragEndHandler}\n      onDragOver={dragOverHandler}\n      onDragLeave={dragLeaveHandler}\n      onDrop={dropHandler}\n    >\n      <li className={slot?.card?.id === id ? [style.card, style.dragStart].join(' ') : style.card}>\n        <Link to={{ pathname: `${pathname}/card/${id}`, state: { ...routeState } }}>\n          <div className={style.title}>{title}</div>\n        </Link>\n        {hasCard() ? <Redirect to={{ pathname: `${pathname}`, state: { ...routeState } }} /> : null}\n      </li>\n\n      <button\n        className={!hover || slot?.card ? [style.buttonRemove, style.hide].join(' ') : style.buttonRemove}\n        onClick={handleClickDelete}\n      >\n        <span className={`material-icons-round ${style.icon}`} title=\"Удалить карточку\">\n          delete_forever\n        </span>\n      </button>\n    </div>\n  );\n};\n\nexport default Card;\n","export default (pattern: RegExp, text: string): boolean => pattern.test(text);\nexport const pattern = /^((\\w|[А-ЯЁа-яё])+[\\s.-]?)+$|^$/;\nexport const email = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\\\\\".+\\\\\"))@(([^<>()[\\]\\\\.,;:\\s@\"]+\\.)+[^<>()[\\]\\\\.,;:\\s@\"]{2,})$/i;\n","import React, { ChangeEvent, FC, KeyboardEvent, useState } from 'react';\nimport validator, { pattern } from '../../common/validator/validator';\nimport style from './composer.module.scss';\n\ninterface Props {\n  className: string | undefined;\n  buttonTitle: string;\n  placeholder?: string;\n  action: (title: string) => void;\n}\n\nconst Composer: FC<Props> = ({ className, buttonTitle, placeholder = '', action }) => {\n  const [hide, setHide] = useState(false);\n  const [input, setInput] = useState('');\n\n  const toggleHide = (): void => {\n    setHide((prevState) => !prevState);\n    setInput('');\n  };\n\n  const handlerAdd = (): void => {\n    action(input);\n    toggleHide();\n  };\n\n  const handleChangeText = (event: ChangeEvent<HTMLTextAreaElement>): void => {\n    if (validator(pattern, event.target.value)) {\n      setInput(event.target.value);\n    }\n  };\n\n  const onKeyPressEnter = (event: KeyboardEvent<HTMLTextAreaElement>): void => {\n    if (event.key === 'Enter' && input) {\n      handlerAdd();\n    }\n  };\n\n  return !hide ? (\n    <button className={[className, style.buttonActive].join(' ')} onClick={toggleHide}>\n      <span className=\"material-icons-round md-18\">add</span>\n      {buttonTitle}\n    </button>\n  ) : (\n    <div className={style.composer}>\n      <textarea\n        className={style.textArea}\n        ref={(field): null | void => field && field.focus()}\n        placeholder={placeholder}\n        value={input}\n        onKeyPress={onKeyPressEnter}\n        onChange={handleChangeText}\n      />\n      <div className={style.control}>\n        <button className={style.buttonAdd} onClick={handlerAdd}>\n          Добавить\n        </button>\n        <button className={style.buttonCancel} onClick={toggleHide}>\n          Отмена\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Composer;\n","import React, { ChangeEvent, FC, FocusEvent, KeyboardEvent, useState } from 'react';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport validator, { pattern } from '../../common/validator/validator';\nimport style from './editor.module.scss';\n\ninterface Props {\n  title: string;\n  placeHolder?: string;\n  action: (text: string) => void;\n  className: string | undefined;\n}\n\nconst Editor: FC<Props> = ({ className, title, action }) => {\n  const [isHide, setHide] = useState(false);\n  const [text, setText] = useState(title);\n\n  const handleToggleHide = (): void => {\n    setHide(!isHide);\n  };\n\n  const handleEditText = (event: ChangeEvent<HTMLTextAreaElement>): void => {\n    if (validator(pattern, event.target.value)) {\n      setText(event.target.value);\n    }\n  };\n\n  const handleFocusOut = (event: FocusEvent<HTMLTextAreaElement>): void => {\n    if (event.target.value && event.target.value !== title) {\n      setText(event.target.value.trim());\n      action(event.target.value);\n    } else {\n      setText(title);\n    }\n    handleToggleHide();\n  };\n\n  const handleClickEnter = (event: KeyboardEvent<HTMLTextAreaElement>): void => {\n    if (event.key === 'Enter') {\n      event.currentTarget.blur();\n    }\n  };\n\n  if (!isHide) {\n    return (\n      <p\n        className={\n          isHide ? [className, style.modifierTitle, style.hide].join(' ') : [className, style.modifierTitle].join(' ')\n        }\n        onClick={handleToggleHide}\n      >\n        {text}\n      </p>\n    );\n  }\n\n  return (\n    <TextareaAutosize\n      className={[className, style.modifierEditArea].join(' ')}\n      autoFocus\n      onFocus={(event): void => {\n        event.target.select();\n      }}\n      onBlur={handleFocusOut}\n      onKeyPress={handleClickEnter}\n      onChange={handleEditText}\n      value={text}\n    />\n  );\n};\n\nexport default Editor;\n","import React, { ReactElement } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { IList } from '../../../../common/interfaces/IList';\nimport { addCard, deleteList, editList } from '../../../../store/modules/board/actions';\nimport Card from '../Card/Card';\nimport Composer from '../../../../components/Composer/Composer';\nimport Editor from '../../../../components/Editor/Editor';\nimport { setSlotLocation } from '../../../../store/modules/dragndrop/actions';\nimport { useTypedSelector } from '../../../../hooks/useTypedSelector';\nimport style from './list.module.scss';\n\nexport default function List(props: IList): ReactElement {\n  const { title, cards, id, position } = props;\n  const dispatch = useDispatch();\n  const { id: boardID } = useParams<{ id: string }>();\n  const { slot } = useTypedSelector((state) => state.drag);\n\n  const handleClickDeleteList = (): void => {\n    dispatch(deleteList(boardID, id));\n  };\n\n  const makeCard = (): ReactElement[] => {\n    return Object.keys(cards)\n      .sort((a, b) => cards[a].position - cards[b].position)\n      .map((value) => {\n        const card = cards[value];\n        return <Card key={card.id.toString()} {...card} parentList={props} />;\n      });\n  };\n\n  const handlerDragOver = (): void => {\n    if (!Object.keys(cards).length && slot) {\n      setSlotLocation({ source: slot, target: { list: props, card: null } });\n    }\n  };\n\n  const editTitleHandler = (text: string): void => {\n    dispatch(editList(boardID, id, { position, title: text }));\n  };\n\n  const addCardHandler = (titleText: string): void => {\n    const totalCards = cards ? Object.keys(cards).length : 0;\n    dispatch(addCard(boardID, { title: titleText, list_id: id, position: totalCards }));\n  };\n\n  return (\n    <div onDragOver={handlerDragOver} className={style.list}>\n      <div className={style.header}>\n        <Editor className={style.title} title={title} action={editTitleHandler} />\n        <button className={style.buttonRemoveList} onClick={handleClickDeleteList}>\n          <span className={`material-icons ${style.icon}`} title=\"Удалить список\">\n            delete_forever\n          </span>\n        </button>\n      </div>\n      <ul className={style.cards}>{makeCard()}</ul>\n      <Composer\n        className={style.buttonAddCard}\n        placeholder=\"Ввести заголовок для этой карточки\"\n        buttonTitle=\"Добавить карточку\"\n        action={addCardHandler}\n      />\n    </div>\n  );\n}\n","import React, { ChangeEvent, Component, FocusEvent, KeyboardEvent, ReactElement } from 'react';\nimport AutosizeInput from 'react-input-autosize';\nimport { Link, RouteComponentProps, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Loader from 'react-loader-spinner';\nimport { addList, deleteBoard, editBoardTitle, getBoard, setBoardTitle } from '../../store/modules/board/actions';\nimport List from './components/List/List';\nimport Composer from '../../components/Composer/Composer';\nimport validator, { pattern } from '../../common/validator/validator';\nimport { AppState } from '../../store/store';\nimport { IBoardFull } from '../../common/interfaces/IBoardFull';\nimport { IDataList } from '../../common/interfaces/IDataList';\nimport style from './board.module.scss';\n\ninterface StateProps {\n  board: IBoardFull;\n  boardTitle: string;\n  isLoading: boolean;\n  id: string;\n}\n\ninterface DispatchProps {\n  getBoard: (id: string) => void;\n  setBoardTitle: (id: string, newTitle: string) => void;\n  editBoardTitle: (newTitle: string) => void;\n  deleteBoard: (id: string) => void;\n  addList: (id: string, data: IDataList) => void;\n}\n\ntype RouteProps = RouteComponentProps<{ id: string }>;\n\ntype PropsType = StateProps & DispatchProps & RouteProps;\n\nclass Board extends Component<PropsType> {\n  componentDidMount(): void {\n    const { getBoard: asyncGetBoard } = this.props;\n    asyncGetBoard(this.getBoardID());\n  }\n\n  getBoardID = (): string => {\n    const { id } = this.props;\n    return id;\n  };\n\n  handlerFocusIn = (event: FocusEvent<HTMLInputElement>): void => {\n    event.target.select();\n  };\n\n  handlerFocusOut = (event: FocusEvent<HTMLInputElement>): void => {\n    const title = event.target.value.trim();\n    const { board } = this.props;\n    if (title && title !== board.title) {\n      const { setBoardTitle: asyncSetTitle } = this.props;\n      asyncSetTitle(this.getBoardID(), title);\n    } else {\n      editBoardTitle(board.title);\n    }\n  };\n\n  handlerChangeTitle = (event: ChangeEvent<HTMLInputElement>): void => {\n    if (validator(pattern, event.target.value)) {\n      editBoardTitle(event.target.value);\n    }\n  };\n\n  handlerClickEnter = (event: KeyboardEvent<HTMLInputElement>): void => {\n    if (event.key === 'Enter') {\n      event.currentTarget.blur();\n    }\n  };\n\n  handlerDeleteBoard = (): void => {\n    const { deleteBoard: dispatchDeleteBoard } = this.props;\n    dispatchDeleteBoard(this.getBoardID());\n  };\n\n  handlerAddList = (title: string): void => {\n    const { board } = this.props;\n    const totalLists = Object.keys(board.lists).length;\n    const { addList: asyncAddList } = this.props;\n    asyncAddList(this.getBoardID(), { title, position: totalLists });\n  };\n\n  makeLists(): ReactElement[] {\n    const { board } = this.props;\n    const { lists } = board;\n    return Object.keys(lists).map((value) => {\n      const list = lists[value];\n      return <List key={list.id} {...list} />;\n    });\n  }\n\n  render(): ReactElement {\n    const { isLoading, boardTitle } = this.props;\n    if (isLoading) {\n      return (\n        <div className={style.loaderWrap}>\n          <Loader type=\"Puff\" color=\"#00BFFF\" height={100} width={100} />;\n        </div>\n      );\n    }\n    return (\n      <>\n        <div className={style.header}>\n          <Link to=\"/\">Домой</Link>\n          <AutosizeInput\n            className={style.input}\n            inputStyle={{ fontSize: 18 }}\n            onFocus={this.handlerFocusIn}\n            onBlur={this.handlerFocusOut}\n            onChange={this.handlerChangeTitle}\n            onKeyPress={this.handlerClickEnter}\n            value={boardTitle}\n          />\n          <a onClick={this.handlerDeleteBoard}>Удалить доску</a>\n        </div>\n\n        <div className={style.lists}>\n          {this.makeLists()}\n          <div style={{ width: '250px', flex: '0 0 auto' }}>\n            <Composer\n              className={style.buttonAddList}\n              placeholder=\"Ввести заголовок списка\"\n              buttonTitle=\"Добавить список\"\n              action={this.handlerAddList}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state: AppState, ownProps: RouteProps): StateProps => ({\n  board: { ...state.board.board },\n  boardTitle: state.board.boardTitle,\n  isLoading: state.board.isLoading,\n  id: ownProps.match.params.id,\n});\n\nconst mapDispatchToProps: DispatchProps = { getBoard, setBoardTitle, editBoardTitle, deleteBoard, addList };\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Board));\n","import React from 'react';\nimport style from './board.module.scss';\n\nexport default function Board({ title }: { title: string }): React.ReactElement {\n  return <div className={style.board}>{title}</div>;\n}\n","import React, { ReactElement, ReactNode } from 'react';\nimport style from './modal.module.scss';\n\ninterface PropsType {\n  active: boolean;\n  setActive: (value: boolean) => void;\n  children: ReactNode | null;\n  onClose?: () => void;\n}\n\nconst Modal = ({ active, setActive, children, onClose = (): void => {} }: PropsType): ReactElement => {\n  const handlerClose = (): void => {\n    setActive(false);\n    onClose();\n  };\n\n  return (\n    <div className={active ? [style.modal, style.active].join(' ') : style.modal} onClick={handlerClose}>\n      <div\n        className={active ? [style.content, style.active].join(' ') : style.content}\n        onClick={(event): void => {\n          event.stopPropagation();\n        }}\n      >\n        {active ? children : null}\n      </div>\n    </div>\n  );\n};\n\nModal.defaultProps = {\n  onClose: (): void => {},\n};\n\nexport default Modal;\n","import React, { useEffect, VoidFunctionComponent } from 'react';\nimport { useForm } from 'react-hook-form';\nimport PasswordStrengthBar from 'react-password-strength-bar';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport Loader from 'react-loader-spinner';\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\nimport { email } from '../../common/validator/validator';\nimport { IAdmission } from '../../common/interfaces/IAdmission';\nimport { signup } from '../../store/modules/user/actions';\nimport style from './registration.module.scss';\n\ninterface FormData {\n  email: string;\n  password: string;\n  confirmPassword: string;\n}\n\nenum ErrorFormMessage {\n  REQUIRE = 'Обязательно для заполнения',\n  INCORRECT_EMAIL = 'Некорректная запись email',\n  PASSWORD_MISMATCH = 'Пароли несовпадают',\n  EMAIL_ALREADY_EXIST = 'Данная почта уже используется',\n}\n\nexport const Registration: VoidFunctionComponent = () => {\n  const dispatch = useDispatch();\n  const stateUser = useTypedSelector((state) => state.user);\n  const {\n    register,\n    handleSubmit,\n    setError,\n    clearErrors,\n    watch,\n    formState: { errors },\n  } = useForm<FormData>({ mode: 'all', delayError: 1000 });\n  const currentPassword = watch('password');\n\n  const onSubmit = handleSubmit(async (data) => {\n    const newUser: IAdmission = { email: data.email, password: data.password };\n    const error = (): void => {\n      setError('email', { message: ErrorFormMessage.EMAIL_ALREADY_EXIST });\n    };\n    dispatch(signup(newUser, error));\n  });\n\n  useEffect(() => {\n    clearErrors('email');\n  }, [watch('email')]);\n\n  return (\n    <div className={style.wrapper}>\n      <form className={style.form} onSubmit={onSubmit}>\n        <p className={style.title}>Регистрация</p>\n\n        <div className={style.contentBlock}>\n          <label htmlFor=\"email\">Email</label>\n          {errors.email && <p className={style.error}>{errors.email.message}</p>}\n          <input\n            className={style.input}\n            {...register('email', {\n              required: { value: true, message: ErrorFormMessage.REQUIRE },\n              pattern: { value: email, message: ErrorFormMessage.INCORRECT_EMAIL },\n            })}\n            type=\"text\"\n          />\n        </div>\n\n        <div className={style.contentBlock}>\n          <label htmlFor=\"password\">Пароль</label>\n          {errors.password && <p className={style.error}>{errors.password.message}</p>}\n          <input\n            className={style.input}\n            {...register('password', { required: { value: true, message: ErrorFormMessage.REQUIRE } })}\n            type=\"password\"\n          />\n          <PasswordStrengthBar scoreWordStyle={{ display: 'none' }} password={currentPassword} minLength={4} />\n        </div>\n\n        <div className={style.contentBlock}>\n          <label htmlFor=\"confirmPassword\">Повторите пароль</label>\n          {errors.confirmPassword && <p className={style.error}>{errors.confirmPassword.message}</p>}\n          <input\n            className={style.input}\n            {...register('confirmPassword', {\n              required: { value: true, message: ErrorFormMessage.REQUIRE },\n              validate: (value) => value === currentPassword || ErrorFormMessage.PASSWORD_MISMATCH,\n            })}\n            type=\"password\"\n          />\n        </div>\n\n        <input className={style.submitButton} type=\"submit\" value=\"Зарегистрироваться\" />\n        <div className={style.loginWrapper}>\n          <span className={style.linkTitle}>Уже есть аккаунт?</span>\n          <Link className={style.link} to=\"/login\">\n            Войти\n          </Link>\n        </div>\n\n        <div className={style.loaderWrapper}>\n          <Loader type=\"Oval\" color=\"#00BFFF\" height={50} width={50} visible={stateUser.isLoading} />\n        </div>\n      </form>\n    </div>\n  );\n};\n","import { asyncDispatch as dispatch } from '../../store';\nimport { ModalActionTypes } from '../../types/modal';\n\nexport const setModalActive = (value: boolean): void => {\n  if (value) {\n    dispatch({ type: ModalActionTypes.SHOW_MODAL });\n  } else {\n    dispatch({ type: ModalActionTypes.HIDE_MODAL });\n  }\n};\n","import { Dispatch } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\nimport api from '../../../api/request';\nimport config from '../../../common/constants/api';\nimport { BoardsAction, BoardsActionTypes } from '../../types/boards';\nimport { setModalActive } from '../modal/actions';\nimport { AppState } from '../../store';\nimport { IBoard } from '../../../common/interfaces/IBoard';\n\ntype ThunkActionType = ThunkAction<Promise<void>, AppState, unknown, BoardsAction>;\n\nexport const getBoards = () => async (dispatch: Dispatch): Promise<void> => {\n  try {\n    dispatch({ type: BoardsActionTypes.UPDATE_BOARDS });\n    const { boards }: { boards: IBoard[] } = await api.get(config.boards);\n    dispatch({ type: BoardsActionTypes.UPDATE_BOARDS_SUCCESS, payload: boards });\n  } catch (e) {\n    dispatch({ type: BoardsActionTypes.UPDATE_BOARDS_ERROR, payload: 'Призошла ошибка при получении списка досок' });\n  }\n};\n\nexport const createBoard = (titleName: string): ThunkActionType => async (dispatch): Promise<void> => {\n  try {\n    dispatch({ type: BoardsActionTypes.ADD_BOARDS });\n    await api.post(config.boards, { title: titleName });\n    dispatch({ type: BoardsActionTypes.ADD_BOARDS_SUCCESS });\n    setModalActive(false);\n    await dispatch(getBoards());\n  } catch (e) {\n    dispatch({ type: BoardsActionTypes.ADD_BOARDS_ERROR, payload: 'Призошла ошибка при добавлении новой доски' });\n  }\n};\n","import React, { ChangeEvent, ReactElement, KeyboardEvent, useState, useRef, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { createBoard } from '../../../store/modules/boards/actions';\nimport validator, { pattern } from '../../../common/validator/validator';\nimport style from './content.module.scss';\n\nexport default (): ReactElement => {\n  const [text, setText] = useState('');\n  const dispatch = useDispatch();\n  const refInput = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (refInput.current) {\n      refInput.current.select();\n    }\n  }, []);\n\n  const onChangeInput = (event: ChangeEvent<HTMLInputElement>): void => {\n    const inputText = event.target.value;\n    if (validator(pattern, inputText)) {\n      setText(inputText);\n    }\n  };\n\n  const onAddBoard = (): void => {\n    if (text) {\n      dispatch(createBoard(text.trim()));\n    }\n  };\n\n  const handlePressEnter = (event: KeyboardEvent<HTMLInputElement>): void => {\n    if (event.key === 'Enter') {\n      onAddBoard();\n    }\n  };\n\n  return (\n    <div className={style.content}>\n      <h3>Создание новой доски</h3>\n      <input\n        className={style.text}\n        ref={refInput}\n        placeholder=\"Введите заголовок доски...\"\n        type=\"text\"\n        value={text}\n        onChange={onChangeInput}\n        onKeyPress={handlePressEnter}\n      />\n      <button className={style.buttonCreate} onClick={onAddBoard}>\n        Создать доску\n      </button>\n    </div>\n  );\n};\n","import React, { Component, ReactElement } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Loader from 'react-loader-spinner';\nimport { AppState } from '../../store/store';\nimport { IBoard } from '../../common/interfaces/IBoard';\nimport Board from './components/Board/Board';\nimport Modal from '../../components/Modal/Modal';\nimport CreateBoard from '../../components/Modal/CreateBoard/CreateBoard';\nimport { getBoards } from '../../store/modules/boards/actions';\nimport { setModalActive } from '../../store/modules/modal/actions';\nimport style from './home.module.scss';\n\ntype MapDispatch = {\n  getBoards: () => void;\n  setModalActive: (value: boolean) => void;\n};\n\ntype MapState = {\n  boards: IBoard[];\n  modal: { active: boolean };\n  isLoading: boolean;\n};\n\ntype Props = MapState & MapDispatch;\n\nclass Home extends Component<Props> {\n  async componentDidMount(): Promise<void> {\n    const { getBoards: asyncGetBoards } = this.props;\n    await asyncGetBoards();\n  }\n\n  onClickAddBoard = (): void => {\n    setModalActive(true);\n  };\n\n  makeBoards(): ReactElement[] {\n    const { boards } = this.props;\n    return boards?.map((board) => (\n      <Link to={`/board/${board.id}`} key={board.id}>\n        <Board title={board.title} />\n      </Link>\n    ));\n  }\n\n  render(): ReactElement {\n    const { modal, isLoading } = this.props;\n    if (isLoading) {\n      return (\n        <div className={style.loaderWrap}>\n          <Loader type=\"Puff\" color=\"#00BFFF\" height={100} width={100} />;\n        </div>\n      );\n    }\n    return (\n      <div className={style.wrapper}>\n        <h2 className={style.title}>Мои Доски</h2>\n        <div className={style.borders}>\n          <button className={style.button} onClick={this.onClickAddBoard}>\n            + Cоздать доску\n          </button>\n          {this.makeBoards()}\n          <Modal active={modal.active} setActive={setModalActive}>\n            <CreateBoard />\n          </Modal>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: AppState): MapState => {\n  const { boards, isLoading } = { ...state.boards };\n  return {\n    boards,\n    isLoading,\n    modal: state.modal,\n  };\n};\n\nconst mapDispatchToProps: MapDispatch = { getBoards, setModalActive };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import React, { ChangeEvent, FC, useState, KeyboardEvent } from 'react';\nimport TextareaAutosize from 'react-textarea-autosize';\n\ntype Props = {\n  text: string;\n  className?: string;\n  placeHolder?: string;\n  action?: (title: string) => void;\n  validator?: (text: string) => boolean;\n};\n\nexport const EditField: FC<Props> = ({ text, className, action, validator, placeHolder }) => {\n  const [value, setValue] = useState<string>(text);\n\n  const handleChange = (event: ChangeEvent<HTMLTextAreaElement>): void => {\n    if (validator) {\n      if (validator(event.target.value)) {\n        setValue(event.target.value);\n      }\n      return;\n    }\n    setValue(event.target.value);\n  };\n\n  const handleSubmit = (e: React.FocusEvent<HTMLTextAreaElement>): void => {\n    if (action) {\n      e.target.value.trim();\n      action(e.target.value);\n    }\n  };\n\n  const handleOnKeyDown = (e: KeyboardEvent<HTMLTextAreaElement>): void => {\n    if (e.key === 'Escape') {\n      e.currentTarget.value = text;\n      e.currentTarget.blur();\n    } else if (e.key === 'Enter') {\n      e.currentTarget.blur();\n    }\n  };\n  return (\n    <TextareaAutosize\n      className={className}\n      onKeyDown={handleOnKeyDown}\n      onChange={handleChange}\n      onBlur={handleSubmit}\n      value={value}\n      placeholder={placeHolder}\n    />\n  );\n};\n","import React, { ChangeEvent, FC, useEffect, useRef, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport { addCard, editGroupCards } from '../../store/modules/board/actions';\nimport api from '../../api/request';\nimport config from '../../common/constants/api';\nimport { IBoard } from '../../common/interfaces/IBoard';\nimport { ICard } from '../../common/interfaces/ICard';\nimport { IBoardFull } from '../../common/interfaces/IBoardFull';\nimport { ILists } from '../../common/interfaces/ILists';\nimport { ICards } from '../../common/interfaces/ICards';\nimport { IList } from '../../common/interfaces/IList';\nimport { IDataCardGroup } from '../../common/interfaces/IDataCardGroup';\nimport style from './formRelocate.module.scss';\n\ntype Props = {\n  className?: string;\n  entity: { boardID: number; card: ICard; list: IList };\n  closeModal: () => void;\n  closeRelocate: () => void;\n  editTitle: boolean;\n  formTitle: string;\n  buttonTitle: string;\n};\n\ntype FormData = {\n  board: number;\n  list?: number;\n  position?: number;\n  title: string;\n};\n\nconst optionBoards = (boards: IBoard[]): React.ReactElement[] => {\n  return boards.map((board) => {\n    return (\n      <option key={board.id} value={board.id}>\n        {board.title}\n      </option>\n    );\n  });\n};\n\nconst optionLists = (lists: ILists): React.ReactElement[] => {\n  return Object.values(lists).map((list) => {\n    return (\n      <option key={list.id} value={list.id}>\n        {list.title}\n      </option>\n    );\n  });\n};\n\nconst optionCards = (cards: ICards, isSameList: boolean): React.ReactElement[] | React.ReactElement => {\n  if (Object.keys(cards).length === 0) {\n    return <option value={0}>1</option>;\n  }\n  const lastOne = (): React.ReactElement | [] => {\n    if (isSameList) return [];\n    const indexPos = Object.keys(cards).length;\n    return (\n      <option key={Date.now()} value={indexPos}>\n        {indexPos + 1}\n      </option>\n    );\n  };\n  return Object.values(cards)\n    .sort((a, b) => a.position - b.position)\n    .map((card, index) => {\n      return (\n        <option key={card.id} value={card.position}>\n          {index + 1}\n        </option>\n      );\n    })\n    .concat(lastOne());\n};\n\nconst sortCardsByPosition = (board: IBoardFull): void => {\n  Object.values(board.lists).forEach((list) => {\n    Object.values(list.cards).sort((a, b) => a.position - b.position);\n  });\n};\n\nconst getFirstListAndCardValues = (\n  board: IBoardFull,\n  currentListID?: number\n): [number | undefined, number | undefined] => {\n  let listID = currentListID;\n  let cardPos;\n  if (Object.keys(board.lists).length > 0) {\n    if (!listID) listID = +Object.keys(board.lists)[0];\n    if (Object.keys(board.lists[listID].cards).length > 0) {\n      const card = Object.values(board.lists[listID].cards)[0];\n      cardPos = card.position;\n    }\n  }\n  return [listID, cardPos];\n};\n\nconst createGroup = (fromList: IList, toList: IList, card: ICard, position: number): IDataCardGroup[] => {\n  const group: IDataCardGroup[] = [];\n  // SAME LIST\n  if (fromList.id === toList.id) {\n    const target = Object.values(fromList.cards).find((value) => value.position === +position) as ICard;\n    group.push(\n      { list_id: fromList.id, id: target.id, position: card.position },\n      { list_id: fromList.id, id: card.id, position }\n    );\n    // ANOTHER LIST\n  } else {\n    group.push({ list_id: toList.id, id: card.id, position });\n    Object.values(fromList.cards).forEach((c) => {\n      if (card.id !== c.id && c.position >= card.position) {\n        group.push({ position: c.position - 1, list_id: fromList.id, id: c.id });\n      }\n    });\n    Object.values(toList.cards).forEach((c) => {\n      if (c.position >= position) {\n        group.push({ position: c.position + 1, list_id: toList.id, id: c.id });\n      }\n    });\n  }\n  return group;\n};\n\nconst FormRelocate: FC<Props> = ({ formTitle, buttonTitle, entity, closeRelocate, editTitle }) => {\n  const {\n    register,\n    handleSubmit,\n    getValues,\n    setValue,\n    setError,\n    formState: { errors, isValid },\n  } = useForm<FormData>({ mode: 'onChange' });\n  const [boards, setBoards] = useState<IBoard[]>([] as IBoard[]);\n  const [currentBoard, setCurrentBoard] = useState<IBoardFull>({} as IBoardFull);\n  const [currentListID, setCurrentListID] = useState<number | undefined>(undefined);\n  const ref = useRef<HTMLDivElement>(null);\n  const dispatch = useDispatch();\n\n  const loadBoards = async (): Promise<void> => {\n    const dataBoards = await api.get<unknown, { boards: IBoard[] }>(`${config.boards}`);\n    setBoards(dataBoards.boards);\n    setValue('board', dataBoards.boards[0].id);\n  };\n\n  const loadBoard = async (): Promise<void> => {\n    const dataBoard = await api.get<unknown, IBoardFull>(`${config.boards}/${getValues('board')}`);\n    sortCardsByPosition(dataBoard);\n    const [listID, cardPos] = getFirstListAndCardValues(dataBoard);\n    setValue('list', listID);\n    setValue('position', cardPos);\n    setCurrentBoard(dataBoard);\n    setCurrentListID(listID);\n  };\n  // click outside\n  useEffect(() => {\n    const checkIfClickedOutside = (e: Event): void => {\n      if (ref.current && !ref.current.contains(e.target as Node)) {\n        closeRelocate();\n      }\n    };\n    document.addEventListener('mousedown', checkIfClickedOutside);\n    return (): void => {\n      document.removeEventListener('mousedown', checkIfClickedOutside);\n    };\n  }, []);\n  // init data\n  useEffect(() => {\n    (async function f(): Promise<void> {\n      await loadBoards();\n      await loadBoard();\n    })();\n  }, []);\n\n  const onSubmit = handleSubmit((data) => {\n    if (entity.boardID === +data.board) {\n      if (editTitle) {\n        const title = data.title.replace(/\\s\\s+/g, ' ');\n        dispatch(\n          addCard(getValues('board').toString(), {\n            title,\n            list_id: getValues('list'),\n            position: getValues('position'),\n          })\n        );\n      } else {\n        const group = createGroup(\n          entity.list,\n          currentBoard.lists[currentListID as number],\n          entity.card,\n          getValues('position') as number\n        );\n        dispatch(editGroupCards(entity.boardID.toString(), group));\n      }\n      closeRelocate();\n    } else {\n      setError('board', { message: 'Relocate to other boards is temporarily unavailable' });\n    }\n  });\n\n  const handleChangeBoard = async (e: ChangeEvent<HTMLSelectElement>): Promise<void> => {\n    register('board').onChange(e);\n    await loadBoard();\n  };\n\n  const handleChangeList = (e: ChangeEvent<HTMLSelectElement>): void => {\n    register('list').onChange(e);\n    const listID = getValues('list');\n    const [, cardPos] = getFirstListAndCardValues(currentBoard, listID);\n    setValue('position', cardPos);\n    setCurrentListID(listID);\n  };\n\n  return (\n    <div className={style.wrapper} ref={ref}>\n      <p className={style.header}>{formTitle}</p>\n      <form onSubmit={onSubmit}>\n        {editTitle && (\n          <div className={style.content}>\n            {errors.title && <p className={style.error}>{errors.title.message}</p>}\n            <p>Название</p>\n            <TextareaAutosize\n              className={style.titleText}\n              {...register('title', {\n                pattern: { value: /^[\\s\\w\\p{L}.-]*$/u, message: 'Only letters and numbers' },\n                required: { value: true, message: 'Must be filled' },\n              })}\n              minRows={3}\n              autoFocus\n              onFocus={(e): void => {\n                e.target.select();\n              }}\n              defaultValue={entity.card.title}\n            />\n          </div>\n        )}\n\n        {errors.board && <p className={style.error}>{errors.board.message}</p>}\n        <div className={style.content}>\n          <label htmlFor=\"board\">Доска</label>\n          <select {...register('board')} onChange={handleChangeBoard}>\n            {optionBoards(boards)}\n          </select>\n        </div>\n\n        <div className={style.contentWrapper}>\n          <div className={style.content} style={{ width: '150px' }}>\n            <label htmlFor=\"list\">Список</label>\n            {currentListID ? (\n              <select {...register('list')} onChange={handleChangeList}>\n                {optionLists(currentBoard.lists)}\n              </select>\n            ) : (\n              <select {...register('list')} disabled value={-1}>\n                <option value={-1}>Нет списков</option>\n              </select>\n            )}\n          </div>\n\n          <div className={style.content} style={{ width: '100px' }}>\n            <label htmlFor=\"card\">Позиция</label>\n            {currentListID && currentBoard.lists[currentListID]?.cards ? (\n              <select {...register('position')}>\n                {optionCards(currentBoard.lists[currentListID].cards, +currentListID === entity.list.id)}\n              </select>\n            ) : (\n              <select {...register('position')} disabled value={-1}>\n                <option value={-1}>Н/Д</option>\n              </select>\n            )}\n          </div>\n        </div>\n\n        <input className={style.submit} type=\"submit\" value={buttonTitle} disabled={!isValid} />\n      </form>\n    </div>\n  );\n};\n\nexport default FormRelocate;\n","import React, { ReactElement, useEffect, useState } from 'react';\nimport { RouteComponentProps, useHistory, useLocation, useParams, withRouter } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport Modal from '../Modal';\nimport { EditField } from './EditField/EditField';\nimport { deleteCard, editCard } from '../../../store/modules/board/actions';\nimport validator, { pattern } from '../../../common/validator/validator';\nimport { useTypedSelector } from '../../../hooks/useTypedSelector';\nimport { ILists } from '../../../common/interfaces/ILists';\nimport { IList } from '../../../common/interfaces/IList';\nimport FormRelocate from '../../FormRelocate/FormRelocate';\nimport style from './editCard.module.scss';\n\nconst getListByCardID = (lists: ILists, cardID: number): IList => {\n  let foundList: IList = {} as IList;\n  Object.values(lists).forEach((list) => {\n    const card = Object.values(list.cards).find((value) => value.id === cardID);\n    if (card) foundList = list;\n  });\n  return foundList;\n};\n\nconst EditCard = (): ReactElement<RouteComponentProps> => {\n  const history = useHistory();\n  const { id: boardID, cardID } = useParams<{ id: string; cardID: string }>();\n  const { state: stateLocation } = useLocation<{ cardID: number; listID: number }>();\n  const [modal, setModal] = useState(false);\n  const [relocate, setRelocate] = useState(false);\n  const [copy, setCopy] = useState(false);\n  const lists = useTypedSelector((boardState) => boardState.board.board.lists);\n  const originList = getListByCardID(lists, +cardID);\n  const originCard = originList.cards[cardID];\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setModal(true);\n  }, [stateLocation]);\n\n  const historyBack = (): void => history.replace(`/board/${boardID}`);\n\n  const changeTitle = (text: string): void => {\n    if (originCard.title !== text) {\n      dispatch(editCard(boardID, originCard.id, { title: text }));\n    }\n  };\n  const handleDeleteCard = (): void => {\n    dispatch(deleteCard(boardID, originCard.id));\n    history.replace(`/board/${boardID}`);\n  };\n  const validateTitle = (text: string): boolean => {\n    return validator(pattern, text);\n  };\n  const closeModal = (): void => {\n    setModal(false);\n    historyBack();\n  };\n  const closeRelocate = (): void => {\n    setRelocate(false);\n  };\n  const closeCopy = (): void => {\n    setCopy(false);\n  };\n  const changeDescription = (text: string): void => {\n    if (originCard.description !== text) {\n      if (!text) {\n        dispatch(editCard(boardID, originCard.id, { description: null }));\n        return;\n      }\n      dispatch(editCard(boardID, originCard.id, { description: text }));\n    }\n  };\n  const toggleRelocate = (): void => {\n    setRelocate((prevRelocate) => !prevRelocate);\n  };\n  const toggleCopy = (): void => {\n    setCopy((prevCopy) => !prevCopy);\n  };\n\n  const content = originList ? (\n    <div className={style.wrapper}>\n      <div className={style.header}>\n        <span className={`${style.headerIcon} material-icons-round md-24`}>list_alt</span>\n        <EditField className={style.titleCard} text={originCard.title} action={changeTitle} validator={validateTitle} />\n        <div>\n          В колонке <span className={style.titleList}>{originList.title}</span>\n        </div>\n      </div>\n      <div className={style.main}>\n        <span className={`${style.mainIcon} material-icons-round`}>notes</span>\n        <div>Описание</div>\n        <EditField\n          className={style.description}\n          text={originCard.description}\n          action={changeDescription}\n          placeHolder=\"Добавить более подробное описание...\"\n        />\n      </div>\n      <div className={style.side}>\n        <h4 className={style.sideTitle}>Действия:</h4>\n        <button className={style.button} onClick={toggleCopy}>\n          Копирование\n        </button>\n        <button className={style.button} onClick={toggleRelocate}>\n          Перемещение\n        </button>\n        <button className={style.button} onClick={handleDeleteCard}>\n          Удалить\n        </button>\n      </div>\n      {relocate ? (\n        <FormRelocate\n          formTitle=\"Перемещение карточки\"\n          buttonTitle=\"Переместить\"\n          entity={{\n            card: originCard,\n            list: originList,\n            boardID: +boardID,\n          }}\n          closeModal={closeModal}\n          closeRelocate={closeRelocate}\n          editTitle={false}\n        />\n      ) : null}\n      {copy ? (\n        <FormRelocate\n          formTitle=\"Копирование карточки\"\n          buttonTitle=\"Создать карточку\"\n          entity={{\n            card: originCard,\n            list: originList,\n            boardID: +boardID,\n          }}\n          closeModal={closeModal}\n          closeRelocate={closeCopy}\n          editTitle\n        />\n      ) : null}\n    </div>\n  ) : null;\n\n  return (\n    <Modal active={modal} setActive={setModal} onClose={historyBack}>\n      {content}\n    </Modal>\n  );\n};\n\nexport default withRouter(EditCard);\n","import { ThunkAction } from 'redux-thunk';\nimport { Action, ActionCreator } from 'redux';\nimport { UserAction, UserActionTypes } from '../../types/user';\nimport { admission, deleteToken, setToken } from '../../../api/request';\nimport api from '../../../common/constants/api';\nimport { IAdmission } from '../../../common/interfaces/IAdmission';\nimport history from '../../../common/history/history';\nimport { AppState } from '../../store';\n\ntype ThunkType = ThunkAction<Promise<void>, AppState, unknown, UserAction>;\n\nexport const login = (user: IAdmission, callbackError?: () => void): ThunkType => async (dispatch): Promise<void> => {\n  try {\n    dispatch({ type: UserActionTypes.LOGIN });\n    const data = await admission.post<unknown, { token: string }>(api.login, user);\n    dispatch({ type: UserActionTypes.LOGIN_SUCCESS, payload: true });\n    setToken(data.token);\n    history.push('/');\n  } catch (e) {\n    dispatch({ type: UserActionTypes.LOGIN_ERROR });\n    if (callbackError) callbackError();\n  }\n};\n\nexport const signup = (user: IAdmission, callbackError?: () => void): ThunkType => async (dispatch): Promise<void> => {\n  try {\n    dispatch({ type: UserActionTypes.SIGNUP });\n    await admission.post(api.user, user);\n    dispatch({ type: UserActionTypes.SIGNUP_SUCCESS });\n    await dispatch(login(user));\n  } catch (e) {\n    dispatch({ type: UserActionTypes.SIGNUP_ERROR });\n    if (callbackError) callbackError();\n  }\n};\n\nexport const logout: ActionCreator<Action> = () => {\n  deleteToken();\n  history.push('login');\n  return {\n    type: UserActionTypes.LOGOUT,\n  };\n};\n","import React, { useEffect, VoidFunctionComponent } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport Loader from 'react-loader-spinner';\nimport { IAdmission } from '../../common/interfaces/IAdmission';\nimport { login } from '../../store/modules/user/actions';\nimport style from './authorization.module.scss';\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\n\ninterface FormData {\n  email: string;\n  password: string;\n  submit: string;\n}\n\nenum ErrorFormMessage {\n  REQUIRE = 'Обязательно для заполнения',\n  INVALID_DATA = 'Пользователь с такой почтой или паролем не найден',\n}\n\nconst Authorization: VoidFunctionComponent = () => {\n  const dispatch = useDispatch();\n  const stateUser = useTypedSelector((state) => state.user);\n  const {\n    register,\n    handleSubmit,\n    setError,\n    clearErrors,\n    watch,\n    formState: { errors },\n  } = useForm<FormData>({ mode: 'onTouched' });\n\n  useEffect(() => {\n    clearErrors('submit');\n  }, [watch('email')]);\n\n  const onSubmit = handleSubmit((data) => {\n    const user: IAdmission = { email: data.email, password: data.password };\n    const error = (): void => {\n      setError('submit', { message: ErrorFormMessage.INVALID_DATA });\n    };\n    dispatch(login(user, error));\n  });\n\n  return (\n    <div className={style.wrapper}>\n      <form className={style.form} onSubmit={onSubmit}>\n        <p className={style.title}>Вход</p>\n\n        <div className={style.contentBlock}>\n          <label htmlFor=\"email\">Email</label>\n          {errors.email && (\n            <label className={style.error} htmlFor=\"email\">\n              {errors.email.message}\n            </label>\n          )}\n          <input\n            className={style.input}\n            {...register('email', { required: { value: true, message: ErrorFormMessage.REQUIRE } })}\n          />\n        </div>\n\n        <div className={style.contentBlock}>\n          <label htmlFor=\"password\">Пароль</label>\n          {errors.password && <p className={style.error}>{errors.password.message}</p>}\n          <input\n            className={style.input}\n            {...register('password', { required: { value: true, message: ErrorFormMessage.REQUIRE } })}\n            type=\"password\"\n          />\n        </div>\n        {errors.submit && <label className={style.error}>{errors.submit.message}</label>}\n        <input className={style.submitButton} {...register('submit')} type=\"submit\" value=\"Войти\" />\n\n        <div className={style.loginWrapper}>\n          <span className={style.linkTitle}>Впервые у нас?</span>\n          <Link className={style.link} to=\"/signup\">\n            Зарегестрироваться\n          </Link>\n        </div>\n\n        <div className={style.loaderWrapper}>\n          <Loader type=\"Oval\" color=\"#00BFFF\" height={50} width={50} visible={stateUser.isLoading} />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Authorization;\n","import React, { CSSProperties, ReactElement } from 'react';\nimport { Redirect, Route, RouteProps } from 'react-router-dom';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { getToken } from '../../api/request';\nimport '../../common/constants/style.scss';\nimport { RootState } from '../../store/rootReducer';\nimport { UserState } from '../../store/types/user';\nimport { logout } from '../../store/modules/user/actions';\nimport { asyncDispatch } from '../../store/store';\n\nexport interface ProtectedRouteProps extends RouteProps {\n  isAuthenticated: boolean;\n  redirectPath: string;\n}\n\nconst wrapperLogOut: CSSProperties = {\n  marginTop: '5px',\n  display: 'flex',\n  justifyContent: 'flex-end',\n};\n\nclass ProtectedRoute extends Route<ProtectedRouteProps & PropsFromRedux> {\n  render(): ReactElement {\n    let redirectPath = '';\n    if (this.props.isAuthenticated) {\n      redirectPath = this.props.redirectPath;\n    }\n\n    const onClickLogOut = (): void => {\n      asyncDispatch(logout());\n      // deleteToken();\n      // history.push('/login');\n    };\n\n    if (redirectPath) {\n      const renderComponent = (): ReactElement => <Redirect to={{ pathname: redirectPath }} />;\n      return <Route {...this.props} component={renderComponent} render={undefined} />;\n    }\n\n    return (\n      <>\n        {getToken() && (\n          <div style={wrapperLogOut}>\n            <button className=\"primaryButton\" onClick={onClickLogOut}>\n              Выйти\n            </button>\n          </div>\n        )}\n        <Route {...this.props} />\n      </>\n    );\n  }\n}\n\nconst mapState = (state: RootState): Omit<UserState, 'isLoading'> => ({\n  isAuthorized: state.user.isAuthorized,\n});\n\nconst connector = connect(mapState);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport default connector(ProtectedRoute);\n","import React, { ReactElement } from 'react';\nimport { Switch, Route, useLocation } from 'react-router-dom';\nimport ReactNotification from 'react-notifications-component';\nimport 'react-notifications-component/dist/theme.css';\nimport Board from './pages/Board/Board';\nimport Home from './pages/Home/Home';\nimport EditCard from './components/Modal/EditCard/EditCard';\nimport { useTypedSelector } from './hooks/useTypedSelector';\nimport { Registration } from './pages/Registration/Registration';\nimport Authorization from './pages/Authorization/Authorization';\nimport ProtectedRoute, { ProtectedRouteProps } from './components/ProtectedRoute/ProtectedRoute';\nimport { getToken } from './api/request';\n\nconst getAuthorizedProps = (): ProtectedRouteProps => ({\n  redirectPath: '/login',\n  isAuthenticated: !getToken(),\n});\n\nconst getUnauthorizedProps = (): ProtectedRouteProps => ({\n  redirectPath: '/',\n  isAuthenticated: !!getToken(),\n});\n\nexport default function App(): ReactElement {\n  const { state } = useLocation<{ cardID: number }>();\n  const boardState = useTypedSelector((value) => value.board.board);\n\n  return (\n    <div className=\"container\">\n      <ReactNotification />\n      <Switch>\n        <ProtectedRoute path=\"/signup\" {...getUnauthorizedProps()} component={Registration} />\n        <ProtectedRoute path=\"/login\" {...getUnauthorizedProps()} component={Authorization} />\n        <ProtectedRoute path=\"/board/:id\" {...getAuthorizedProps()} component={Board} />\n        <ProtectedRoute path=\"/\" {...getAuthorizedProps()} component={Home} />\n      </Switch>\n      {state?.cardID && boardState?.title ? <Route exact path=\"/board/:id/card/:cardID\" component={EditCard} /> : null}\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router-dom';\nimport App from './App';\nimport store from './store/store';\nimport history from './common/history/history';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router history={history}>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryButton\":\"authorization_primaryButton__1kXOI\",\"wrapper\":\"authorization_wrapper__2qGED\",\"error\":\"authorization_error__P4g6l\",\"input\":\"authorization_input__1SS2c\",\"form\":\"authorization_form__FcbQn\",\"title\":\"authorization_title__3aBex\",\"contentBlock\":\"authorization_contentBlock__eBsWQ\",\"submitButton\":\"authorization_submitButton__39Uqm\",\"loginWrapper\":\"authorization_loginWrapper__2DzvF\",\"linkTitle\":\"authorization_linkTitle__1qohg\",\"link\":\"authorization_link__2Zjzq\",\"loaderWrapper\":\"authorization_loaderWrapper__200iR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"card_container__m1S0j\",\"card\":\"card_card__2J7vF\",\"title\":\"card_title__mik6v\",\"buttonRemove\":\"card_buttonRemove__14-6q\",\"hide\":\"card_hide__xauNQ\",\"icon\":\"card_icon__25Ch9\",\"dragStart\":\"card_dragStart__3z2BS\",\"dragOver\":\"card_dragOver__3mVBB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryButton\":\"editCard_primaryButton__3OptZ\",\"header\":\"editCard_header__2Ep2x\",\"headerIcon\":\"editCard_headerIcon__2Q0tr\",\"titleCard\":\"editCard_titleCard__2A4fY\",\"description\":\"editCard_description__2LtTL\",\"titleList\":\"editCard_titleList__2z7_e\",\"main\":\"editCard_main__39El2\",\"mainIcon\":\"editCard_mainIcon__2T1tc\",\"side\":\"editCard_side__6IJ-e\",\"button\":\"editCard_button__1XN2V\",\"sideTitle\":\"editCard_sideTitle__2wG51\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryButton\":\"formRelocate_primaryButton__292Pf\",\"wrapper\":\"formRelocate_wrapper__1dxuh\",\"submit\":\"formRelocate_submit__4kYMD\",\"error\":\"formRelocate_error__3NNIQ\",\"header\":\"formRelocate_header__h4oNi\",\"contentWrapper\":\"formRelocate_contentWrapper__3sHJI\",\"content\":\"formRelocate_content__3kWCw\",\"contentselect\":\"formRelocate_contentselect__22EHh\",\"titleText\":\"formRelocate_titleText__2RdNm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryButton\":\"list_primaryButton__Y-Jno\",\"list\":\"list_list__SL2-f\",\"header\":\"list_header__26bxF\",\"title\":\"list_title__2kuWo\",\"cards\":\"list_cards__1rvo9\",\"buttonRemoveList\":\"list_buttonRemoveList__LRdJ-\",\"icon\":\"list_icon__1Khrx\",\"buttonAddCard\":\"list_buttonAddCard__2qNjm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryButton\":\"composer_primaryButton__2X7EL\",\"buttonAdd\":\"composer_buttonAdd__17Wsw\",\"wrapper\":\"composer_wrapper__2KfPI\",\"composer\":\"composer_composer__7SBJz\",\"textArea\":\"composer_textArea__3KQqa\",\"hide\":\"composer_hide__2p0Do\",\"buttonActive\":\"composer_buttonActive__TL3C7\",\"buttonCancel\":\"composer_buttonCancel__1QZr6\",\"control\":\"composer_control__3qFBh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__3Os-o\",\"active\":\"modal_active__DY8Qi\",\"content\":\"modal_content__2s-YZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryButton\":\"board_primaryButton__zQ4mi\",\"header\":\"board_header__19Fgr\",\"buttonAddList\":\"board_buttonAddList__30o4I\",\"lists\":\"board_lists__1zRNg\",\"loaderWrap\":\"board_loaderWrap__1Vuwd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryButton\":\"home_primaryButton__18prE\",\"borders\":\"home_borders__1uvQo\",\"button\":\"home_button__3i_HQ\",\"title\":\"home_title__3CEKH\",\"loaderWrap\":\"home_loaderWrap__5kzRm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryButton\":\"editor_primaryButton__3Em41\",\"hide\":\"editor_hide__33Vr5\",\"modifierTitle\":\"editor_modifierTitle__1K9Il\",\"modifierEditArea\":\"editor_modifierEditArea__2rJEl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryButton\":\"content_primaryButton__2MNr2\",\"buttonCreate\":\"content_buttonCreate__HxHn6\",\"content\":\"content_content__2RxeI\",\"text\":\"content_text__2EpXV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryButton\":\"board_primaryButton__2pKw1\",\"board\":\"board_board__2o7ge\"};"],"sourceRoot":""}