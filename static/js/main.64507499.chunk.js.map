{"version":3,"sources":["pages/Boards/components/Composer/composer.module.scss","pages/Home/components/Modal/modal.module.scss","pages/Boards/components/List/list.module.scss","pages/Home/home.module.scss","pages/Boards/board.module.scss","pages/Home/components/Modal/Content/content.module.scss","pages/Boards/components/Card/card.module.scss","pages/Home/components/Board/board.module.scss","common/constants/api.ts","api/request.ts","store/types/board.ts","store/types/boards.ts","store/modules/boards/reducer.ts","store/modules/user/reducer.ts","store/types/modal.ts","store/modules/modal/reducer.ts","store/rootReducer.ts","store/modules/board/reducer.ts","store/store.ts","store/modules/board/actions.ts","pages/Boards/components/Card/Card.tsx","pages/Boards/components/List/List.tsx","pages/Boards/components/Composer/Composer.tsx","pages/Boards/Board.tsx","pages/Home/components/Board/Board.tsx","pages/Home/components/Modal/Modal.tsx","store/modules/modal/action.ts","store/modules/boards/actions.ts","common/validator/validator.ts","pages/Home/components/Modal/Content/Content.tsx","pages/Home/Home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","baseURL","process","boards","instance","axios","create","api","headers","Authorization","interceptors","response","use","res","data","BoardActionTypes","initialBoardState","board","title","users","lists","isLoading","error","inputs","BoardsActionTypes","initialState","ModalActionTypes","user","active","rootReducer","combineReducers","state","action","type","UPDATE_BOARD","UPDATE_BOARD_SUCCESS","payload","UPDATE_BOARD_ERROR","DELETE_BOARD","DELETE_BOARD_SUCCESS","DELETE_BOARD_ERROR","INPUT_CHANGE","UPDATE_BOARDS","UPDATE_BOARDS_SUCCESS","UPDATE_BOARDS_ERROR","modal","SHOW_MODAL","HIDE_MODAL","store","createStore","composeWithDevTools","applyMiddleware","thunk","asyncDispatch","dispatch","editBoardTitle","Card","className","style","card","makeCard","cards","Object","keys","map","value","id","toString","List","list","buttonAddCard","Composer","buttonTitle","placeholder","addList","useState","hide","setHide","input","setInput","handleClickButton","wrapper","button","join","onClick","composerControl","onChange","event","target","control","position","Board","getBoardID","props","setTitle","setBoardTitle1","setBoardTitle","getBoard","getBoard1","handlerFocusIn","select","handlerFocusOut","handlerChangeTitle","handlerClickEnter","currentTarget","blur","key","dBoard","deleteBoard1","deleteBoard","addNewList","asyncAddList","asyncGetBoard","this","getAsyncBoard","header","to","inputStyle","fontSize","onFocus","onBlur","onKeyUp","makeLists","Component","mapDispatchToProps","boardId","a","get","config","boardID","newTitle","UPDATE_BOARD_TITLE","put","UPDATE_BOARD_TITLE_SUCCESS","UPDATE_BOARD_TITLE_ERROR","delete","post","withRouter","connect","ownProps","match","params","Modal","setActive","children","content","stopPropagation","setModalActive","getBoards","pattern","text","setText","validText","setValidText","useDispatch","useEffect","inputText","test","validator","buttonCreate","titleName","console","log","Home","onClickAddBoard","asyncGetBoards","borders","makeBoards","Content","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64507499.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"composer_wrapper__ZX1ZG\",\"composerControl\":\"composer_composerControl__2eLFu\",\"hide\":\"composer_hide__2Fpm8\",\"button\":\"composer_button__1bG__\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__V7Kw9\",\"active\":\"modal_active__1cUFi\",\"content\":\"modal_content__2xwHk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"list_list__2LicW\",\"title\":\"list_title__1HuWP\",\"cards\":\"list_cards__1AhkS\",\"buttonAddCard\":\"list_buttonAddCard__2lBWg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"home_title__3CEKH\",\"borders\":\"home_borders__1uvQo\",\"button\":\"home_button__3i_HQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"board_header__3YuNo\",\"lists\":\"board_lists__31BMR\",\"buttonAddList\":\"board_buttonAddList__2DTa5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"content_content__2NNUk\",\"text\":\"content_text__yo7sa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"card_card__1TKlw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"board_board__2o7ge\"};","export default {\n  baseURL: process.env.REACT_APP_API_URL || '',\n  boards: '/board',\n};\n","import axios from 'axios';\nimport { api } from '../common/constants';\n\nconst instance = axios.create({\n  baseURL: api.baseURL,\n  headers: {\n    'Content-Type': 'application/json',\n    Authorization: 'Bearer 123', // к этому мы ещё вернёмся как-нибудь потом\n  },\n});\n\ninstance.interceptors.response.use((res) => res.data);\n\nexport default instance;\n","import { IBoardFull } from '../../common/interfaces/IBoardFull';\n\nexport interface BoardState {\n  board: IBoardFull;\n  isLoading: boolean;\n  error: null | string;\n  inputs: { title: string };\n}\n\nexport const initialBoardState: BoardState = {\n  board: { title: '', users: [], lists: {} },\n  isLoading: false,\n  error: null,\n  inputs: { title: '' },\n};\n\nexport enum BoardActionTypes {\n  UPDATE_BOARD = 'UPDATE_BOARD',\n  UPDATE_BOARD_SUCCESS = 'UPDATE_BOARD_SUCCESS',\n  UPDATE_BOARD_ERROR = 'UPDATE_BOARD_ERROR',\n  DELETE_BOARD = 'DELETE_BOARD',\n  DELETE_BOARD_SUCCESS = 'DELETE_BOARD_SUCCESS',\n  DELETE_BOARD_ERROR = 'DELETE_BOARD_ERROR',\n  UPDATE_BOARD_TITLE = 'UPDATE_BOARD_TITLE',\n  UPDATE_BOARD_TITLE_SUCCESS = 'UPDATE_BOARD_TITLE_SUCCESS',\n  UPDATE_BOARD_TITLE_ERROR = 'UPDATE_BOARD_TITLE_ERROR',\n  INPUT_CHANGE = 'INPUT_CHANGE',\n}\n\ninterface ActionUpdateBoard {\n  type: BoardActionTypes.UPDATE_BOARD;\n}\n\ninterface ActionUpdateBoardSuccess {\n  type: BoardActionTypes.UPDATE_BOARD_SUCCESS;\n  payload: IBoardFull;\n}\n\ninterface ActionUpdateBoardError {\n  type: BoardActionTypes.UPDATE_BOARD_ERROR;\n  payload: string;\n}\n\ninterface ActionDeleteBoard {\n  type: BoardActionTypes.DELETE_BOARD;\n}\n\ninterface ActionDeleteBoardSuccess {\n  type: BoardActionTypes.DELETE_BOARD_SUCCESS;\n  payload: IBoardFull;\n}\n\ninterface ActionDeleteBoardError {\n  type: BoardActionTypes.DELETE_BOARD_ERROR;\n  payload: string;\n}\n\ninterface ActionInputChange {\n  type: BoardActionTypes.INPUT_CHANGE;\n  payload: string;\n}\n\nexport type BoardAction =\n  | ActionUpdateBoard\n  | ActionUpdateBoardSuccess\n  | ActionUpdateBoardError\n  | ActionInputChange\n  | ActionDeleteBoard\n  | ActionDeleteBoardSuccess\n  | ActionDeleteBoardError;\n","import { IBoard } from '../../common/interfaces/IBoard';\n\nexport interface BoardsState {\n  boards: [] | IBoard[];\n  isLoading: boolean;\n  error: null | string;\n}\n\nexport enum BoardsActionTypes {\n  UPDATE_BOARDS = 'UPDATE_BOARDS',\n  UPDATE_BOARDS_SUCCESS = 'UPDATE_BOARDS_SUCCESS',\n  UPDATE_BOARDS_ERROR = 'UPDATE_BOARDS_ERROR',\n}\n\ninterface ActionInit {\n  type: BoardsActionTypes.UPDATE_BOARDS;\n}\n\ninterface ActionSuccess {\n  type: BoardsActionTypes.UPDATE_BOARDS_SUCCESS;\n  payload: IBoard[];\n}\n\ninterface ActionError {\n  type: BoardsActionTypes.UPDATE_BOARDS_ERROR;\n  payload: string;\n}\n\nexport type BoardsAction = ActionInit | ActionSuccess | ActionError;\n","import { BoardsState, BoardsAction, BoardsActionTypes } from '../../types/boards';\n\nconst initialState: BoardsState = {\n  boards: [],\n  isLoading: false,\n  error: null,\n};\n\nexport default function reducer(state = initialState, action: BoardsAction): BoardsState {\n  switch (action.type) {\n    case BoardsActionTypes.UPDATE_BOARDS:\n      return { isLoading: true, error: null, boards: [] };\n    case BoardsActionTypes.UPDATE_BOARDS_SUCCESS:\n      return { isLoading: false, error: null, boards: action.payload };\n    case BoardsActionTypes.UPDATE_BOARDS_ERROR:\n      return { isLoading: false, error: action.payload, boards: [] };\n    default:\n      return state;\n  }\n}\n","export interface UserState {\n  user: [];\n}\n\nconst initialState: UserState = {\n  user: [],\n};\n\nexport default function reducer(state = initialState, action: { type: string }): UserState {\n  switch (action.type) {\n    default: {\n      return { ...state };\n    }\n  }\n}\n","export interface ModalState {\n  active: boolean;\n}\n\nexport enum ModalActionTypes {\n  SHOW_MODAL = 'SHOW_MODAL',\n  HIDE_MODAL = 'HIDE_MODAL',\n}\n\ninterface ActionStart {\n  type: ModalActionTypes.SHOW_MODAL;\n}\n\ninterface ActionStop {\n  type: ModalActionTypes.HIDE_MODAL;\n}\n\nexport type ModalAction = ActionStart | ActionStop;\n","import { ModalAction, ModalActionTypes, ModalState } from '../../types/modal';\n\nconst initialState: ModalState = {\n  active: false,\n};\n\nexport default function reducer(state = initialState, action: ModalAction): ModalState {\n  switch (action.type) {\n    case ModalActionTypes.SHOW_MODAL:\n      return { active: true };\n    case ModalActionTypes.HIDE_MODAL:\n      return { active: false };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport boardReducer from './modules/board/reducer';\nimport boardsReducer from './modules/boards/reducer';\nimport userReducer from './modules/user/reducer';\nimport modalReducer from './modules/modal/reducer';\n\nexport const rootReducer = combineReducers({\n  board: boardReducer,\n  boards: boardsReducer,\n  user: userReducer,\n  modal: modalReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { BoardAction, BoardActionTypes, BoardState, initialBoardState } from '../../types/board';\n\nexport default function reducer(state = initialBoardState, action: BoardAction): BoardState {\n  switch (action.type) {\n    case BoardActionTypes.UPDATE_BOARD:\n      return { ...state, isLoading: true };\n    case BoardActionTypes.UPDATE_BOARD_SUCCESS:\n      return { ...state, isLoading: false, board: action.payload, inputs: { title: action.payload.title } };\n    case BoardActionTypes.UPDATE_BOARD_ERROR:\n      return { ...state, isLoading: false, error: action.payload };\n    case BoardActionTypes.DELETE_BOARD:\n      return { ...state, isLoading: true };\n    case BoardActionTypes.DELETE_BOARD_SUCCESS:\n      return { ...state, isLoading: false, board: action.payload };\n    case BoardActionTypes.DELETE_BOARD_ERROR:\n      return { ...state, isLoading: false, error: action.payload };\n    case BoardActionTypes.INPUT_CHANGE:\n      return { ...state, inputs: { title: action.payload } };\n    default: {\n      return state;\n    }\n  }\n}\n","import { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from './rootReducer';\nimport { UserState } from './modules/user/reducer';\nimport { ModalState } from './types/modal';\nimport { BoardState, initialBoardState } from './types/board';\nimport { BoardsState } from './types/boards';\n\nexport interface AppState {\n  board: BoardState;\n  boards: BoardsState;\n  user: UserState;\n  modal: ModalState;\n}\n\nconst initialState: AppState = {\n  board: initialBoardState,\n  boards: { boards: [], isLoading: false, error: null },\n  user: { user: [] },\n  modal: { active: false },\n};\n\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(thunk)));\n\nexport const asyncDispatch = store.dispatch;\nexport default store;\n","import { Dispatch } from 'redux';\nimport config from '../../../common/constants/api';\nimport api from '../../../api/request';\nimport { BoardAction, BoardActionTypes } from '../../types/board';\nimport { asyncDispatch } from '../../store';\n\nexport const getBoard = (boardId: string) => async (dispatch: Dispatch): Promise<void> => {\n  try {\n    dispatch({ type: BoardActionTypes.UPDATE_BOARD });\n    const board = await api.get(`${config.boards}/${boardId}`);\n    dispatch({ type: BoardActionTypes.UPDATE_BOARD_SUCCESS, payload: board });\n  } catch (e) {\n    dispatch({ type: BoardActionTypes.UPDATE_BOARD_ERROR, payload: 'Призошла ошибка при получении доски' });\n  }\n};\n\nexport const setBoardTitle = (boardID: string, newTitle: string) => async (dispatch: Dispatch): Promise<void> => {\n  try {\n    dispatch({ type: BoardActionTypes.UPDATE_BOARD_TITLE });\n    const title = await api.put(`${config.boards}/${boardID}`, { title: newTitle });\n    dispatch({ type: BoardActionTypes.UPDATE_BOARD_TITLE_SUCCESS, payload: title });\n  } catch (e) {\n    dispatch({\n      type: BoardActionTypes.UPDATE_BOARD_TITLE_ERROR,\n      payload: 'Призошла ошибка при изменении заголовка доски',\n    });\n  }\n};\n\nexport const editBoardTitle = (title: string): void => {\n  asyncDispatch({ type: BoardActionTypes.INPUT_CHANGE, payload: title });\n};\n\nexport const deleteBoard = (id: string) => async (dispatch: Dispatch<BoardAction>): Promise<void> => {\n  try {\n    dispatch({ type: BoardActionTypes.DELETE_BOARD });\n    const boards = await api.delete(`${config.boards}/${id}`);\n    dispatch({ type: BoardActionTypes.DELETE_BOARD_SUCCESS, payload: boards.data });\n  } catch (e) {\n    dispatch({ type: BoardActionTypes.DELETE_BOARD_ERROR, payload: 'Произошла ошибка при удалении доски' });\n  }\n};\n\nexport const addList = (id: string, data: { title: string; position: number }) => async (\n  dispatch: Dispatch\n): Promise<void> => {\n  try {\n    dispatch({ type: 'ADD_LIST' });\n    await api.post(`${config.boards}/${id}/list`, data);\n    dispatch({ type: 'ADD_LIST_SUCCESS', payload: true });\n  } catch (e) {\n    dispatch({ type: 'ADD_LIST_ERROR', payload: 'Произошла ошибка при добавлении списка' });\n  }\n};\n","import React from 'react';\nimport style from './card.module.scss';\nimport { ICard } from '../../../../common/interfaces/ICard';\n\nexport default function Card({ title }: ICard): React.ReactElement {\n  return <li className={style.card}>{title}</li>;\n}\n","import React, { ReactElement } from 'react';\nimport Card from '../Card/Card';\nimport style from './list.module.scss';\nimport { ICards } from '../../../../common/interfaces/ICards';\nimport { IList } from '../../../../common/interfaces/IList';\n\nfunction makeCard(cards: ICards): ReactElement[] {\n  return Object.keys(cards).map((value) => {\n    const card = cards[value];\n    return <Card key={card.id.toString()} {...card} />;\n  });\n}\n\nexport default function List({ title, cards }: IList): ReactElement {\n  return (\n    <div className={style.list}>\n      <h2 className={style.title}>{title}</h2>\n      <ul className={style.cards}>{makeCard(cards)}</ul>\n      <button className={style.buttonAddCard}>+ Добавить карточку</button>\n    </div>\n  );\n}\n","import React, { ChangeEvent, useState } from 'react';\nimport style from './composer.module.scss';\n\ninterface Props {\n  buttonTitle: string;\n  placeholder: string;\n  addList: (data: { title: string; position: number }) => void;\n}\n\nexport const Composer = ({ buttonTitle, placeholder, addList }: Props): React.ReactElement => {\n  const [hide, setHide] = useState(false);\n  const [input, setInput] = useState('');\n\n  const handleClickButton = (): void => {\n    setHide(!hide);\n  };\n\n  const handleClickAdd = (): void => {\n    addList({ title: input, position: 1 });\n    setHide(!hide);\n  };\n\n  const handleChangeText = (event: ChangeEvent<HTMLTextAreaElement>): void => {\n    setInput(event.target.value);\n  };\n\n  return (\n    <div className={style.wrapper}>\n      <button className={hide ? [style.button, style.hide].join(' ') : style.button} onClick={handleClickButton}>\n        + {buttonTitle}\n      </button>\n      <div className={hide ? style.composerControl : [style.composerControl, style.hide].join(' ')}>\n        <textarea placeholder={placeholder} value={input} onChange={handleChangeText} />\n        <div className={style.control}>\n          <button onClick={handleClickAdd}>Добавить</button>\n          <button onClick={handleClickButton}>X</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { ChangeEvent, Component, FocusEvent, KeyboardEvent, ReactElement } from 'react';\nimport AutosizeInput from 'react-input-autosize';\nimport { Link, RouteComponentProps, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { addList, deleteBoard, editBoardTitle, getBoard, setBoardTitle } from '../../store/modules/board/actions';\nimport style from './board.module.scss';\nimport { AppState } from '../../store/store';\nimport { IBoardFull } from '../../common/interfaces/IBoardFull';\nimport List from './components/List/List';\nimport { Composer } from './components/Composer/Composer';\n\ninterface IData {\n  title: string;\n  position: number;\n}\n\ninterface StateProps {\n  board: IBoardFull;\n  id: string;\n  inputs: { title: string };\n}\n\ninterface DispatchProps {\n  getBoard: (id: string) => void;\n  setBoardTitle: (id: string, newTitle: string) => void;\n  editBoardTitle: (newTitle: string) => void;\n  deleteBoard: (id: string) => void;\n  addList: (id: string, data: IData) => void;\n}\n\ntype Props = RouteComponentProps<{ id: string }>;\n\ntype PropsType = StateProps & DispatchProps & Props;\n\nclass Board extends Component<PropsType> {\n  componentDidMount(): void {\n    const { id } = this.props;\n    const { getBoard: getAsyncBoard } = this.props;\n    getAsyncBoard(id);\n  }\n\n  getBoardID = (): string => {\n    const { id } = this.props;\n    return id;\n  };\n\n  setTitle = (title: string): void => {\n    const { setBoardTitle: setBoardTitle1 } = this.props;\n    setBoardTitle1(this.getBoardID(), title);\n  };\n\n  getBoard = (): void => {\n    const { getBoard: getBoard1 } = this.props;\n    getBoard1(this.getBoardID());\n  };\n\n  handlerFocusIn = (event: FocusEvent<HTMLInputElement>): void => {\n    event.target.select();\n  };\n\n  handlerFocusOut = (event: FocusEvent<HTMLInputElement>): void => {\n    this.setTitle(event.target.value);\n  };\n\n  handlerChangeTitle = (event: ChangeEvent<HTMLInputElement>): void => {\n    editBoardTitle(event.target.value);\n  };\n\n  handlerClickEnter = (event: KeyboardEvent<HTMLInputElement>): void => {\n    const { value, blur } = event.currentTarget;\n    if (event.key === 'Enter') {\n      this.setTitle(value);\n      blur();\n    }\n  };\n\n  dBoard = (): void => {\n    const { deleteBoard: deleteBoard1 } = this.props;\n    deleteBoard1(this.getBoardID());\n    // eslint-disable-next-line react/destructuring-assignment\n    // this.props.history.push('/');\n  };\n\n  addNewList = (data: IData): void => {\n    const { addList: asyncAddList, getBoard: asyncGetBoard } = this.props;\n    asyncAddList(this.getBoardID(), data);\n    asyncGetBoard(this.getBoardID());\n  };\n\n  makeLists(): ReactElement[] {\n    const { board } = this.props;\n    const { lists } = board;\n    return Object.keys(lists).map((value) => {\n      const list = lists[value];\n      return <List key={list.id} {...list} />;\n    });\n  }\n\n  render(): ReactElement {\n    const {\n      inputs: { title },\n    } = this.props;\n    return (\n      <>\n        <div className={style.header}>\n          <Link to=\"/\">Домой</Link>\n          <AutosizeInput\n            className={style.input}\n            inputStyle={{ fontSize: 18 }}\n            onFocus={this.handlerFocusIn}\n            onBlur={this.handlerFocusOut}\n            onChange={this.handlerChangeTitle}\n            onKeyUp={this.handlerClickEnter}\n            value={title}\n          />\n          <button onClick={this.dBoard}>Удалить доску</button>\n        </div>\n        <div className={style.lists}>\n          <Composer\n            buttonTitle=\"Добавить список\"\n            placeholder=\"Ввести заголовок для этой карточки\"\n            addList={this.addNewList}\n          />\n          {this.makeLists()}\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state: AppState, ownProps: Props): StateProps => ({\n  board: { ...state.board.board },\n  id: ownProps.match.params.id,\n  inputs: { title: state.board.inputs.title },\n});\n\nconst mapDispatchToProps: DispatchProps = { getBoard, setBoardTitle, editBoardTitle, deleteBoard, addList };\n\n// export default connect(mapStateToProps, { getBoard })(withRouter(Board));\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Board));\n","import React from 'react';\nimport style from './board.module.scss';\n\nexport default function Board({ title }: { title: string }): React.ReactElement {\n  return <div className={style.board}>{title}</div>;\n}\n","import React, { ReactElement, ReactNode } from 'react';\nimport style from './modal.module.scss';\n\ninterface PropsType {\n  active: boolean;\n  setActive: (value: boolean) => void;\n  children: ReactNode | null;\n}\n\nconst Modal = ({ active, setActive, children }: PropsType): ReactElement => (\n  <div className={active ? [style.modal, style.active].join(' ') : style.modal} onClick={(): void => setActive(false)}>\n    <div\n      className={active ? [style.content, style.active].join(' ') : style.content}\n      onClick={(event): void => {\n        event.stopPropagation();\n      }}\n    >\n      {children}\n    </div>\n  </div>\n);\n\nexport default Modal;\n","import { asyncDispatch as dispatch } from '../../store';\nimport { ModalActionTypes } from '../../types/modal';\n\nexport const setModalActive = (value: boolean): void => {\n  if (value) {\n    dispatch({ type: ModalActionTypes.SHOW_MODAL });\n  } else {\n    dispatch({ type: ModalActionTypes.HIDE_MODAL });\n  }\n};\n","import { Dispatch } from 'redux';\nimport api from '../../../api/request';\nimport config from '../../../common/constants/api';\nimport { BoardsActionTypes } from '../../types/boards';\nimport { setModalActive } from '../modal/action';\n\nexport const getBoards = () => async (dispatch: Dispatch): Promise<void> => {\n  try {\n    dispatch({ type: BoardsActionTypes.UPDATE_BOARDS });\n    const boards = await api.get(config.boards);\n    dispatch({ type: BoardsActionTypes.UPDATE_BOARDS_SUCCESS, payload: boards });\n  } catch (e) {\n    dispatch({ type: BoardsActionTypes.UPDATE_BOARDS_ERROR, payload: e });\n  }\n};\n\nexport const createBoard = (titleName: string) => async (dispatch: Dispatch): Promise<void> => {\n  try {\n    const { data: boards } = await api.post(config.boards, { title: titleName });\n    dispatch({ type: 'ADD_BOARDS', boards });\n    setModalActive(false);\n  } catch (e) {\n    dispatch({ type: 'ADD_BOARDS_ERROR' });\n  }\n};\n","export default (pattern: RegExp, text: string): boolean => pattern.test(text);\nexport const pattern = /^((\\w|[А-ЯЁа-яё])+(\\s(?!$)|\\.|-)?)+$/;\n","import React, { ChangeEvent, ReactElement, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport AutosizeInput from 'react-input-autosize';\nimport { createBoard, getBoards } from '../../../../../store/modules/boards/actions';\nimport validator, { pattern } from '../../../../../common/validator/validator';\nimport style from './content.module.scss';\n\nexport default (): ReactElement => {\n  const [text, setText] = useState('');\n  const [validText, setValidText] = useState(false);\n  const dispatch = useDispatch();\n  const onChangeInput = (event: ChangeEvent<HTMLInputElement>): void => {\n    const inputText = event.target.value;\n    setText(inputText);\n    return validator(pattern, inputText) ? setValidText(true) : setValidText(false);\n  };\n  const onAddBoard = (): void => {\n    // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n    validText ? dispatch(createBoard(text)) : console.log('Wrong expression');\n  };\n  // UseEffect for update boards after close modal window\n  useEffect(\n    () => (): void => {\n      dispatch(getBoards());\n    },\n    []\n  );\n  return (\n    <div className={style.content}>\n      <h3>Создание новой доски</h3>\n      <AutosizeInput placeholder=\"Добавить заголовок доски\" type=\"text\" value={text} onChange={onChangeInput} />\n      <button className={style.buttonCreate} onClick={onAddBoard}>\n        Создать доску\n      </button>\n    </div>\n  );\n};\n","import React, { Component, ReactElement } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux'; //\nimport { AppState } from '../../store/store';\nimport { IBoard } from '../../common/interfaces/IBoard';\nimport Board from './components/Board/Board';\nimport Modal from './components/Modal/Modal';\nimport Content from './components/Modal/Content/Content';\nimport { getBoards } from '../../store/modules/boards/actions';\nimport { setModalActive } from '../../store/modules/modal/action';\nimport style from './home.module.scss';\n\ntype PropsType = {\n  boards: IBoard[];\n  modal: { active: boolean };\n  getBoards: () => Promise<void>;\n  setModalActive: (value: boolean) => void;\n};\n\ninterface MapState {\n  boards: IBoard[];\n  modal: { active: boolean };\n}\n\nclass Home extends Component<PropsType> {\n  async componentDidMount(): Promise<void> {\n    const { getBoards: asyncGetBoards } = this.props;\n    await asyncGetBoards();\n  }\n\n  onClickAddBoard = (): void => {\n    setModalActive(true);\n  };\n\n  makeBoards(): ReactElement[] {\n    const { boards } = this.props;\n    return boards?.map((board) => (\n      <Link to={`/board/${board.id}`} key={board.id}>\n        <Board title={board.title} />\n      </Link>\n    ));\n  }\n\n  render(): ReactElement {\n    const { modal } = this.props;\n    return (\n      <div className={style.wrapper}>\n        <h2 className={style.title}>Мои Доски</h2>\n        <div className={style.borders}>\n          <button className={style.button} onClick={this.onClickAddBoard}>\n            + Cоздать доску\n          </button>\n          {this.makeBoards()}\n          <Modal active={modal.active} setActive={setModalActive}>\n            {modal.active ? <Content /> : null}\n          </Modal>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: AppState): MapState => {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  const { boards } = { ...state.boards.boards };\n  return {\n    boards,\n    modal: state.modal,\n  };\n};\n\nexport default connect(mapStateToProps, { getBoards, setModalActive })(Home);\n","import React, { ReactElement } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport Board from './pages/Boards/Board';\nimport Home from './pages/Home/Home';\n\nexport default function App(): ReactElement {\n  return (\n    <Router>\n      <div>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/board/:id\">Board</Link>\n            </li>\n          </ul>\n        </nav>\n        <Switch>\n          <Route path=\"/board/:id\" component={Board} />\n          <Route path=\"/\" component={Home} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <div className=\"container\">\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}