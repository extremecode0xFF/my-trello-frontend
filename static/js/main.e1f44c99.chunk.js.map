{"version":3,"sources":["common/constants/api.ts","common/history/history.ts","api/request.ts","store/types/board.ts","store/types/boards.ts","store/modules/boards/reducer.ts","store/modules/user/reducer.ts","store/types/modal.ts","store/modules/modal/reducer.ts","store/types/drag.ts","store/rootReducer.ts","store/modules/board/reducer.ts","store/modules/dragndrop/reducer.ts","store/store.ts","common/notifications/notifications.ts","store/modules/board/actions.ts","hooks/useTypedSelector.ts","store/modules/dragndrop/actions.ts","pages/Board/components/Card/Card.tsx","common/validator/validator.ts","components/Composer/Composer.tsx","components/Editor/Editor.tsx","pages/Board/components/List/List.tsx","pages/Board/Board.tsx","pages/Home/components/Board/Board.tsx","components/Modal/Modal.tsx","pages/Registration/Registration.tsx","store/modules/modal/actions.ts","store/modules/boards/actions.ts","components/Modal/CreateBoard/CreateBoard.tsx","pages/Home/Home.tsx","components/Modal/EditCard/EditField/EditField.tsx","components/FormRelocate/FormRelocate.tsx","components/Modal/EditCard/EditCard.tsx","pages/Authorization/Authorization.tsx","components/ProtectedRoute/ProtectedRoute.tsx","App.tsx","index.tsx","pages/Board/components/Card/card.module.scss","pages/Authorization/authorization.module.scss","components/Modal/EditCard/editCard.module.scss","pages/Registration/registration.module.scss","components/FormRelocate/formRelocate.module.scss","components/Composer/composer.module.scss","pages/Board/components/List/list.module.scss","pages/Board/board.module.scss","components/Modal/modal.module.scss","components/Editor/editor.module.scss","pages/Home/home.module.scss","components/Modal/CreateBoard/content.module.scss","pages/Home/components/Board/board.module.scss"],"names":["baseURL","process","boards","list","card","user","login","createBrowserHistory","getToken","localStorage","getItem","setToken","token","setItem","deleteToken","removeItem","instance","axios","create","api","admission","headers","interceptors","request","use","requestConfig","Authorization","history","push","response","res","data","error","message","BoardActionTypes","initialBoardState","board","title","users","lists","isLoading","boardTitle","BoardsActionTypes","initialState","ModalActionTypes","active","DragNDropActionTypes","slot","originLists","rootReducer","combineReducers","state","action","type","UPDATE_BOARD","UPDATE_BOARD_SUCCESS","payload","UPDATE_BOARD_ERROR","INPUT_CHANGE","EDIT_BOARD","UPDATE_BOARDS","UPDATE_BOARDS_SUCCESS","UPDATE_BOARDS_ERROR","ADD_BOARDS","ADD_BOARDS_SUCCESS","ADD_BOARDS_ERROR","modal","SHOW_MODAL","HIDE_MODAL","drag","DRAG_UPDATE_SLOT","DRAG_SET_ORIGIN_LISTS","DRAG_END","initialDragNDropState","store","createStore","composeWithDevTools","applyMiddleware","thunk","asyncDispatch","dispatch","notification","insert","container","animationIn","animationOut","dismiss","duration","onScreen","showErrorNotification","addNotification","getBoard","boardId","a","get","config","editBoardTitle","storeDispatch","addCard","boardID","reloadBoard","post","ADD_CARD","undefined","deleteCard","cardID","delete","DELETE_BOARD_CARD","editCard","put","EDIT_BOARD_CARD","editGroupCards","EDIT_BOARD_CARD_GROUP","useTypedSelector","useSelector","setSlot","setSlotLocation","copyBoard","JSON","parse","stringify","getState","target","id","source","cards","position","sourceList","targetList","newCard","targetCards","initialPosition","Object","keys","forEach","sourceCards","Card","props","parentList","useState","hover","setHover","useDispatch","useParams","useLocation","pathname","routeState","listID","toggleHover","prevHover","className","style","onMouseEnter","onMouseLeave","draggable","onDragStart","e","setOriginLists","currentTarget","classList","add","dragStart","onDragEnd","remove","onDragOver","preventDefault","rect","getBoundingClientRect","offset","clientY","top","height","dragOver","onDragLeave","onDrop","entity","oldLists","currentList","cardSet","listKey","cardKey","oldList","newList","list_id","length","dropCard","join","to","RegExp","test","buttonRemove","hide","onClick","icon","pattern","text","email","Composer","buttonTitle","placeholder","setHide","input","setInput","toggleHide","handlerAdd","wrapper","composer","textArea","ref","field","focus","value","onKeyPress","event","key","onChange","validator","control","buttonAdd","buttonCancel","Editor","isHide","setText","handleToggleHide","modifierEditArea","autoFocus","onFocus","select","onBlur","trim","blur","modifierTitle","List","header","EDIT_BOARD_LIST","editList","buttonRemoveList","DELETE_BOARD_LIST","deleteList","sort","b","map","toString","buttonAddCard","titleText","totalCards","Board","getBoardID","handlerFocusIn","handlerFocusOut","asyncSetTitle","setBoardTitle","handlerChangeTitle","handlerClickEnter","handlerDeleteBoard","dispatchDeleteBoard","deleteBoard","handlerAddList","totalLists","asyncAddList","addList","asyncGetBoard","this","loaderWrap","color","width","inputStyle","fontSize","boardCanvas","buttonAddList","makeLists","Component","mapDispatchToProps","newTitle","UPDATE_BOARD_TITLE","DELETE_BOARD","ADD_LIST","withRouter","connect","ownProps","match","params","Modal","setActive","children","onClose","content","stopPropagation","defaultProps","ErrorFormMessage","setModalActive","getBoards","onAddBoard","titleName","injectStyles","inputText","buttonCreate","Home","onClickAddBoard","asyncGetBoards","borders","button","makeBoards","CreateBoard","EditField","placeHolder","setValue","onKeyDown","optionBoards","optionCards","isSameList","values","index","concat","indexPos","Date","now","lastOne","getFirstListAndCardValues","currentListID","cardPos","FormRelocate","formTitle","closeRelocate","closeModal","editTitle","useForm","mode","register","handleSubmit","getValues","setError","formState","errors","isValid","setBoards","currentBoard","setCurrentBoard","setCurrentListID","useRef","loadBoards","dataBoards","loadBoard","dataBoard","useEffect","checkIfClickedOutside","current","contains","document","addEventListener","removeEventListener","onSubmit","replace","group","fromList","toList","find","c","createGroup","handleChangeBoard","required","minRows","defaultValue","htmlFor","contentWrapper","disabled","submit","useHistory","stateLocation","setModal","relocate","setRelocate","copy","setCopy","originList","foundList","getListByCardID","boardState","originCard","historyBack","headerIcon","titleCard","titleList","main","mainIcon","description","side","sideTitle","prevCopy","prevRelocate","Registration","delayError","watch","newUser","password","authData","currentPassword","form","contentBlock","REQUIRE","INCORRECT_EMAIL","scoreWordStyle","display","minLength","confirmPassword","validate","PASSWORD_MISMATCH","submitButton","loginWrapper","linkTitle","link","clearErrors","then","catch","INVALID_DATA","wrapperLogOut","marginTop","justifyContent","ProtectedRoute","redirectPath","isAuthenticated","component","render","Route","App","authorized","unauthorized","path","exact","EditCard","ReactDOM","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.e1f44c99.chunk.js","sourcesContent":["export default {\n  baseURL: process.env.REACT_APP_API_URL || '',\n  boards: '/board',\n  list: '/list',\n  card: '/card',\n  user: '/user',\n  login: '/login',\n};\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();\n","import axios from 'axios';\nimport { api } from '../common/constants';\nimport history from '../common/history/history';\n\nexport const getToken = (): string | null => localStorage.getItem('token');\nexport const setToken = (token: string): void => localStorage.setItem('token', token);\nexport const deleteToken = (): void => localStorage.removeItem('token');\n\nconst instance = axios.create({\n  baseURL: api.baseURL,\n});\n\nexport const admission = axios.create({\n  baseURL: api.baseURL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\ninstance.interceptors.request.use((requestConfig) => {\n  // eslint-disable-next-line no-param-reassign\n  requestConfig.headers.Authorization = `Bearer ${getToken()}`;\n  if (!getToken()) {\n    history.push('/login');\n  }\n  return requestConfig;\n});\n\ninstance.interceptors.response.use(\n  (res) => {\n    return res.data;\n  },\n  (error) => {\n    if (error.response.data.error.message === 'invalid token') {\n      deleteToken();\n      history.push('/login');\n    }\n  }\n);\nadmission.interceptors.response.use((res) => res.data);\n\nexport default instance;\n","import { IBoardFull } from '../../common/interfaces/IBoardFull';\n\nexport interface BoardState {\n  board: IBoardFull;\n  isLoading: boolean;\n  boardTitle: string;\n}\n\nexport const initialBoardState: BoardState = {\n  board: { title: '', users: [], lists: {} },\n  isLoading: false,\n  boardTitle: '',\n};\n\nexport enum BoardActionTypes {\n  UPDATE_BOARD = 'UPDATE_BOARD',\n  UPDATE_BOARD_SUCCESS = 'UPDATE_BOARD_SUCCESS',\n  UPDATE_BOARD_ERROR = 'UPDATE_BOARD_ERROR',\n\n  EDIT_BOARD = 'EDIT_BOARD',\n  DELETE_BOARD = 'DELETE_BOARD',\n  UPDATE_BOARD_TITLE = 'UPDATE_BOARD_TITLE',\n  INPUT_CHANGE = 'INPUT_CHANGE',\n  ADD_LIST = 'ADD_LIST',\n  DELETE_BOARD_LIST = 'DELETE_BOARD_LIST',\n  EDIT_BOARD_LIST = 'EDIT_BOARD_LIST',\n  ADD_CARD = 'ADD_CARD',\n  DELETE_BOARD_CARD = 'DELETE_BOARD_CARD',\n  EDIT_BOARD_CARD = 'EDIT_BOARD_CARD',\n  EDIT_BOARD_CARD_GROUP = 'EDIT_BOARD_CARD_GROUP',\n}\n\ninterface ActionUpdateBoard {\n  type: BoardActionTypes.UPDATE_BOARD;\n}\n\ninterface ActionUpdateBoardSuccess {\n  type: BoardActionTypes.UPDATE_BOARD_SUCCESS;\n  payload: IBoardFull;\n}\n\ninterface ActionUpdateBoardError {\n  type: BoardActionTypes.UPDATE_BOARD_ERROR;\n}\n\ninterface ActionEditBoard {\n  type: BoardActionTypes.EDIT_BOARD;\n  payload: IBoardFull;\n}\n\ninterface ActionDeleteBoard {\n  type: BoardActionTypes.DELETE_BOARD;\n}\n\ninterface ActionInputChange {\n  type: BoardActionTypes.INPUT_CHANGE;\n  payload: string;\n}\n\ninterface ActionUpdateBoardTitle {\n  type: BoardActionTypes.UPDATE_BOARD_TITLE;\n}\n\ninterface ActionAddList {\n  type: BoardActionTypes.ADD_LIST;\n}\n\ninterface ActionDeleteList {\n  type: BoardActionTypes.DELETE_BOARD_LIST;\n}\n\ninterface ActionAddCard {\n  type: BoardActionTypes.ADD_CARD;\n}\n\ninterface ActionDeleteCard {\n  type: BoardActionTypes.DELETE_BOARD_CARD;\n}\n\ninterface ActionEditList {\n  type: BoardActionTypes.EDIT_BOARD_LIST;\n}\n\ninterface ActionEditCard {\n  type: BoardActionTypes.EDIT_BOARD_CARD;\n}\n\ninterface ActionEditCardGroup {\n  type: BoardActionTypes.EDIT_BOARD_CARD_GROUP;\n}\n\nexport type BoardAction =\n  | ActionUpdateBoard\n  | ActionUpdateBoardSuccess\n  | ActionUpdateBoardError\n  | ActionEditBoard\n  | ActionInputChange\n  | ActionDeleteBoard\n  | ActionUpdateBoardTitle\n  | ActionAddList\n  | ActionDeleteList\n  | ActionEditList\n  | ActionAddCard\n  | ActionDeleteCard\n  | ActionEditCard\n  | ActionEditCardGroup;\n","import { IBoard } from '../../common/interfaces/IBoard';\n\nexport interface BoardsState {\n  boards: [] | IBoard[];\n  isLoading: boolean;\n  error: null | string;\n}\n\nexport enum BoardsActionTypes {\n  UPDATE_BOARDS = 'UPDATE_BOARDS',\n  UPDATE_BOARDS_SUCCESS = 'UPDATE_BOARDS_SUCCESS',\n  UPDATE_BOARDS_ERROR = 'UPDATE_BOARDS_ERROR',\n  ADD_BOARDS = 'ADD_BOARDS',\n  ADD_BOARDS_SUCCESS = 'ADD_BOARDS_SUCCESS',\n  ADD_BOARDS_ERROR = 'ADD_BOARDS_ERROR',\n}\n\ninterface ActionUpdateBoards {\n  type: BoardsActionTypes.UPDATE_BOARDS;\n}\n\ninterface ActionUpdateBoardsSuccess {\n  type: BoardsActionTypes.UPDATE_BOARDS_SUCCESS;\n  payload: IBoard[];\n}\n\ninterface ActionUpdateBoardsError {\n  type: BoardsActionTypes.UPDATE_BOARDS_ERROR;\n  payload: string;\n}\n\ninterface ActionAddBoards {\n  type: BoardsActionTypes.ADD_BOARDS;\n}\n\ninterface ActionAddBoardsSuccess {\n  type: BoardsActionTypes.ADD_BOARDS_SUCCESS;\n}\n\ninterface ActionAddBoardsError {\n  type: BoardsActionTypes.ADD_BOARDS_ERROR;\n  payload: string;\n}\n\nexport type BoardsAction =\n  | ActionUpdateBoards\n  | ActionUpdateBoardsSuccess\n  | ActionUpdateBoardsError\n  | ActionAddBoards\n  | ActionAddBoardsSuccess\n  | ActionAddBoardsError;\n","import { BoardsState, BoardsAction, BoardsActionTypes } from '../../types/boards';\n\nconst initialState: BoardsState = {\n  boards: [],\n  isLoading: false,\n  error: null,\n};\n\nexport default function reducer(state = initialState, action: BoardsAction): BoardsState {\n  switch (action.type) {\n    case BoardsActionTypes.UPDATE_BOARDS:\n      return { isLoading: true, error: null, boards: [] };\n    case BoardsActionTypes.UPDATE_BOARDS_SUCCESS:\n      return { isLoading: false, error: null, boards: action.payload };\n    case BoardsActionTypes.UPDATE_BOARDS_ERROR:\n      return { isLoading: false, error: action.payload, boards: [] };\n    case BoardsActionTypes.ADD_BOARDS:\n      return { ...state, isLoading: true };\n    case BoardsActionTypes.ADD_BOARDS_SUCCESS:\n      return { ...state, isLoading: false };\n    case BoardsActionTypes.ADD_BOARDS_ERROR:\n      return { ...state, isLoading: false };\n    default:\n      return state;\n  }\n}\n","export interface UserState {\n  user: [];\n}\n\nconst initialState: UserState = {\n  user: [],\n};\n\nexport default function reducer(state = initialState, action: { type: string }): UserState {\n  switch (action.type) {\n    default: {\n      return { ...state };\n    }\n  }\n}\n","export interface ModalState {\n  active: boolean;\n}\n\nexport enum ModalActionTypes {\n  SHOW_MODAL = 'SHOW_MODAL',\n  HIDE_MODAL = 'HIDE_MODAL',\n}\n\ninterface ActionStart {\n  type: ModalActionTypes.SHOW_MODAL;\n}\n\ninterface ActionStop {\n  type: ModalActionTypes.HIDE_MODAL;\n}\n\nexport type ModalAction = ActionStart | ActionStop;\n","import { ModalAction, ModalActionTypes, ModalState } from '../../types/modal';\n\nconst initialState: ModalState = {\n  active: false,\n};\n\nexport default function reducer(state = initialState, action: ModalAction): ModalState {\n  switch (action.type) {\n    case ModalActionTypes.SHOW_MODAL:\n      return { active: true };\n    case ModalActionTypes.HIDE_MODAL:\n      return { active: false };\n    default:\n      return state;\n  }\n}\n","import { ICard } from '../../common/interfaces/ICard';\nimport { IList } from '../../common/interfaces/IList';\nimport { ILists } from '../../common/interfaces/ILists';\n\nexport interface DragNDropState {\n  slot: Entity | null;\n  originLists: ILists | null;\n}\n\nexport interface EntityDefault {\n  list: IList;\n  card: ICard | null;\n}\n\nexport interface Entity extends EntityDefault {\n  card: NonNullable<EntityDefault['card']>;\n}\n\nexport interface Entities {\n  source: Entity;\n  target: EntityDefault;\n}\n\nexport const initialState: DragNDropState = { slot: null, originLists: null };\n\nexport enum DragNDropActionTypes {\n  DRAG_UPDATE_SLOT = 'DRAG_UPDATE_SLOT',\n  DRAG_SET_ORIGIN_LISTS = 'DRAG_SET_ORIGIN_LISTS',\n  DRAG_END = 'DRAG_END',\n}\n\ninterface ActionDragUpdateSlot {\n  type: DragNDropActionTypes.DRAG_UPDATE_SLOT;\n  payload: Entity | null;\n}\n\ninterface ActionDragSetOriginLists {\n  type: DragNDropActionTypes.DRAG_SET_ORIGIN_LISTS;\n  payload: ILists;\n}\n\ninterface ActionDragEnd {\n  type: DragNDropActionTypes.DRAG_END;\n}\n\nexport type DragNDropAction = ActionDragUpdateSlot | ActionDragSetOriginLists | ActionDragEnd;\n","import { combineReducers } from 'redux';\nimport boardReducer from './modules/board/reducer';\nimport boardsReducer from './modules/boards/reducer';\nimport userReducer from './modules/user/reducer';\nimport modalReducer from './modules/modal/reducer';\nimport dragNdropReducer from './modules/dragndrop/reducer';\n\nexport const rootReducer = combineReducers({\n  board: boardReducer,\n  boards: boardsReducer,\n  user: userReducer,\n  modal: modalReducer,\n  drag: dragNdropReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { BoardAction, BoardActionTypes, BoardState, initialBoardState } from '../../types/board';\n\nexport default function reducer(state = initialBoardState, action: BoardAction): BoardState {\n  switch (action.type) {\n    case BoardActionTypes.UPDATE_BOARD:\n      return { ...state, isLoading: true };\n    case BoardActionTypes.UPDATE_BOARD_SUCCESS:\n      return { ...state, isLoading: false, board: action.payload, boardTitle: action.payload.title };\n    case BoardActionTypes.UPDATE_BOARD_ERROR:\n      return { ...state, isLoading: false };\n    case BoardActionTypes.INPUT_CHANGE:\n      return { ...state, boardTitle: action.payload };\n    case BoardActionTypes.EDIT_BOARD:\n      return { ...state, board: action.payload };\n    default: {\n      return state;\n    }\n  }\n}\n","import { DragNDropAction, DragNDropActionTypes, DragNDropState, initialState } from '../../types/drag';\n\nexport default function reducer(state = initialState, action: DragNDropAction): DragNDropState {\n  switch (action.type) {\n    case DragNDropActionTypes.DRAG_UPDATE_SLOT:\n      return { ...state, slot: action.payload };\n    case DragNDropActionTypes.DRAG_SET_ORIGIN_LISTS:\n      return { ...state, originLists: action.payload };\n    case DragNDropActionTypes.DRAG_END:\n      return { ...state, slot: null, originLists: null };\n    default:\n      return state;\n  }\n}\n","import { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from './rootReducer';\nimport { UserState } from './modules/user/reducer';\nimport { ModalState } from './types/modal';\nimport { BoardState, initialBoardState } from './types/board';\nimport { BoardsState } from './types/boards';\nimport { DragNDropState, initialState as initialDragNDropState } from './types/drag';\n\nexport interface AppState {\n  board: BoardState;\n  boards: BoardsState;\n  user: UserState;\n  modal: ModalState;\n  drag: DragNDropState;\n}\n\nconst initialState: AppState = {\n  board: initialBoardState,\n  boards: { boards: [], isLoading: false, error: null },\n  user: { user: [] },\n  modal: { active: false },\n  drag: initialDragNDropState,\n};\n\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(thunk)));\n\nexport const asyncDispatch = store.dispatch;\nexport default store;\n","import { store, ReactNotificationOptions } from 'react-notifications-component';\n\nconst notification: ReactNotificationOptions = {\n  title: 'Error',\n  message: 'message',\n  type: 'danger',\n  insert: 'top',\n  container: 'bottom-left',\n  animationIn: ['animate__animated', 'animate__fadeIn'],\n  animationOut: ['animate__animated', 'animate__fadeOut'],\n  dismiss: {\n    duration: 5000,\n    onScreen: true,\n  },\n};\n\nexport const showErrorNotification = (message: string): void => {\n  store.addNotification({ ...notification, message });\n};\n","import { Dispatch } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\nimport api from '../../../api/request';\nimport config from '../../../common/constants/api';\nimport { BoardAction, BoardActionTypes } from '../../types/board';\nimport { AppState, asyncDispatch as storeDispatch } from '../../store';\nimport history from '../../../common/history/history';\nimport { showErrorNotification } from '../../../common/notifications/notifications';\nimport { IDataList } from '../../../common/interfaces/IDataList';\nimport { IDataCard } from '../../../common/interfaces/IDataCard';\nimport { IDataCardGroup } from '../../../common/interfaces/IDataCardGroup';\n\ntype ThunkType = ThunkAction<Promise<void>, AppState, unknown, BoardAction>;\n\nexport const getBoard = (boardId: string) => async (dispatch: Dispatch): Promise<void> => {\n  try {\n    dispatch({ type: BoardActionTypes.UPDATE_BOARD });\n    const board = await api.get(`${config.boards}/${boardId}`);\n    dispatch({ type: BoardActionTypes.UPDATE_BOARD_SUCCESS, payload: board });\n  } catch (e) {\n    showErrorNotification('Failed to get board data');\n  }\n};\n\nexport const setBoardTitle = (boardID: string, newTitle: string): ThunkType => async (dispatch): Promise<void> => {\n  try {\n    await api.put(`${config.boards}/${boardID}`, { title: newTitle });\n    dispatch({ type: BoardActionTypes.UPDATE_BOARD_TITLE });\n  } catch (e) {\n    showErrorNotification('Failed to change the board title');\n  }\n};\n\nexport const editBoardTitle = (title: string): void => {\n  storeDispatch({ type: BoardActionTypes.INPUT_CHANGE, payload: title });\n};\n\nexport const deleteBoard = (boardID: string) => async (dispatch: Dispatch<BoardAction>): Promise<void> => {\n  try {\n    await api.delete(`${config.boards}/${boardID}`);\n    dispatch({ type: BoardActionTypes.DELETE_BOARD });\n    history.push('/');\n  } catch (e) {\n    showErrorNotification('Failed to delete current board');\n  }\n};\n\nexport const addList = (boardID: string, data: IDataList): ThunkType => async (dispatch): Promise<void> => {\n  try {\n    await api.post(`${config.boards}/${boardID + config.list}`, data);\n    dispatch({ type: BoardActionTypes.ADD_LIST });\n    await dispatch(getBoard(boardID));\n  } catch (e) {\n    showErrorNotification('Failed to add list on current board');\n  }\n};\n\nexport const deleteList = (boardID: string, listID: number): ThunkType => async (dispatch): Promise<void> => {\n  try {\n    await api.delete(`${config.boards}/${boardID + config.list}/${listID}`);\n    dispatch({ type: BoardActionTypes.DELETE_BOARD_LIST });\n    await dispatch(getBoard(boardID));\n  } catch (e) {\n    showErrorNotification('Failed to remove the specified list from the board');\n  }\n};\n\nexport const editList = (boardID: string, listID: number, data: IDataList): ThunkType => async (\n  dispatch\n): Promise<void> => {\n  try {\n    await api.put(`${config.boards}/${boardID + config.list}/${listID}`, data);\n    dispatch({ type: BoardActionTypes.EDIT_BOARD_LIST });\n    await dispatch(getBoard(boardID));\n  } catch (e) {\n    showErrorNotification('Failed to change the title of current list');\n  }\n};\n\nexport const addCard = (boardID: string, data: IDataCard, reloadBoard?: boolean): ThunkType => async (\n  dispatch\n): Promise<void> => {\n  try {\n    await api.post(`${config.boards}/${boardID + config.card}`, data);\n    dispatch({ type: BoardActionTypes.ADD_CARD });\n    if (reloadBoard || reloadBoard === undefined) await dispatch(getBoard(boardID));\n  } catch (e) {\n    showErrorNotification('Failed to add card on current list');\n  }\n};\n\nexport const deleteCard = (boardID: string, cardID: number): ThunkType => async (dispatch): Promise<void> => {\n  try {\n    await api.delete(`${config.boards}/${boardID + config.card}/${cardID}`);\n    dispatch({ type: BoardActionTypes.DELETE_BOARD_CARD });\n    await dispatch(getBoard(boardID));\n  } catch (e) {\n    showErrorNotification('Failed to delete card on current list');\n  }\n};\n\nexport const editCard = (boardID: string, cardID: number, data: IDataCard, reloadBoard?: boolean): ThunkType => async (\n  dispatch\n): Promise<void> => {\n  try {\n    await api.put(`${config.boards}/${boardID + config.card}/${cardID}`, data);\n    dispatch({ type: BoardActionTypes.EDIT_BOARD_CARD });\n    if (reloadBoard || reloadBoard === undefined) await dispatch(getBoard(boardID));\n  } catch (e) {\n    showErrorNotification('Failed to change field of current card');\n  }\n};\n\nexport const editGroupCards = (boardID: string, data: IDataCardGroup[]): ThunkType => async (\n  dispatch\n): Promise<void> => {\n  try {\n    await api.put(`${config.boards}/${boardID + config.card}`, data);\n    dispatch({ type: BoardActionTypes.EDIT_BOARD_CARD_GROUP });\n    await dispatch(getBoard(boardID));\n  } catch (e) {\n    await dispatch(getBoard(boardID));\n    showErrorNotification('Failed to edit group cards');\n  }\n};\n","import { TypedUseSelectorHook, useSelector } from 'react-redux';\nimport { RootState } from '../store/rootReducer';\n\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { ThunkAction } from 'redux-thunk';\nimport store, { AppState, asyncDispatch as dispatch } from '../../store';\nimport { DragNDropActionTypes, Entities, Entity } from '../../types/drag';\nimport { IBoardFull } from '../../../common/interfaces/IBoardFull';\nimport { BoardAction, BoardActionTypes } from '../../types/board';\nimport { ICard } from '../../../common/interfaces/ICard';\nimport { ILists } from '../../../common/interfaces/ILists';\nimport { IDataCardGroup } from '../../../common/interfaces/IDataCardGroup';\nimport { editGroupCards } from '../board/actions';\n\ntype ThunkType = ThunkAction<Promise<void>, AppState, unknown, BoardAction>;\n\nexport const setSlot = (slot: Entity | null): void => {\n  if (slot) {\n    dispatch({ type: DragNDropActionTypes.DRAG_UPDATE_SLOT, payload: slot });\n  } else {\n    dispatch({ type: DragNDropActionTypes.DRAG_END });\n  }\n};\n\nexport const setOriginLists = (lists: ILists): void => {\n  dispatch({ type: DragNDropActionTypes.DRAG_SET_ORIGIN_LISTS, payload: lists });\n};\n\nexport const dropCard = (boardID: string, entity?: { originLists: ILists; currentList: ILists }): ThunkType => async (\n  asyncDispatch\n): Promise<void> => {\n  let oldLists: ILists;\n  let lists: ILists;\n  oldLists = store.getState().drag.originLists || {};\n  lists = store.getState().board.board.lists;\n  if (entity) {\n    oldLists = entity.originLists;\n    lists = entity.currentList;\n  }\n\n  const cardSet: IDataCardGroup[] = [];\n  Object.keys(lists).forEach((listKey) => {\n    Object.keys(lists[listKey].cards).forEach((cardKey) => {\n      const oldList = oldLists[listKey];\n      const newList = lists[listKey];\n      if (oldList.cards[cardKey] && oldList.cards[cardKey].position !== newList.cards[cardKey].position) {\n        cardSet.push({\n          id: lists[listKey].cards[cardKey].id,\n          list_id: +listKey,\n          position: lists[listKey].cards[cardKey].position,\n        });\n      } else if (!oldList.cards[cardKey]) {\n        cardSet.push({\n          id: lists[listKey].cards[cardKey].id,\n          list_id: +listKey,\n          position: lists[listKey].cards[cardKey].position,\n        });\n      }\n    });\n  });\n  if (cardSet.length) {\n    await asyncDispatch(editGroupCards(boardID, cardSet));\n  }\n};\n\nexport const setSlotLocation = (drag: Entities): void => {\n  const copyBoard: IBoardFull = JSON.parse(JSON.stringify(store.getState().board.board));\n  const { lists } = copyBoard;\n  // list has a cards\n  if (drag.target.card) {\n    if (drag.target.list.id === drag.source.list.id) {\n      const list = lists[drag.source.list.id];\n      list.cards[drag.source.card.id].position = drag.target.card.position;\n      list.cards[drag.target.card.id].position = drag.source.card.position;\n      setSlot({ card: list.cards[drag.source.card.id], list });\n    } else {\n      // new card with new position.\n      const sourceList = lists[drag.source.list.id];\n      const targetList = lists[drag.target.list.id];\n      const newCard: ICard = {\n        ...drag.source.card,\n        users: [...drag.source.card.users],\n        position: drag.target.card.position,\n      };\n      // insert card to new list.\n      const { cards: targetCards } = targetList;\n      let initialPosition = newCard.position;\n      Object.keys(targetCards).forEach((id) => {\n        const card = targetCards[id];\n        if (card.position >= newCard.position) {\n          card.position = ++initialPosition;\n        }\n      });\n      targetCards[drag.source.card.id] = newCard;\n      // remove card from old list\n      const { cards: sourceCards } = sourceList;\n      Object.keys(sourceCards).forEach((id) => {\n        const card = sourceCards[id];\n        if (card.position > sourceCards[drag.source.card.id].position) {\n          --card.position;\n        }\n      });\n      delete sourceCards[drag.source.card.id];\n      setSlot({ card: targetList.cards[newCard.id], list: targetList });\n    }\n    // list has not a cards\n  } else {\n    const newCard: ICard = {\n      ...drag.source.card,\n      users: [...drag.source.card.users],\n      position: 0,\n    };\n    const { cards } = lists[drag.target.list.id];\n    cards[drag.source.card.id] = newCard; // add card in list cards.\n    delete lists[drag.source.list.id].cards[drag.source.card.id];\n    setSlot({ card: newCard, list: lists[drag.target.list.id] });\n  }\n  dispatch({ type: BoardActionTypes.EDIT_BOARD, payload: copyBoard });\n};\n","import React, { DragEvent, FC, useState } from 'react';\nimport { Link, Redirect, useLocation, useParams } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { useTypedSelector } from '../../../../hooks/useTypedSelector';\nimport { ICard } from '../../../../common/interfaces/ICard';\nimport { deleteCard } from '../../../../store/modules/board/actions';\nimport { IList } from '../../../../common/interfaces/IList';\nimport { dropCard, setOriginLists, setSlot, setSlotLocation } from '../../../../store/modules/dragndrop/actions';\nimport style from './card.module.scss';\n\ntype PropsParent = {\n  parentList: IList;\n};\n\nconst Card: FC<ICard & PropsParent> = (props) => {\n  const { id, position, parentList, title } = props;\n  const [hover, setHover] = useState(false);\n  const dispatch = useDispatch();\n  const { slot } = useTypedSelector((state) => state.drag);\n  const { lists } = useTypedSelector((state) => state.board.board);\n  const { id: boardID } = useParams<{ id: string }>();\n  const { pathname, state } = useLocation<{ modal: boolean }>();\n  const hasCard = (): boolean => {\n    return new RegExp(`/card/${id}`).test(pathname) && !state;\n  };\n\n  const routeState = {\n    cardID: id,\n    listID: parentList.id,\n  };\n\n  const handleClickDelete = (): void => {\n    dispatch(deleteCard(boardID, id));\n  };\n\n  const toggleHover = (): void => {\n    setHover((prevHover) => !prevHover);\n  };\n\n  const dragStartHandler = (e: DragEvent<HTMLDivElement>): void => {\n    setSlot({ card: props, list: parentList });\n    setOriginLists(lists);\n    e.currentTarget.classList.add(style.dragStart);\n  };\n\n  const dragEndHandler = (e: DragEvent<HTMLDivElement>): void => {\n    setSlot(null);\n    e.currentTarget.classList.remove(style.dragStart);\n  };\n\n  const dragOverHandler = (e: DragEvent<HTMLDivElement>): void => {\n    e.preventDefault();\n    const rect = e.currentTarget.getBoundingClientRect();\n    const offset = e.clientY - rect.top - rect.height / 2;\n    if (slot?.card && id !== slot.card.id) {\n      if (slot.list.id === parentList.id) {\n        if ((slot.card.position > position && offset < 0) || (slot.card.position < position && offset > 0)) {\n          setSlotLocation({ source: slot, target: { list: parentList, card: props } });\n        }\n      } else {\n        setSlotLocation({ source: slot, target: { list: parentList, card: props } });\n      }\n      e.currentTarget.classList.add(style.dragOver);\n    }\n  };\n\n  const dragLeaveHandler = (e: DragEvent<HTMLDivElement>): void => {\n    e.currentTarget.classList.remove(style.dragOver);\n  };\n\n  const dropHandler = (e: DragEvent<HTMLDivElement>): void => {\n    e.preventDefault();\n    e.currentTarget.classList.remove(style.dragOver);\n    dispatch(dropCard(boardID));\n    setSlot(null);\n  };\n\n  return (\n    <div\n      className={style.container}\n      onMouseEnter={toggleHover}\n      onMouseLeave={toggleHover}\n      draggable\n      onDragStart={dragStartHandler}\n      onDragEnd={dragEndHandler}\n      onDragOver={dragOverHandler}\n      onDragLeave={dragLeaveHandler}\n      onDrop={dropHandler}\n    >\n      <li className={slot?.card?.id === id ? [style.card, style.dragStart].join(' ') : style.card}>\n        <Link to={{ pathname: `${pathname}/card/${id}`, state: { ...routeState } }}>\n          <div className={style.title}>{title}</div>\n        </Link>\n        {hasCard() ? <Redirect to={{ pathname: `${pathname}`, state: { ...routeState } }} /> : null}\n      </li>\n\n      <button\n        className={!hover || slot?.card ? [style.buttonRemove, style.hide].join(' ') : style.buttonRemove}\n        onClick={handleClickDelete}\n      >\n        <span className={`material-icons-round ${style.icon}`}>delete_forever</span>\n      </button>\n    </div>\n  );\n};\n\nexport default Card;\n","export default (pattern: RegExp, text: string): boolean => pattern.test(text);\nexport const pattern = /^((\\w|[А-ЯЁа-яё])+[\\s.-]?)+$|^$/;\nexport const email = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\\\\\".+\\\\\"))@(([^<>()[\\]\\\\.,;:\\s@\"]+\\.)+[^<>()[\\]\\\\.,;:\\s@\"]{2,})$/i;\n","import React, { ChangeEvent, FC, KeyboardEvent, useState } from 'react';\nimport validator, { pattern } from '../../common/validator/validator';\nimport style from './composer.module.scss';\n\ninterface Props {\n  className: string | undefined;\n  buttonTitle: string;\n  placeholder?: string;\n  action: (title: string) => void;\n}\n\nconst Composer: FC<Props> = ({ className, buttonTitle, placeholder = '', action }) => {\n  const [hide, setHide] = useState(false);\n  const [input, setInput] = useState('');\n\n  const toggleHide = (): void => {\n    setHide(!hide);\n    setInput('');\n  };\n\n  const handlerAdd = (): void => {\n    action(input);\n    toggleHide();\n  };\n\n  const handleChangeText = (event: ChangeEvent<HTMLTextAreaElement>): void => {\n    if (validator(pattern, event.target.value)) {\n      setInput(event.target.value);\n    }\n  };\n\n  const onKeyPressEnter = (event: KeyboardEvent<HTMLTextAreaElement>): void => {\n    if (event.key === 'Enter' && input) {\n      handlerAdd();\n    }\n  };\n\n  return (\n    <div className={style.wrapper}>\n      <button className={hide ? [className, style.hide].join(' ') : className} onClick={toggleHide}>\n        + {buttonTitle}\n      </button>\n      <div className={hide ? style.composer : [style.composer, style.hide].join(' ')}>\n        <textarea\n          className={style.textArea}\n          ref={(field): null | void => field && field.focus()}\n          placeholder={placeholder}\n          value={input}\n          onKeyPress={onKeyPressEnter}\n          onChange={handleChangeText}\n        />\n        <div className={style.control}>\n          <button className={style.buttonAdd} onClick={handlerAdd}>\n            Добавить\n          </button>\n          <button className={style.buttonCancel} onClick={toggleHide}>\n            Отмена\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Composer;\n","import React, { ChangeEvent, FC, FocusEvent, KeyboardEvent, useState } from 'react';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport validator, { pattern } from '../../common/validator/validator';\nimport style from './editor.module.scss';\n\ninterface Props {\n  title: string;\n  placeHolder?: string;\n  action: (text: string) => void;\n  className: string | undefined;\n}\n\nconst Editor: FC<Props> = ({ className, title, action }) => {\n  const [isHide, setHide] = useState(false);\n  const [text, setText] = useState(title);\n\n  const handleToggleHide = (): void => {\n    setHide(!isHide);\n  };\n\n  const handleEditText = (event: ChangeEvent<HTMLTextAreaElement>): void => {\n    if (validator(pattern, event.target.value)) {\n      setText(event.target.value);\n    }\n  };\n\n  const handleFocusOut = (event: FocusEvent<HTMLTextAreaElement>): void => {\n    if (event.target.value && event.target.value !== title) {\n      setText(event.target.value.trim());\n      action(event.target.value);\n    } else {\n      setText(title);\n    }\n    handleToggleHide();\n  };\n\n  const handleClickEnter = (event: KeyboardEvent<HTMLTextAreaElement>): void => {\n    if (event.key === 'Enter') {\n      event.currentTarget.blur();\n    }\n  };\n\n  if (!isHide) {\n    return (\n      <p\n        className={\n          isHide ? [className, style.modifierTitle, style.hide].join(' ') : [className, style.modifierTitle].join(' ')\n        }\n        onClick={handleToggleHide}\n      >\n        {text}\n      </p>\n    );\n  }\n\n  return (\n    <TextareaAutosize\n      className={[className, style.modifierEditArea].join(' ')}\n      autoFocus\n      onFocus={(event): void => {\n        event.target.select();\n      }}\n      onBlur={handleFocusOut}\n      onKeyPress={handleClickEnter}\n      onChange={handleEditText}\n      value={text}\n    />\n  );\n};\n\nexport default Editor;\n","import React, { ReactElement } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { IList } from '../../../../common/interfaces/IList';\nimport { addCard, deleteList, editList } from '../../../../store/modules/board/actions';\nimport Card from '../Card/Card';\nimport Composer from '../../../../components/Composer/Composer';\nimport Editor from '../../../../components/Editor/Editor';\nimport { setSlotLocation } from '../../../../store/modules/dragndrop/actions';\nimport { useTypedSelector } from '../../../../hooks/useTypedSelector';\nimport style from './list.module.scss';\n\nexport default function List(props: IList): ReactElement {\n  const { title, cards, id, position } = props;\n  const dispatch = useDispatch();\n  const { id: boardID } = useParams<{ id: string }>();\n  const { slot } = useTypedSelector((state) => state.drag);\n\n  const handleClickDeleteList = (): void => {\n    dispatch(deleteList(boardID, id));\n  };\n\n  const makeCard = (): ReactElement[] => {\n    return Object.keys(cards)\n      .sort((a, b) => cards[a].position - cards[b].position)\n      .map((value) => {\n        const card = cards[value];\n        return <Card key={card.id.toString()} {...card} parentList={props} />;\n      });\n  };\n\n  const handlerDragOver = (): void => {\n    if (!Object.keys(cards).length && slot) {\n      setSlotLocation({ source: slot, target: { list: props, card: null } });\n    }\n  };\n\n  const editTitleHandler = (text: string): void => {\n    dispatch(editList(boardID, id, { position, title: text }));\n  };\n\n  const addCardHandler = (titleText: string): void => {\n    const totalCards = cards ? Object.keys(cards).length : 0;\n    dispatch(addCard(boardID, { title: titleText, list_id: id, position: totalCards }));\n  };\n\n  return (\n    <div onDragOver={handlerDragOver} className={style.list}>\n      <div className={style.header}>\n        <Editor className={style.title} title={title} action={editTitleHandler} />\n        <button className={style.buttonRemoveList} onClick={handleClickDeleteList}>\n          <span className={`material-icons ${style.icon}`}>delete_forever</span>\n        </button>\n      </div>\n      <ul className={style.cards}>{makeCard()}</ul>\n      <Composer\n        className={style.buttonAddCard}\n        placeholder=\"Ввести заголовок для этой карточки\"\n        buttonTitle=\"Добавить карточку\"\n        action={addCardHandler}\n      />\n    </div>\n  );\n}\n","import React, { ChangeEvent, Component, FocusEvent, KeyboardEvent, ReactElement } from 'react';\nimport AutosizeInput from 'react-input-autosize';\nimport { Link, RouteComponentProps, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Loader from 'react-loader-spinner';\nimport { addList, deleteBoard, editBoardTitle, getBoard, setBoardTitle } from '../../store/modules/board/actions';\nimport List from './components/List/List';\nimport Composer from '../../components/Composer/Composer';\nimport validator, { pattern } from '../../common/validator/validator';\nimport { AppState } from '../../store/store';\nimport { IBoardFull } from '../../common/interfaces/IBoardFull';\nimport { IDataList } from '../../common/interfaces/IDataList';\nimport style from './board.module.scss';\n\ninterface StateProps {\n  board: IBoardFull;\n  boardTitle: string;\n  isLoading: boolean;\n  id: string;\n}\n\ninterface DispatchProps {\n  getBoard: (id: string) => void;\n  setBoardTitle: (id: string, newTitle: string) => void;\n  editBoardTitle: (newTitle: string) => void;\n  deleteBoard: (id: string) => void;\n  addList: (id: string, data: IDataList) => void;\n}\n\ntype RouteProps = RouteComponentProps<{ id: string }>;\n\ntype PropsType = StateProps & DispatchProps & RouteProps;\n\nclass Board extends Component<PropsType> {\n  componentDidMount(): void {\n    const { getBoard: asyncGetBoard } = this.props;\n    asyncGetBoard(this.getBoardID());\n  }\n\n  getBoardID = (): string => {\n    const { id } = this.props;\n    return id;\n  };\n\n  handlerFocusIn = (event: FocusEvent<HTMLInputElement>): void => {\n    event.target.select();\n  };\n\n  handlerFocusOut = (event: FocusEvent<HTMLInputElement>): void => {\n    const title = event.target.value.trim();\n    const { board } = this.props;\n    if (title && title !== board.title) {\n      const { setBoardTitle: asyncSetTitle } = this.props;\n      asyncSetTitle(this.getBoardID(), title);\n    } else {\n      editBoardTitle(board.title);\n    }\n  };\n\n  handlerChangeTitle = (event: ChangeEvent<HTMLInputElement>): void => {\n    if (validator(pattern, event.target.value)) {\n      editBoardTitle(event.target.value);\n    }\n  };\n\n  handlerClickEnter = (event: KeyboardEvent<HTMLInputElement>): void => {\n    if (event.key === 'Enter') {\n      event.currentTarget.blur();\n    }\n  };\n\n  handlerDeleteBoard = (): void => {\n    const { deleteBoard: dispatchDeleteBoard } = this.props;\n    dispatchDeleteBoard(this.getBoardID());\n  };\n\n  handlerAddList = (title: string): void => {\n    const { board } = this.props;\n    const totalLists = Object.keys(board.lists).length;\n    const { addList: asyncAddList } = this.props;\n    asyncAddList(this.getBoardID(), { title, position: totalLists });\n  };\n\n  makeLists(): ReactElement[] {\n    const { board } = this.props;\n    const { lists } = board;\n    return Object.keys(lists).map((value) => {\n      const list = lists[value];\n      return <List key={list.id} {...list} />;\n    });\n  }\n\n  render(): ReactElement {\n    const { isLoading, boardTitle } = this.props;\n    if (isLoading) {\n      return (\n        <div className={style.loaderWrap}>\n          <Loader type=\"Puff\" color=\"#00BFFF\" height={100} width={100} />;\n        </div>\n      );\n    }\n    return (\n      <>\n        <div className={style.header}>\n          <Link to=\"/\">Домой</Link>\n          <AutosizeInput\n            className={style.input}\n            inputStyle={{ fontSize: 18 }}\n            onFocus={this.handlerFocusIn}\n            onBlur={this.handlerFocusOut}\n            onChange={this.handlerChangeTitle}\n            onKeyPress={this.handlerClickEnter}\n            value={boardTitle}\n          />\n          <a onClick={this.handlerDeleteBoard}>Удалить доску</a>\n        </div>\n        <div className={style.boardCanvas}>\n          <div className={style.lists}>\n            <Composer\n              className={style.buttonAddList}\n              placeholder=\"Ввести заголовок списка\"\n              buttonTitle=\"Добавить список\"\n              action={this.handlerAddList}\n            />\n            {this.makeLists()}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state: AppState, ownProps: RouteProps): StateProps => ({\n  board: { ...state.board.board },\n  boardTitle: state.board.boardTitle,\n  isLoading: state.board.isLoading,\n  id: ownProps.match.params.id,\n});\n\nconst mapDispatchToProps: DispatchProps = { getBoard, setBoardTitle, editBoardTitle, deleteBoard, addList };\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Board));\n","import React from 'react';\nimport style from './board.module.scss';\n\nexport default function Board({ title }: { title: string }): React.ReactElement {\n  return <div className={style.board}>{title}</div>;\n}\n","import React, { ReactElement, ReactNode } from 'react';\nimport style from './modal.module.scss';\n\ninterface PropsType {\n  active: boolean;\n  setActive: (value: boolean) => void;\n  children: ReactNode | null;\n  onClose?: () => void;\n}\n\nconst Modal = ({ active, setActive, children, onClose = (): void => {} }: PropsType): ReactElement => {\n  const handlerClose = (): void => {\n    setActive(false);\n    onClose();\n  };\n\n  return (\n    <div className={active ? [style.modal, style.active].join(' ') : style.modal} onClick={handlerClose}>\n      <div\n        className={active ? [style.content, style.active].join(' ') : style.content}\n        onClick={(event): void => {\n          event.stopPropagation();\n        }}\n      >\n        {active ? children : null}\n      </div>\n    </div>\n  );\n};\n\nModal.defaultProps = {\n  onClose: (): void => {},\n};\n\nexport default Modal;\n","import React, { VoidFunctionComponent } from 'react';\nimport { useForm } from 'react-hook-form';\nimport PasswordStrengthBar from 'react-password-strength-bar';\nimport { Link } from 'react-router-dom';\nimport { email } from '../../common/validator/validator';\nimport { admission, setToken } from '../../api/request';\nimport api from '../../common/constants/api';\nimport { IAdmission } from '../../common/interfaces/IAdmission';\nimport history from '../../common/history/history';\nimport style from './registration.module.scss';\n\ninterface FormData {\n  email: string;\n  password: string;\n  confirmPassword: string;\n}\n\nenum ErrorFormMessage {\n  REQUIRE = 'Обязательно для заполнения',\n  INCORRECT_EMAIL = 'Некорректная запись email',\n  PASSWORD_MISMATCH = 'Пароли несовпадают',\n}\n\nexport const Registration: VoidFunctionComponent = () => {\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: { errors },\n  } = useForm<FormData>({ mode: 'all', delayError: 1000 });\n  const onSubmit = handleSubmit(async (data) => {\n    const newUser: IAdmission = { email: data.email, password: data.password };\n    await admission.post(api.user, newUser);\n    const authData = await admission.post<unknown, { token: string }>(api.login, newUser);\n    setToken(authData.token);\n    history.push('/');\n  });\n  const currentPassword = watch('password');\n  return (\n    <div className={style.wrapper}>\n      <form className={style.form} onSubmit={onSubmit}>\n        <p className={style.title}>Регистрация</p>\n        <div className={style.contentBlock}>\n          <label htmlFor=\"email\">Email</label>\n          {errors.email && <p className={style.error}>{errors.email.message}</p>}\n          <input\n            {...register('email', {\n              required: { value: true, message: ErrorFormMessage.REQUIRE },\n              pattern: { value: email, message: ErrorFormMessage.INCORRECT_EMAIL },\n            })}\n            type=\"text\"\n          />\n        </div>\n        <div className={style.contentBlock}>\n          <label htmlFor=\"password\">Пароль</label>\n          {errors.password && <p className={style.error}>{errors.password.message}</p>}\n          <input\n            {...register('password', { required: { value: true, message: ErrorFormMessage.REQUIRE } })}\n            type=\"password\"\n          />\n          <PasswordStrengthBar scoreWordStyle={{ display: 'none' }} password={currentPassword} minLength={4} />\n        </div>\n        <div className={style.contentBlock}>\n          <label htmlFor=\"confirmPassword\">Повторите пароль</label>\n          {errors.confirmPassword && <p className={style.error}>{errors.confirmPassword.message}</p>}\n          <input\n            {...register('confirmPassword', {\n              required: { value: true, message: ErrorFormMessage.REQUIRE },\n              validate: (value) => value === currentPassword || ErrorFormMessage.PASSWORD_MISMATCH,\n            })}\n            type=\"password\"\n          />\n        </div>\n        <input className={style.submitButton} type=\"submit\" value=\"Зарегистрироваться\" />\n        <div className={style.loginWrapper}>\n          <span className={style.linkTitle}>Уже есть аккаунт?</span>\n          <Link className={style.link} to=\"/login\">\n            Войти\n          </Link>\n        </div>\n      </form>\n    </div>\n  );\n};\n","import { asyncDispatch as dispatch } from '../../store';\nimport { ModalActionTypes } from '../../types/modal';\n\nexport const setModalActive = (value: boolean): void => {\n  if (value) {\n    dispatch({ type: ModalActionTypes.SHOW_MODAL });\n  } else {\n    dispatch({ type: ModalActionTypes.HIDE_MODAL });\n  }\n};\n","import { Dispatch } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\nimport api from '../../../api/request';\nimport config from '../../../common/constants/api';\nimport { BoardsAction, BoardsActionTypes } from '../../types/boards';\nimport { setModalActive } from '../modal/actions';\nimport { AppState } from '../../store';\nimport { IBoard } from '../../../common/interfaces/IBoard';\n\ntype ThunkActionType = ThunkAction<Promise<void>, AppState, unknown, BoardsAction>;\n\nexport const getBoards = () => async (dispatch: Dispatch): Promise<void> => {\n  try {\n    dispatch({ type: BoardsActionTypes.UPDATE_BOARDS });\n    const { boards }: { boards: IBoard[] } = await api.get(config.boards);\n    dispatch({ type: BoardsActionTypes.UPDATE_BOARDS_SUCCESS, payload: boards });\n  } catch (e) {\n    dispatch({ type: BoardsActionTypes.UPDATE_BOARDS_ERROR, payload: 'Призошла ошибка при получении списка досок' });\n  }\n};\n\nexport const createBoard = (titleName: string): ThunkActionType => async (dispatch): Promise<void> => {\n  try {\n    dispatch({ type: BoardsActionTypes.ADD_BOARDS });\n    await api.post(config.boards, { title: titleName });\n    dispatch({ type: BoardsActionTypes.ADD_BOARDS_SUCCESS });\n    setModalActive(false);\n    await dispatch(getBoards());\n  } catch (e) {\n    dispatch({ type: BoardsActionTypes.ADD_BOARDS_ERROR, payload: 'Призошла ошибка при добавлении новой доски' });\n  }\n};\n","import React, { ChangeEvent, ReactElement, KeyboardEvent, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport AutosizeInput from 'react-input-autosize';\nimport { createBoard } from '../../../store/modules/boards/actions';\nimport validator, { pattern } from '../../../common/validator/validator';\nimport style from './content.module.scss';\n\nexport default (): ReactElement => {\n  const [text, setText] = useState('');\n  const dispatch = useDispatch();\n\n  const onChangeInput = (event: ChangeEvent<HTMLInputElement>): void => {\n    const inputText = event.target.value;\n    if (validator(pattern, inputText)) {\n      setText(inputText);\n    }\n  };\n\n  const onAddBoard = (): void => {\n    if (text) {\n      dispatch(createBoard(text.trim()));\n    }\n  };\n\n  const handlePressEnter = (event: KeyboardEvent<HTMLInputElement>): void => {\n    if (event.key === 'Enter') {\n      onAddBoard();\n    }\n  };\n\n  return (\n    <div className={style.content}>\n      <h3>Создание новой доски</h3>\n      <AutosizeInput\n        injectStyles\n        className={style.text}\n        autoFocus\n        placeholder=\"Добавить заголовок доски\"\n        type=\"text\"\n        value={text}\n        onKeyPress={handlePressEnter}\n        onChange={onChangeInput}\n      />\n      <button className={style.buttonCreate} onClick={onAddBoard}>\n        Создать доску\n      </button>\n    </div>\n  );\n};\n","import React, { Component, ReactElement } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux'; //\nimport { AppState } from '../../store/store';\nimport { IBoard } from '../../common/interfaces/IBoard';\nimport Board from './components/Board/Board';\nimport Modal from '../../components/Modal/Modal';\nimport CreateBoard from '../../components/Modal/CreateBoard/CreateBoard';\nimport { getBoards } from '../../store/modules/boards/actions';\nimport { setModalActive } from '../../store/modules/modal/actions';\nimport style from './home.module.scss';\n\ntype PropsType = {\n  boards: IBoard[];\n  modal: { active: boolean };\n  getBoards: () => Promise<void>;\n  setModalActive: (value: boolean) => void;\n};\n\ninterface MapState {\n  boards: IBoard[];\n  modal: { active: boolean };\n}\n\nclass Home extends Component<PropsType> {\n  async componentDidMount(): Promise<void> {\n    const { getBoards: asyncGetBoards } = this.props;\n    await asyncGetBoards();\n  }\n\n  onClickAddBoard = (): void => {\n    setModalActive(true);\n  };\n\n  makeBoards(): ReactElement[] {\n    const { boards } = this.props;\n    return boards?.map((board) => (\n      <Link to={`/board/${board.id}`} key={board.id}>\n        <Board title={board.title} />\n      </Link>\n    ));\n  }\n\n  render(): ReactElement {\n    const { modal } = this.props;\n    return (\n      <div className={style.wrapper}>\n        <h2 className={style.title}>Мои Доски</h2>\n        <div className={style.borders}>\n          <button className={style.button} onClick={this.onClickAddBoard}>\n            + Cоздать доску\n          </button>\n          {this.makeBoards()}\n          <Modal active={modal.active} setActive={setModalActive}>\n            <CreateBoard />\n          </Modal>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: AppState): MapState => {\n  const { boards } = { ...state.boards };\n  return {\n    boards,\n    modal: state.modal,\n  };\n};\n\nexport default connect(mapStateToProps, { getBoards, setModalActive })(Home);\n","import React, { ChangeEvent, FC, useState, KeyboardEvent } from 'react';\nimport TextareaAutosize from 'react-textarea-autosize';\n\ntype Props = {\n  text: string;\n  className?: string;\n  placeHolder?: string;\n  action?: (title: string) => void;\n  validator?: (text: string) => boolean;\n};\n\nexport const EditField: FC<Props> = ({ text, className, action, validator, placeHolder }) => {\n  const [value, setValue] = useState<string>(text);\n\n  const handleChange = (event: ChangeEvent<HTMLTextAreaElement>): void => {\n    if (validator) {\n      if (validator(event.target.value)) {\n        setValue(event.target.value);\n      }\n      return;\n    }\n    setValue(event.target.value);\n  };\n\n  const handleSubmit = (e: React.FocusEvent<HTMLTextAreaElement>): void => {\n    if (action) {\n      e.target.value.trim();\n      action(e.target.value);\n    }\n  };\n\n  const handleOnKeyDown = (e: KeyboardEvent<HTMLTextAreaElement>): void => {\n    if (e.key === 'Escape') {\n      e.currentTarget.value = text;\n      e.currentTarget.blur();\n    } else if (e.key === 'Enter') {\n      e.currentTarget.blur();\n    }\n  };\n  return (\n    <TextareaAutosize\n      className={className}\n      onKeyDown={handleOnKeyDown}\n      onChange={handleChange}\n      onBlur={handleSubmit}\n      value={value}\n      placeholder={placeHolder}\n    />\n  );\n};\n","import React, { ChangeEvent, FC, useEffect, useRef, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport { addCard, editGroupCards } from '../../store/modules/board/actions';\nimport api from '../../api/request';\nimport config from '../../common/constants/api';\nimport { IBoard } from '../../common/interfaces/IBoard';\nimport { ICard } from '../../common/interfaces/ICard';\nimport { IBoardFull } from '../../common/interfaces/IBoardFull';\nimport { ILists } from '../../common/interfaces/ILists';\nimport { ICards } from '../../common/interfaces/ICards';\nimport { IList } from '../../common/interfaces/IList';\nimport { IDataCardGroup } from '../../common/interfaces/IDataCardGroup';\nimport style from './formRelocate.module.scss';\n\ntype Props = {\n  className?: string;\n  entity: { boardID: number; card: ICard; list: IList };\n  closeModal: () => void;\n  closeRelocate: () => void;\n  editTitle: boolean;\n  formTitle: string;\n  buttonTitle: string;\n};\n\ntype FormData = {\n  board: number;\n  list?: number;\n  position?: number;\n  title: string;\n};\n\ntype DataRelocate = { cardID: number; list_id: number; position: number; title: string };\n\nconst optionBoards = (boards: IBoard[]): React.ReactElement[] => {\n  return boards.map((board) => {\n    return (\n      <option key={board.id} value={board.id}>\n        {board.title}\n      </option>\n    );\n  });\n};\n\nconst optionLists = (lists: ILists): React.ReactElement[] => {\n  return Object.values(lists).map((list) => {\n    return (\n      <option key={list.id} value={list.id}>\n        {list.title}\n      </option>\n    );\n  });\n};\n\nconst optionCards = (cards: ICards, isSameList: boolean): React.ReactElement[] | React.ReactElement => {\n  if (Object.keys(cards).length === 0) {\n    return <option value={0}>1</option>;\n  }\n  const lastOne = (): React.ReactElement | [] => {\n    if (isSameList) return [];\n    const indexPos = Object.keys(cards).length;\n    return (\n      <option key={Date.now()} value={indexPos}>\n        {indexPos + 1}\n      </option>\n    );\n  };\n  return Object.values(cards)\n    .sort((a, b) => a.position - b.position)\n    .map((card, index) => {\n      return (\n        <option key={card.id} value={card.position}>\n          {index + 1}\n        </option>\n      );\n    })\n    .concat(lastOne());\n};\n\nconst sortCardsByPosition = (board: IBoardFull): void => {\n  Object.values(board.lists).forEach((list) => {\n    Object.values(list.cards).sort((a, b) => a.position - b.position);\n  });\n};\n\nconst getFirstListAndCardValues = (\n  board: IBoardFull,\n  currentListID?: number\n): [number | undefined, number | undefined] => {\n  let listID = currentListID;\n  let cardPos;\n  if (Object.keys(board.lists).length > 0) {\n    if (!listID) listID = +Object.keys(board.lists)[0];\n    if (Object.keys(board.lists[listID].cards).length > 0) {\n      const card = Object.values(board.lists[listID].cards)[0];\n      cardPos = card.position;\n    }\n  }\n  return [listID, cardPos];\n};\n\nconst createGroup = (fromList: IList, toList: IList, card: ICard, position: number): IDataCardGroup[] => {\n  const group: IDataCardGroup[] = [];\n  // SAME LIST\n  if (fromList.id === toList.id) {\n    const target = Object.values(fromList.cards).find((value) => value.position === +position) as ICard;\n    group.push(\n      { list_id: fromList.id, id: target.id, position: card.position },\n      { list_id: fromList.id, id: card.id, position }\n    );\n    // ANOTHER LIST\n  } else {\n    group.push({ list_id: toList.id, id: card.id, position });\n    Object.values(fromList.cards).forEach((c) => {\n      if (card.id !== c.id && c.position >= card.position) {\n        group.push({ position: c.position - 1, list_id: fromList.id, id: c.id });\n      }\n    });\n    Object.values(toList.cards).forEach((c) => {\n      if (c.position >= position) {\n        group.push({ position: c.position + 1, list_id: toList.id, id: c.id });\n      }\n    });\n  }\n  return group;\n};\n// TODO: waiting update API.\nconst relocateToAnotherBoard = (list: IList, position: number): DataRelocate[] => {\n  return Object.values(list.cards).reduce<DataRelocate[]>((acc, card) => {\n    if (card.position >= position) {\n      acc.push({ list_id: list.id, cardID: card.id, position: card.position + 1, title: card.title });\n    }\n    return acc;\n  }, []);\n};\n\nconst FormRelocate: FC<Props> = ({ formTitle, buttonTitle, entity, closeModal, closeRelocate, editTitle }) => {\n  const {\n    register,\n    handleSubmit,\n    getValues,\n    setValue,\n    setError,\n    formState: { errors, isValid },\n  } = useForm<FormData>({ mode: 'onChange' });\n  const [boards, setBoards] = useState<IBoard[]>([] as IBoard[]);\n  const [currentBoard, setCurrentBoard] = useState<IBoardFull>({} as IBoardFull);\n  const [currentListID, setCurrentListID] = useState<number | undefined>(undefined);\n  const ref = useRef<HTMLDivElement>(null);\n  const dispatch = useDispatch();\n\n  const loadBoards = async (): Promise<void> => {\n    const dataBoards = await api.get<unknown, { boards: IBoard[] }>(`${config.boards}`);\n    setBoards(dataBoards.boards);\n    setValue('board', dataBoards.boards[0].id);\n  };\n\n  const loadBoard = async (): Promise<void> => {\n    const dataBoard = await api.get<unknown, IBoardFull>(`${config.boards}/${getValues('board')}`);\n    sortCardsByPosition(dataBoard);\n    const [listID, cardPos] = getFirstListAndCardValues(dataBoard);\n    setValue('list', listID);\n    setValue('position', cardPos);\n    setCurrentBoard(dataBoard);\n    setCurrentListID(listID);\n  };\n  // click outside\n  useEffect(() => {\n    const checkIfClickedOutside = (e: Event): void => {\n      if (ref.current && !ref.current.contains(e.target as Node)) {\n        closeRelocate();\n      }\n    };\n    document.addEventListener('mousedown', checkIfClickedOutside);\n    return (): void => {\n      document.removeEventListener('mousedown', checkIfClickedOutside);\n    };\n  }, []);\n  // init data\n  useEffect(() => {\n    (async function f(): Promise<void> {\n      await loadBoards();\n      await loadBoard();\n    })();\n  }, []);\n\n  const onSubmit = handleSubmit((data) => {\n    if (entity.boardID === +data.board) {\n      if (editTitle) {\n        const title = data.title.replace(/\\s\\s+/g, ' ');\n        // TODO: Shift cards\n        // const res = relocateToAnotherBoard(\n        //   currentBoard.lists[getValues('list') as number],\n        //   getValues('position') as number\n        // );\n        // console.log(res);\n        dispatch(\n          addCard(getValues('board').toString(), {\n            title,\n            list_id: getValues('list'),\n            position: getValues('position'),\n          })\n        );\n      } else {\n        const group = createGroup(\n          entity.list,\n          currentBoard.lists[currentListID as number],\n          entity.card,\n          getValues('position') as number\n        );\n        dispatch(editGroupCards(entity.boardID.toString(), group));\n      }\n      closeRelocate();\n    } else {\n      setError('board', { message: 'Relocate to other boards is temporarily unavailable' });\n    }\n  });\n\n  const handleChangeBoard = async (e: ChangeEvent<HTMLSelectElement>): Promise<void> => {\n    register('board').onChange(e);\n    await loadBoard();\n  };\n\n  const handleChangeList = (e: ChangeEvent<HTMLSelectElement>): void => {\n    register('list').onChange(e);\n    const listID = getValues('list');\n    const [, cardPos] = getFirstListAndCardValues(currentBoard, listID);\n    setValue('position', cardPos);\n    setCurrentListID(listID);\n  };\n\n  return (\n    <div className={style.wrapper} ref={ref}>\n      <p className={style.header}>{formTitle}</p>\n      <form onSubmit={onSubmit}>\n        {editTitle && (\n          <div className={style.content}>\n            {errors.title && <p className={style.error}>{errors.title.message}</p>}\n            <p>Название</p>\n            <TextareaAutosize\n              className={style.titleText}\n              {...register('title', {\n                pattern: { value: /^[\\s\\w\\p{L}.-]*$/u, message: 'Only letters and numbers' },\n                required: { value: true, message: 'Must be filled' },\n              })}\n              minRows={3}\n              autoFocus\n              onFocus={(e): void => {\n                e.target.select();\n              }}\n              defaultValue={entity.card.title}\n            />\n          </div>\n        )}\n\n        {errors.board && <p className={style.error}>{errors.board.message}</p>}\n        <div className={style.content}>\n          <label htmlFor=\"board\">Доска</label>\n          <select {...register('board')} onChange={handleChangeBoard}>\n            {optionBoards(boards)}\n          </select>\n        </div>\n\n        <div className={style.contentWrapper}>\n          <div className={style.content} style={{ width: '150px' }}>\n            <label htmlFor=\"list\">Список</label>\n            {currentListID ? (\n              <select {...register('list')} onChange={handleChangeList}>\n                {optionLists(currentBoard.lists)}\n              </select>\n            ) : (\n              <select {...register('list')} disabled value={-1}>\n                <option value={-1}>Нет списков</option>\n              </select>\n            )}\n          </div>\n\n          <div className={style.content} style={{ width: '100px' }}>\n            <label htmlFor=\"card\">Позиция</label>\n            {currentListID && currentBoard.lists[currentListID]?.cards ? (\n              <select {...register('position')}>\n                {optionCards(currentBoard.lists[currentListID].cards, +currentListID === entity.list.id)}\n              </select>\n            ) : (\n              <select {...register('position')} disabled value={-1}>\n                <option value={-1}>Н/Д</option>\n              </select>\n            )}\n          </div>\n        </div>\n\n        <input className={style.submit} type=\"submit\" value={buttonTitle} disabled={!isValid} />\n      </form>\n    </div>\n  );\n};\n\nexport default FormRelocate;\n","import React, { ReactElement, useEffect, useState } from 'react';\nimport { RouteComponentProps, useHistory, useLocation, useParams, withRouter } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport Modal from '../Modal';\nimport { EditField } from './EditField/EditField';\nimport { deleteCard, editCard } from '../../../store/modules/board/actions';\nimport validator, { pattern } from '../../../common/validator/validator';\nimport { useTypedSelector } from '../../../hooks/useTypedSelector';\nimport { ILists } from '../../../common/interfaces/ILists';\nimport { IList } from '../../../common/interfaces/IList';\nimport FormRelocate from '../../FormRelocate/FormRelocate';\nimport style from './editCard.module.scss';\n\nconst getListByCardID = (lists: ILists, cardID: number): IList => {\n  let foundList: IList = {} as IList;\n  Object.values(lists).forEach((list) => {\n    const card = Object.values(list.cards).find((value) => value.id === cardID);\n    if (card) foundList = list;\n  });\n  return foundList;\n};\n\nconst EditCard = (): ReactElement<RouteComponentProps> => {\n  const history = useHistory();\n  const { id: boardID, cardID } = useParams<{ id: string; cardID: string }>();\n  const { state: stateLocation } = useLocation<{ cardID: number; listID: number }>();\n  const [modal, setModal] = useState(false);\n  const [relocate, setRelocate] = useState(false);\n  const [copy, setCopy] = useState(false);\n  const lists = useTypedSelector((boardState) => boardState.board.board.lists);\n  const originList = getListByCardID(lists, +cardID);\n  const originCard = originList.cards[cardID];\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setModal(true);\n  }, [stateLocation]);\n\n  const historyBack = (): void => history.replace(`/board/${boardID}`);\n\n  const changeTitle = (text: string): void => {\n    if (originCard.title !== text) {\n      dispatch(editCard(boardID, originCard.id, { title: text }));\n    }\n  };\n  const handleDeleteCard = (): void => {\n    dispatch(deleteCard(boardID, originCard.id));\n    history.replace(`/board/${boardID}`);\n  };\n  const validateTitle = (text: string): boolean => {\n    return validator(pattern, text);\n  };\n  const closeModal = (): void => {\n    setModal(false);\n    historyBack();\n  };\n  const closeRelocate = (): void => {\n    setRelocate(false);\n  };\n  const closeCopy = (): void => {\n    setCopy(false);\n  };\n  const changeDescription = (text: string): void => {\n    if (originCard.description !== text) {\n      if (!text) {\n        dispatch(editCard(boardID, originCard.id, { description: null }));\n        return;\n      }\n      dispatch(editCard(boardID, originCard.id, { description: text }));\n    }\n  };\n  const toggleRelocate = (): void => {\n    setRelocate((prevRelocate) => !prevRelocate);\n  };\n  const toggleCopy = (): void => {\n    setCopy((prevCopy) => !prevCopy);\n  };\n\n  const content = originList ? (\n    <div className={style.wrapper}>\n      <div className={style.header}>\n        <span className={`${style.headerIcon} material-icons-round md-24`}>list_alt</span>\n        <EditField className={style.titleCard} text={originCard.title} action={changeTitle} validator={validateTitle} />\n        <div>\n          В колонке <span className={style.titleList}>{originList.title}</span>\n        </div>\n      </div>\n      <div className={style.main}>\n        <span className={`${style.mainIcon} material-icons-round`}>notes</span>\n        <div>Описание</div>\n        <EditField\n          className={style.description}\n          text={originCard.description}\n          action={changeDescription}\n          placeHolder=\"Добавить более подробное описание...\"\n        />\n      </div>\n      <div className={style.side}>\n        <h4 className={style.sideTitle}>Действия:</h4>\n        <button className={style.button} onClick={toggleCopy}>\n          Копирование\n        </button>\n        <button className={style.button} onClick={toggleRelocate}>\n          Перемещение\n        </button>\n        <button className={style.button} onClick={handleDeleteCard}>\n          Удалить\n        </button>\n      </div>\n      {relocate ? (\n        <FormRelocate\n          formTitle=\"Перемещение карточки\"\n          buttonTitle=\"Переместить\"\n          entity={{\n            card: originCard,\n            list: originList,\n            boardID: +boardID,\n          }}\n          closeModal={closeModal}\n          closeRelocate={closeRelocate}\n          editTitle={false}\n        />\n      ) : null}\n      {copy ? (\n        <FormRelocate\n          formTitle=\"Копирование карточки\"\n          buttonTitle=\"Создать карточку\"\n          entity={{\n            card: originCard,\n            list: originList,\n            boardID: +boardID,\n          }}\n          closeModal={closeModal}\n          closeRelocate={closeCopy}\n          editTitle\n        />\n      ) : null}\n    </div>\n  ) : null;\n\n  return (\n    <Modal active={modal} setActive={setModal} onClose={historyBack}>\n      {content}\n    </Modal>\n  );\n};\n\nexport default withRouter(EditCard);\n","import React, { useEffect, VoidFunctionComponent } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\nimport api from '../../common/constants/api';\nimport { admission, setToken } from '../../api/request';\nimport { IAdmission } from '../../common/interfaces/IAdmission';\nimport history from '../../common/history/history';\nimport style from './authorization.module.scss';\n\ninterface FormData {\n  email: string;\n  password: string;\n  submit: string;\n}\n\nenum ErrorFormMessage {\n  REQUIRE = 'Обязательно для заполнения',\n  INVALID_DATA = 'Пользователь с такой почтой или паролем не найден',\n}\n\nconst Authorization: VoidFunctionComponent = () => {\n  const {\n    register,\n    handleSubmit,\n    setError,\n    clearErrors,\n    watch,\n    formState: { errors },\n  } = useForm<FormData>({ mode: 'onTouched' });\n\n  useEffect(() => {\n    clearErrors('submit');\n  }, [watch('email')]);\n\n  const onSubmit = handleSubmit(async (data) => {\n    const user: IAdmission = { email: data.email, password: data.password };\n    await admission\n      .post<unknown, { token: string }>(api.login, user)\n      .then((value) => {\n        setToken(value.token);\n        history.push('/');\n      })\n      .catch(() => {\n        setError('submit', { message: ErrorFormMessage.INVALID_DATA });\n      });\n  });\n\n  return (\n    <div className={style.wrapper}>\n      <form className={style.form} onSubmit={onSubmit}>\n        <p className={style.title}>Вход</p>\n\n        <div className={style.contentBlock}>\n          <label htmlFor=\"email\">Email</label>\n          {errors.email && (\n            <label className={style.error} htmlFor=\"email\">\n              {errors.email.message}\n            </label>\n          )}\n          <input\n            className={style.input}\n            {...register('email', { required: { value: true, message: ErrorFormMessage.REQUIRE } })}\n          />\n        </div>\n\n        <div className={style.contentBlock}>\n          <label htmlFor=\"password\">Пароль</label>\n          {errors.password && <p className={style.error}>{errors.password.message}</p>}\n          <input\n            className={style.input}\n            {...register('password', { required: { value: true, message: ErrorFormMessage.REQUIRE } })}\n            type=\"password\"\n          />\n        </div>\n        {errors.submit && <label className={style.error}>{errors.submit.message}</label>}\n        <input className={style.submitButton} {...register('submit')} type=\"submit\" value=\"Войти\" />\n\n        <div className={style.loginWrapper}>\n          <span className={style.linkTitle}>Впервые у нас?</span>\n          <Link className={style.link} to=\"/signup\">\n            Зарегестрироваться\n          </Link>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Authorization;\n","import React, { CSSProperties, ReactElement } from 'react';\nimport { Redirect, Route, RouteProps } from 'react-router-dom';\nimport { deleteToken, getToken } from '../../api/request';\nimport history from '../../common/history/history';\nimport '../../common/constants/style.scss';\n\nexport interface ProtectedRouteProps extends RouteProps {\n  isAuthenticated: boolean;\n  redirectPath: string;\n}\n\nconst wrapperLogOut: CSSProperties = {\n  marginTop: '5px',\n  display: 'flex',\n  justifyContent: 'flex-end',\n};\n\nexport class ProtectedRoute extends Route<ProtectedRouteProps> {\n  render(): ReactElement {\n    let redirectPath = '';\n    if (this.props.isAuthenticated) {\n      redirectPath = this.props.redirectPath;\n    }\n\n    const onClickLogOut = (): void => {\n      deleteToken();\n      history.push('/login');\n    };\n\n    if (redirectPath) {\n      const renderComponent = (): ReactElement => <Redirect to={{ pathname: redirectPath }} />;\n      return <Route {...this.props} component={renderComponent} render={undefined} />;\n    }\n\n    return (\n      <>\n        {getToken() && (\n          <div style={wrapperLogOut}>\n            <button className=\"primaryButton\" onClick={onClickLogOut}>\n              Выйти\n            </button>\n          </div>\n        )}\n        <Route {...this.props} />\n      </>\n    );\n  }\n}\n","import React, { ReactElement } from 'react';\nimport { Switch, Route, useLocation } from 'react-router-dom';\nimport ReactNotification from 'react-notifications-component';\nimport 'react-notifications-component/dist/theme.css';\nimport Board from './pages/Board/Board';\nimport Home from './pages/Home/Home';\nimport EditCard from './components/Modal/EditCard/EditCard';\nimport { useTypedSelector } from './hooks/useTypedSelector';\nimport { Registration } from './pages/Registration/Registration';\nimport Authorization from './pages/Authorization/Authorization';\nimport { ProtectedRoute, ProtectedRouteProps } from './components/ProtectedRoute/ProtectedRoute';\nimport { getToken } from './api/request';\n\nexport default function App(): ReactElement {\n  const { state } = useLocation<{ cardID: number }>();\n  const boardState = useTypedSelector((value) => value.board.board);\n  const authorized: ProtectedRouteProps = {\n    redirectPath: '/login',\n    isAuthenticated: !getToken(),\n  };\n  const unauthorized: ProtectedRouteProps = {\n    redirectPath: '/',\n    isAuthenticated: !!getToken(),\n  };\n  return (\n    <div className=\"container\">\n      <ReactNotification />\n      <Switch>\n        <ProtectedRoute path=\"/signup\" {...unauthorized} component={Registration} />\n        <ProtectedRoute path=\"/login\" {...unauthorized} component={Authorization} />\n        <ProtectedRoute path=\"/board/:id\" {...authorized} component={Board} />\n        <ProtectedRoute path=\"/\" {...authorized} component={Home} />\n      </Switch>\n      {state?.cardID && boardState?.title ? <Route exact path=\"/board/:id/card/:cardID\" component={EditCard} /> : null}\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router-dom';\nimport App from './App';\nimport store from './store/store';\nimport history from './common/history/history';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router history={history}>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"card_container__m1S0j\",\"card\":\"card_card__2J7vF\",\"title\":\"card_title__mik6v\",\"buttonRemove\":\"card_buttonRemove__14-6q\",\"hide\":\"card_hide__xauNQ\",\"icon\":\"card_icon__25Ch9\",\"dragStart\":\"card_dragStart__3z2BS\",\"dragOver\":\"card_dragOver__3mVBB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryButton\":\"authorization_primaryButton__1kXOI\",\"wrapper\":\"authorization_wrapper__2qGED\",\"error\":\"authorization_error__P4g6l\",\"form\":\"authorization_form__FcbQn\",\"title\":\"authorization_title__3aBex\",\"contentBlock\":\"authorization_contentBlock__eBsWQ\",\"input\":\"authorization_input__1SS2c\",\"submitButton\":\"authorization_submitButton__39Uqm\",\"loginWrapper\":\"authorization_loginWrapper__2DzvF\",\"linkTitle\":\"authorization_linkTitle__1qohg\",\"link\":\"authorization_link__2Zjzq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryButton\":\"editCard_primaryButton__3OptZ\",\"header\":\"editCard_header__2Ep2x\",\"headerIcon\":\"editCard_headerIcon__2Q0tr\",\"titleCard\":\"editCard_titleCard__2A4fY\",\"description\":\"editCard_description__2LtTL\",\"titleList\":\"editCard_titleList__2z7_e\",\"main\":\"editCard_main__39El2\",\"mainIcon\":\"editCard_mainIcon__2T1tc\",\"side\":\"editCard_side__6IJ-e\",\"button\":\"editCard_button__1XN2V\",\"sideTitle\":\"editCard_sideTitle__2wG51\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryButton\":\"registration_primaryButton__1szUN\",\"wrapper\":\"registration_wrapper__28NvH\",\"form\":\"registration_form__3O0e_\",\"error\":\"registration_error__11MMK\",\"title\":\"registration_title__378an\",\"contentBlock\":\"registration_contentBlock__2mnuQ\",\"submitButton\":\"registration_submitButton__139Kb\",\"loginWrapper\":\"registration_loginWrapper__3f9i0\",\"linkTitle\":\"registration_linkTitle__1XKaP\",\"link\":\"registration_link__2ibGQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryButton\":\"formRelocate_primaryButton__292Pf\",\"wrapper\":\"formRelocate_wrapper__1dxuh\",\"submit\":\"formRelocate_submit__4kYMD\",\"error\":\"formRelocate_error__3NNIQ\",\"header\":\"formRelocate_header__h4oNi\",\"contentWrapper\":\"formRelocate_contentWrapper__3sHJI\",\"content\":\"formRelocate_content__3kWCw\",\"contentselect\":\"formRelocate_contentselect__22EHh\",\"titleText\":\"formRelocate_titleText__2RdNm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryButton\":\"composer_primaryButton__2X7EL\",\"buttonAdd\":\"composer_buttonAdd__17Wsw\",\"wrapper\":\"composer_wrapper__2KfPI\",\"composer\":\"composer_composer__7SBJz\",\"textArea\":\"composer_textArea__3KQqa\",\"hide\":\"composer_hide__2p0Do\",\"buttonCancel\":\"composer_buttonCancel__1QZr6\",\"control\":\"composer_control__3qFBh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryButton\":\"list_primaryButton__Y-Jno\",\"list\":\"list_list__SL2-f\",\"header\":\"list_header__26bxF\",\"title\":\"list_title__2kuWo\",\"cards\":\"list_cards__1rvo9\",\"buttonRemoveList\":\"list_buttonRemoveList__LRdJ-\",\"icon\":\"list_icon__1Khrx\",\"buttonAddCard\":\"list_buttonAddCard__2qNjm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryButton\":\"board_primaryButton__zQ4mi\",\"header\":\"board_header__19Fgr\",\"buttonAddList\":\"board_buttonAddList__30o4I\",\"boardCanvas\":\"board_boardCanvas__HrTgO\",\"lists\":\"board_lists__1zRNg\",\"loaderWrap\":\"board_loaderWrap__1Vuwd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__3Os-o\",\"active\":\"modal_active__DY8Qi\",\"content\":\"modal_content__2s-YZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryButton\":\"editor_primaryButton__3Em41\",\"hide\":\"editor_hide__33Vr5\",\"modifierTitle\":\"editor_modifierTitle__1K9Il\",\"modifierEditArea\":\"editor_modifierEditArea__2rJEl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryButton\":\"home_primaryButton__18prE\",\"borders\":\"home_borders__1uvQo\",\"button\":\"home_button__3i_HQ\",\"title\":\"home_title__3CEKH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryButton\":\"content_primaryButton__2MNr2\",\"buttonCreate\":\"content_buttonCreate__HxHn6\",\"content\":\"content_content__2RxeI\",\"text\":\"content_text__2EpXV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryButton\":\"board_primaryButton__2pKw1\",\"board\":\"board_board__2o7ge\"};"],"sourceRoot":""}